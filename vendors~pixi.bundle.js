(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendors~pixi"],{

/***/ "./node_modules/@pixi/filter-adjustment/lib/filter-adjustment.esm.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@pixi/filter-adjustment/lib/filter-adjustment.esm.js ***!
  \***************************************************************************/
/*! exports provided: AdjustmentFilter */
/*! exports used: AdjustmentFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AdjustmentFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/*!\n * @pixi/filter-adjustment - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-adjustment is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform float gamma;\\nuniform float contrast;\\nuniform float saturation;\\nuniform float brightness;\\nuniform float red;\\nuniform float green;\\nuniform float blue;\\nuniform float alpha;\\n\\nvoid main(void)\\n{\\n    vec4 c = texture2D(uSampler, vTextureCoord);\\n\\n    if (c.a > 0.0) {\\n        c.rgb /= c.a;\\n\\n        vec3 rgb = pow(c.rgb, vec3(1. / gamma));\\n        rgb = mix(vec3(.5), mix(vec3(dot(vec3(.2125, .7154, .0721), rgb)), rgb, saturation), contrast);\\n        rgb.r *= red;\\n        rgb.g *= green;\\n        rgb.b *= blue;\\n        c.rgb = rgb * brightness;\\n\\n        c.rgb *= c.a;\\n    }\\n\\n    gl_FragColor = c * alpha;\\n}\\n\";\n\n/**\n * The ability to adjust gamma, contrast, saturation, brightness, alpha or color-channel shift. This is a faster\n * and much simpler to use than {@link http://pixijs.download/release/docs/PIXI.filters.ColorMatrixFilter.html ColorMatrixFilter}\n * because it does not use a matrix.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/adjustment.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-adjustment|@pixi/filter-adjustment}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n *\n * @param {object|number} [options] - The optional parameters of the filter.\n * @param {number} [options.gamma=1] - The amount of luminance\n * @param {number} [options.saturation=1] - The amount of color saturation\n * @param {number} [options.contrast=1] - The amount of contrast\n * @param {number} [options.brightness=1] - The overall brightness\n * @param {number} [options.red=1] - The multipled red channel\n * @param {number} [options.green=1] - The multipled green channel\n * @param {number} [options.blue=1] - The multipled blue channel\n * @param {number} [options.alpha=1] - The overall alpha amount\n */\nvar AdjustmentFilter = /*@__PURE__*/(function (Filter) {\n    function AdjustmentFilter(options) {\n        Filter.call(this, vertex, fragment);\n\n        Object.assign(this, {\n            /**\n             * The amount of luminance\n             * @member {number}\n             * @memberof PIXI.filters.AdjustmentFilter#\n             * @default 1\n             */\n            gamma: 1,\n\n            /**\n             * The amount of saturation\n             * @member {number}\n             * @memberof PIXI.filters.AdjustmentFilter#\n             * @default 1\n             */\n            saturation: 1,\n\n            /**\n             * The amount of contrast\n             * @member {number}\n             * @memberof PIXI.filters.AdjustmentFilter#\n             * @default 1\n             */\n            contrast: 1,\n\n            /**\n             * The amount of brightness\n             * @member {number}\n             * @memberof PIXI.filters.AdjustmentFilter#\n             * @default 1\n             */\n            brightness: 1,\n\n            /**\n             * The amount of red channel\n             * @member {number}\n             * @memberof PIXI.filters.AdjustmentFilter#\n             * @default 1\n             */\n            red: 1,\n\n            /**\n             * The amount of green channel\n             * @member {number}\n             * @memberof PIXI.filters.AdjustmentFilter#\n             * @default 1\n             */\n            green: 1,\n\n            /**\n             * The amount of blue channel\n             * @member {number}\n             * @memberof PIXI.filters.AdjustmentFilter#\n             * @default 1\n             */\n            blue: 1,\n\n            /**\n             * The amount of alpha channel\n             * @member {number}\n             * @memberof PIXI.filters.AdjustmentFilter#\n             * @default 1\n             */\n            alpha: 1,\n        }, options);\n    }\n\n    if ( Filter ) AdjustmentFilter.__proto__ = Filter;\n    AdjustmentFilter.prototype = Object.create( Filter && Filter.prototype );\n    AdjustmentFilter.prototype.constructor = AdjustmentFilter;\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AdjustmentFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.gamma = Math.max(this.gamma, 0.0001);\n        this.uniforms.saturation = this.saturation;\n        this.uniforms.contrast = this.contrast;\n        this.uniforms.brightness = this.brightness;\n        this.uniforms.red = this.red;\n        this.uniforms.green = this.green;\n        this.uniforms.blue = this.blue;\n        this.uniforms.alpha = this.alpha;\n\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    return AdjustmentFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLWFkanVzdG1lbnQvbGliL2ZpbHRlci1hZGp1c3RtZW50LmVzbS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9zcmMvQWRqdXN0bWVudEZpbHRlci5qcz9iYTMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dmVydGV4fSBmcm9tICdAdG9vbHMvZnJhZ21lbnRzJztcbmltcG9ydCBmcmFnbWVudCBmcm9tICcuL2FkanVzdG1lbnQuZnJhZyc7XG5pbXBvcnQge0ZpbHRlcn0gZnJvbSAnQHBpeGkvY29yZSc7XG5cbi8qKlxuICogVGhlIGFiaWxpdHkgdG8gYWRqdXN0IGdhbW1hLCBjb250cmFzdCwgc2F0dXJhdGlvbiwgYnJpZ2h0bmVzcywgYWxwaGEgb3IgY29sb3ItY2hhbm5lbCBzaGlmdC4gVGhpcyBpcyBhIGZhc3RlclxuICogYW5kIG11Y2ggc2ltcGxlciB0byB1c2UgdGhhbiB7QGxpbmsgaHR0cDovL3BpeGlqcy5kb3dubG9hZC9yZWxlYXNlL2RvY3MvUElYSS5maWx0ZXJzLkNvbG9yTWF0cml4RmlsdGVyLmh0bWwgQ29sb3JNYXRyaXhGaWx0ZXJ9XG4gKiBiZWNhdXNlIGl0IGRvZXMgbm90IHVzZSBhIG1hdHJpeC48YnI+XG4gKiAhW29yaWdpbmFsXSguLi90b29scy9zY3JlZW5zaG90cy9kaXN0L29yaWdpbmFsLnBuZykhW2ZpbHRlcl0oLi4vdG9vbHMvc2NyZWVuc2hvdHMvZGlzdC9hZGp1c3RtZW50LnBuZylcbiAqXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIFBJWEkuRmlsdGVyXG4gKiBAbWVtYmVyb2YgUElYSS5maWx0ZXJzXG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9AcGl4aS9maWx0ZXItYWRqdXN0bWVudHxAcGl4aS9maWx0ZXItYWRqdXN0bWVudH1cbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL3BpeGktZmlsdGVyc3xwaXhpLWZpbHRlcnN9XG4gKlxuICogQHBhcmFtIHtvYmplY3R8bnVtYmVyfSBbb3B0aW9uc10gLSBUaGUgb3B0aW9uYWwgcGFyYW1ldGVycyBvZiB0aGUgZmlsdGVyLlxuICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLmdhbW1hPTFdIC0gVGhlIGFtb3VudCBvZiBsdW1pbmFuY2VcbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy5zYXR1cmF0aW9uPTFdIC0gVGhlIGFtb3VudCBvZiBjb2xvciBzYXR1cmF0aW9uXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMuY29udHJhc3Q9MV0gLSBUaGUgYW1vdW50IG9mIGNvbnRyYXN0XG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMuYnJpZ2h0bmVzcz0xXSAtIFRoZSBvdmVyYWxsIGJyaWdodG5lc3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy5yZWQ9MV0gLSBUaGUgbXVsdGlwbGVkIHJlZCBjaGFubmVsXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMuZ3JlZW49MV0gLSBUaGUgbXVsdGlwbGVkIGdyZWVuIGNoYW5uZWxcbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy5ibHVlPTFdIC0gVGhlIG11bHRpcGxlZCBibHVlIGNoYW5uZWxcbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy5hbHBoYT0xXSAtIFRoZSBvdmVyYWxsIGFscGhhIGFtb3VudFxuICovXG5jbGFzcyBBZGp1c3RtZW50RmlsdGVyIGV4dGVuZHMgRmlsdGVyIHtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgICAgIHN1cGVyKHZlcnRleCwgZnJhZ21lbnQpO1xuXG4gICAgICAgIE9iamVjdC5hc3NpZ24odGhpcywge1xuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBUaGUgYW1vdW50IG9mIGx1bWluYW5jZVxuICAgICAgICAgICAgICogQG1lbWJlciB7bnVtYmVyfVxuICAgICAgICAgICAgICogQG1lbWJlcm9mIFBJWEkuZmlsdGVycy5BZGp1c3RtZW50RmlsdGVyI1xuICAgICAgICAgICAgICogQGRlZmF1bHQgMVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBnYW1tYTogMSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBUaGUgYW1vdW50IG9mIHNhdHVyYXRpb25cbiAgICAgICAgICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgICAgICAgICAqIEBtZW1iZXJvZiBQSVhJLmZpbHRlcnMuQWRqdXN0bWVudEZpbHRlciNcbiAgICAgICAgICAgICAqIEBkZWZhdWx0IDFcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgc2F0dXJhdGlvbjogMSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBUaGUgYW1vdW50IG9mIGNvbnRyYXN0XG4gICAgICAgICAgICAgKiBAbWVtYmVyIHtudW1iZXJ9XG4gICAgICAgICAgICAgKiBAbWVtYmVyb2YgUElYSS5maWx0ZXJzLkFkanVzdG1lbnRGaWx0ZXIjXG4gICAgICAgICAgICAgKiBAZGVmYXVsdCAxXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGNvbnRyYXN0OiAxLFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIFRoZSBhbW91bnQgb2YgYnJpZ2h0bmVzc1xuICAgICAgICAgICAgICogQG1lbWJlciB7bnVtYmVyfVxuICAgICAgICAgICAgICogQG1lbWJlcm9mIFBJWEkuZmlsdGVycy5BZGp1c3RtZW50RmlsdGVyI1xuICAgICAgICAgICAgICogQGRlZmF1bHQgMVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBicmlnaHRuZXNzOiAxLFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIFRoZSBhbW91bnQgb2YgcmVkIGNoYW5uZWxcbiAgICAgICAgICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgICAgICAgICAqIEBtZW1iZXJvZiBQSVhJLmZpbHRlcnMuQWRqdXN0bWVudEZpbHRlciNcbiAgICAgICAgICAgICAqIEBkZWZhdWx0IDFcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgcmVkOiAxLFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIFRoZSBhbW91bnQgb2YgZ3JlZW4gY2hhbm5lbFxuICAgICAgICAgICAgICogQG1lbWJlciB7bnVtYmVyfVxuICAgICAgICAgICAgICogQG1lbWJlcm9mIFBJWEkuZmlsdGVycy5BZGp1c3RtZW50RmlsdGVyI1xuICAgICAgICAgICAgICogQGRlZmF1bHQgMVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBncmVlbjogMSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBUaGUgYW1vdW50IG9mIGJsdWUgY2hhbm5lbFxuICAgICAgICAgICAgICogQG1lbWJlciB7bnVtYmVyfVxuICAgICAgICAgICAgICogQG1lbWJlcm9mIFBJWEkuZmlsdGVycy5BZGp1c3RtZW50RmlsdGVyI1xuICAgICAgICAgICAgICogQGRlZmF1bHQgMVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBibHVlOiAxLFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIFRoZSBhbW91bnQgb2YgYWxwaGEgY2hhbm5lbFxuICAgICAgICAgICAgICogQG1lbWJlciB7bnVtYmVyfVxuICAgICAgICAgICAgICogQG1lbWJlcm9mIFBJWEkuZmlsdGVycy5BZGp1c3RtZW50RmlsdGVyI1xuICAgICAgICAgICAgICogQGRlZmF1bHQgMVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBhbHBoYTogMSxcbiAgICAgICAgfSwgb3B0aW9ucyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogT3ZlcnJpZGUgZXhpc3RpbmcgYXBwbHkgbWV0aG9kIGluIFBJWEkuRmlsdGVyXG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBhcHBseShmaWx0ZXJNYW5hZ2VyLCBpbnB1dCwgb3V0cHV0LCBjbGVhcikge1xuICAgICAgICB0aGlzLnVuaWZvcm1zLmdhbW1hID0gTWF0aC5tYXgodGhpcy5nYW1tYSwgMC4wMDAxKTtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5zYXR1cmF0aW9uID0gdGhpcy5zYXR1cmF0aW9uO1xuICAgICAgICB0aGlzLnVuaWZvcm1zLmNvbnRyYXN0ID0gdGhpcy5jb250cmFzdDtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5icmlnaHRuZXNzID0gdGhpcy5icmlnaHRuZXNzO1xuICAgICAgICB0aGlzLnVuaWZvcm1zLnJlZCA9IHRoaXMucmVkO1xuICAgICAgICB0aGlzLnVuaWZvcm1zLmdyZWVuID0gdGhpcy5ncmVlbjtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5ibHVlID0gdGhpcy5ibHVlO1xuICAgICAgICB0aGlzLnVuaWZvcm1zLmFscGhhID0gdGhpcy5hbHBoYTtcblxuICAgICAgICBmaWx0ZXJNYW5hZ2VyLmFwcGx5RmlsdGVyKHRoaXMsIGlucHV0LCBvdXRwdXQsIGNsZWFyKTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IEFkanVzdG1lbnRGaWx0ZXIgfTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTBCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBT0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBOzs7Ozs7O0FBT0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBOzs7Ozs7O0FBT0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7Ozs7O0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUF2RkE7QUFDQTs7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-adjustment/lib/filter-adjustment.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-advanced-bloom/lib/filter-advanced-bloom.esm.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@pixi/filter-advanced-bloom/lib/filter-advanced-bloom.esm.js ***!
  \***********************************************************************************/
/*! exports provided: AdvancedBloomFilter */
/*! exports used: AdvancedBloomFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AdvancedBloomFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/* harmony import */ var _pixi_filter_kawase_blur__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixi/filter-kawase-blur */ \"./node_modules/@pixi/filter-kawase-blur/lib/filter-kawase-blur.esm.js\");\n/* harmony import */ var _pixi_settings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @pixi/settings */ \"./node_modules/@pixi/settings/lib/settings.es.js\");\n/*!\n * @pixi/filter-advanced-bloom - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-advanced-bloom is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"\\nuniform sampler2D uSampler;\\nvarying vec2 vTextureCoord;\\n\\nuniform float threshold;\\n\\nvoid main() {\\n    vec4 color = texture2D(uSampler, vTextureCoord);\\n\\n    // A simple & fast algorithm for getting brightness.\\n    // It's inaccuracy , but good enought for this feature.\\n    float _max = max(max(color.r, color.g), color.b);\\n    float _min = min(min(color.r, color.g), color.b);\\n    float brightness = (_max + _min) * 0.5;\\n\\n    if(brightness > threshold) {\\n        gl_FragColor = color;\\n    } else {\\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\n    }\\n}\\n\";\n\n/**\n * Internal filter for AdvancedBloomFilter to get brightness.\n * @class\n * @private\n * @param {number} [threshold=0.5] Defines how bright a color needs to be extracted.\n */\nvar ExtractBrightnessFilter = /*@__PURE__*/(function (Filter) {\n    function ExtractBrightnessFilter(threshold) {\n        if ( threshold === void 0 ) threshold = 0.5;\n\n        Filter.call(this, vertex, fragment);\n\n        this.threshold = threshold;\n    }\n\n    if ( Filter ) ExtractBrightnessFilter.__proto__ = Filter;\n    ExtractBrightnessFilter.prototype = Object.create( Filter && Filter.prototype );\n    ExtractBrightnessFilter.prototype.constructor = ExtractBrightnessFilter;\n\n    var prototypeAccessors = { threshold: { configurable: true } };\n\n    /**\n     * Defines how bright a color needs to be extracted.\n     *\n     * @member {number}\n     * @default 0.5\n     */\n    prototypeAccessors.threshold.get = function () {\n        return this.uniforms.threshold;\n    };\n    prototypeAccessors.threshold.set = function (value) {\n        this.uniforms.threshold = value;\n    };\n\n    Object.defineProperties( ExtractBrightnessFilter.prototype, prototypeAccessors );\n\n    return ExtractBrightnessFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\nvar fragment$1 = \"uniform sampler2D uSampler;\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D bloomTexture;\\nuniform float bloomScale;\\nuniform float brightness;\\n\\nvoid main() {\\n    vec4 color = texture2D(uSampler, vTextureCoord);\\n    color.rgb *= brightness;\\n    vec4 bloomColor = vec4(texture2D(bloomTexture, vTextureCoord).rgb, 0.0);\\n    bloomColor.rgb *= bloomScale;\\n    gl_FragColor = color + bloomColor;\\n}\\n\";\n\n/**\n * The AdvancedBloomFilter applies a Bloom Effect to an object. Unlike the normal BloomFilter\n * this had some advanced controls for adjusting the look of the bloom. Note: this filter\n * is slower than normal BloomFilter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/advanced-bloom.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-advanced-bloom|@pixi/filter-advanced-bloom}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n *\n * @param {object|number} [options] - The optional parameters of advanced bloom filter.\n *                        When options is a number , it will be `options.threshold`.\n * @param {number} [options.threshold=0.5] - Defines how bright a color needs to be to affect bloom.\n * @param {number} [options.bloomScale=1.0] - To adjust the strength of the bloom. Higher values is more intense brightness.\n * @param {number} [options.brightness=1.0] - The brightness, lower value is more subtle brightness, higher value is blown-out.\n * @param {number} [options.blur=8] - Sets the strength of the Blur properties simultaneously\n * @param {number} [options.quality=4] - The quality of the Blur filter.\n * @param {number[]} [options.kernels=null] - The kernels of the Blur filter.\n * @param {number|number[]|PIXI.Point} [options.pixelSize=1] - the pixelSize of the Blur filter.\n * @param {number} [options.resolution=PIXI.settings.RESOLUTION] - The resolution of the Blur filter.\n */\nvar AdvancedBloomFilter = /*@__PURE__*/(function (Filter) {\n    function AdvancedBloomFilter(options) {\n\n        Filter.call(this, vertex, fragment$1);\n\n        if (typeof options === 'number') {\n            options = { threshold: options };\n        }\n\n        options = Object.assign({\n            threshold: 0.5,\n            bloomScale: 1.0,\n            brightness: 1.0,\n            kernels: null,\n            blur: 8,\n            quality: 4,\n            pixelSize: 1,\n            resolution: _pixi_settings__WEBPACK_IMPORTED_MODULE_2__[/* settings */ \"b\"].RESOLUTION,\n        }, options);\n\n        /**\n         * To adjust the strength of the bloom. Higher values is more intense brightness.\n         *\n         * @member {number}\n         * @default 1.0\n         */\n        this.bloomScale = options.bloomScale;\n\n        /**\n         * The brightness, lower value is more subtle brightness, higher value is blown-out.\n         *\n         * @member {number}\n         * @default 1.0\n         */\n        this.brightness = options.brightness;\n\n        var kernels = options.kernels;\n        var blur = options.blur;\n        var quality = options.quality;\n        var pixelSize = options.pixelSize;\n        var resolution = options.resolution;\n\n        this._extractFilter = new ExtractBrightnessFilter(options.threshold);\n        this._extractFilter.resolution = resolution;\n        this._blurFilter = kernels ?\n            new _pixi_filter_kawase_blur__WEBPACK_IMPORTED_MODULE_1__[/* KawaseBlurFilter */ \"a\"](kernels) :\n            new _pixi_filter_kawase_blur__WEBPACK_IMPORTED_MODULE_1__[/* KawaseBlurFilter */ \"a\"](blur, quality);\n        this.pixelSize = pixelSize;\n        this.resolution = resolution;\n    }\n\n    if ( Filter ) AdvancedBloomFilter.__proto__ = Filter;\n    AdvancedBloomFilter.prototype = Object.create( Filter && Filter.prototype );\n    AdvancedBloomFilter.prototype.constructor = AdvancedBloomFilter;\n\n    var prototypeAccessors = { resolution: { configurable: true },threshold: { configurable: true },kernels: { configurable: true },blur: { configurable: true },quality: { configurable: true },pixelSize: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AdvancedBloomFilter.prototype.apply = function apply (filterManager, input, output, clear, currentState) {\n\n        var brightTarget = filterManager.getFilterTexture();\n\n        this._extractFilter.apply(filterManager, input, brightTarget, true, currentState);\n\n        var bloomTarget = filterManager.getFilterTexture();\n\n        this._blurFilter.apply(filterManager, brightTarget, bloomTarget, true, currentState);\n\n        this.uniforms.bloomScale = this.bloomScale;\n        this.uniforms.brightness = this.brightness;\n        this.uniforms.bloomTexture = bloomTarget;\n\n        filterManager.applyFilter(this, input, output, clear);\n\n        filterManager.returnFilterTexture(bloomTarget);\n        filterManager.returnFilterTexture(brightTarget);\n    };\n\n    /**\n     * The resolution of the filter.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.resolution.get = function () {\n        return this._resolution;\n    };\n    prototypeAccessors.resolution.set = function (value) {\n        this._resolution = value;\n\n        if (this._extractFilter) {\n            this._extractFilter.resolution = value;\n        }\n        if (this._blurFilter) {\n            this._blurFilter.resolution = value;\n        }\n    };\n\n    /**\n     * Defines how bright a color needs to be to affect bloom.\n     *\n     * @member {number}\n     * @default 0.5\n     */\n    prototypeAccessors.threshold.get = function () {\n        return this._extractFilter.threshold;\n    };\n    prototypeAccessors.threshold.set = function (value) {\n        this._extractFilter.threshold = value;\n    };\n\n    /**\n     * Sets the kernels of the Blur Filter\n     *\n     * @member {number}\n     * @default 4\n     */\n    prototypeAccessors.kernels.get = function () {\n        return this._blurFilter.kernels;\n    };\n    prototypeAccessors.kernels.set = function (value) {\n        this._blurFilter.kernels = value;\n    };\n\n    /**\n     * Sets the strength of the Blur properties simultaneously\n     *\n     * @member {number}\n     * @default 2\n     */\n    prototypeAccessors.blur.get = function () {\n        return this._blurFilter.blur;\n    };\n    prototypeAccessors.blur.set = function (value) {\n        this._blurFilter.blur = value;\n    };\n\n    /**\n     * Sets the quality of the Blur Filter\n     *\n     * @member {number}\n     * @default 4\n     */\n    prototypeAccessors.quality.get = function () {\n        return this._blurFilter.quality;\n    };\n    prototypeAccessors.quality.set = function (value) {\n        this._blurFilter.quality = value;\n    };\n\n    /**\n     * Sets the pixelSize of the Kawase Blur filter\n     *\n     * @member {number|number[]|PIXI.Point}\n     * @default 1\n     */\n    prototypeAccessors.pixelSize.get = function () {\n        return this._blurFilter.pixelSize;\n    };\n    prototypeAccessors.pixelSize.set = function (value) {\n        this._blurFilter.pixelSize = value;\n    };\n\n    Object.defineProperties( AdvancedBloomFilter.prototype, prototypeAccessors );\n\n    return AdvancedBloomFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-advanced-bloom/lib/filter-advanced-bloom.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-ascii/lib/filter-ascii.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@pixi/filter-ascii/lib/filter-ascii.esm.js ***!
  \*****************************************************************/
/*! exports provided: AsciiFilter */
/*! exports used: AsciiFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AsciiFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/*!\n * @pixi/filter-ascii - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-ascii is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\n\\nuniform vec4 filterArea;\\nuniform float pixelSize;\\nuniform sampler2D uSampler;\\n\\nvec2 mapCoord( vec2 coord )\\n{\\n    coord *= filterArea.xy;\\n    coord += filterArea.zw;\\n\\n    return coord;\\n}\\n\\nvec2 unmapCoord( vec2 coord )\\n{\\n    coord -= filterArea.zw;\\n    coord /= filterArea.xy;\\n\\n    return coord;\\n}\\n\\nvec2 pixelate(vec2 coord, vec2 size)\\n{\\n    return floor( coord / size ) * size;\\n}\\n\\nvec2 getMod(vec2 coord, vec2 size)\\n{\\n    return mod( coord , size) / size;\\n}\\n\\nfloat character(float n, vec2 p)\\n{\\n    p = floor(p*vec2(4.0, -4.0) + 2.5);\\n\\n    if (clamp(p.x, 0.0, 4.0) == p.x)\\n    {\\n        if (clamp(p.y, 0.0, 4.0) == p.y)\\n        {\\n            if (int(mod(n/exp2(p.x + 5.0*p.y), 2.0)) == 1) return 1.0;\\n        }\\n    }\\n    return 0.0;\\n}\\n\\nvoid main()\\n{\\n    vec2 coord = mapCoord(vTextureCoord);\\n\\n    // get the rounded color..\\n    vec2 pixCoord = pixelate(coord, vec2(pixelSize));\\n    pixCoord = unmapCoord(pixCoord);\\n\\n    vec4 color = texture2D(uSampler, pixCoord);\\n\\n    // determine the character to use\\n    float gray = (color.r + color.g + color.b) / 3.0;\\n\\n    float n =  65536.0;             // .\\n    if (gray > 0.2) n = 65600.0;    // :\\n    if (gray > 0.3) n = 332772.0;   // *\\n    if (gray > 0.4) n = 15255086.0; // o\\n    if (gray > 0.5) n = 23385164.0; // &\\n    if (gray > 0.6) n = 15252014.0; // 8\\n    if (gray > 0.7) n = 13199452.0; // @\\n    if (gray > 0.8) n = 11512810.0; // #\\n\\n    // get the mod..\\n    vec2 modd = getMod(coord, vec2(pixelSize));\\n\\n    gl_FragColor = color * character( n, vec2(-1.0) + modd * 2.0);\\n\\n}\\n\";\n\n// TODO (cengler) - The Y is flipped in this shader for some reason.\n\n/**\n * @author Vico @vicocotea\n * original shader : https://www.shadertoy.com/view/lssGDj by @movAX13h\n */\n\n/**\n * An ASCII filter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/ascii.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-ascii|@pixi/filter-ascii}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {number} [size=8] Size of the font\n */\nvar AsciiFilter = /*@__PURE__*/(function (Filter) {\n    function AsciiFilter(size) {\n        if ( size === void 0 ) size = 8;\n\n        Filter.call(this, vertex, fragment);\n        this.size = size;\n    }\n\n    if ( Filter ) AsciiFilter.__proto__ = Filter;\n    AsciiFilter.prototype = Object.create( Filter && Filter.prototype );\n    AsciiFilter.prototype.constructor = AsciiFilter;\n\n    var prototypeAccessors = { size: { configurable: true } };\n\n    /**\n     * The pixel size used by the filter.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.size.get = function () {\n        return this.uniforms.pixelSize;\n    };\n    prototypeAccessors.size.set = function (value) {\n        this.uniforms.pixelSize = value;\n    };\n\n    Object.defineProperties( AsciiFilter.prototype, prototypeAccessors );\n\n    return AsciiFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLWFzY2lpL2xpYi9maWx0ZXItYXNjaWkuZXNtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9Bc2NpaUZpbHRlci5qcz9kNmE1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dmVydGV4fSBmcm9tICdAdG9vbHMvZnJhZ21lbnRzJztcbmltcG9ydCBmcmFnbWVudCBmcm9tICcuL2FzY2lpLmZyYWcnO1xuaW1wb3J0IHtGaWx0ZXJ9IGZyb20gJ0BwaXhpL2NvcmUnO1xuXG4vLyBUT0RPIChjZW5nbGVyKSAtIFRoZSBZIGlzIGZsaXBwZWQgaW4gdGhpcyBzaGFkZXIgZm9yIHNvbWUgcmVhc29uLlxuXG4vKipcbiAqIEBhdXRob3IgVmljbyBAdmljb2NvdGVhXG4gKiBvcmlnaW5hbCBzaGFkZXIgOiBodHRwczovL3d3dy5zaGFkZXJ0b3kuY29tL3ZpZXcvbHNzR0RqIGJ5IEBtb3ZBWDEzaFxuICovXG5cbi8qKlxuICogQW4gQVNDSUkgZmlsdGVyLjxicj5cbiAqICFbb3JpZ2luYWxdKC4uL3Rvb2xzL3NjcmVlbnNob3RzL2Rpc3Qvb3JpZ2luYWwucG5nKSFbZmlsdGVyXSguLi90b29scy9zY3JlZW5zaG90cy9kaXN0L2FzY2lpLnBuZylcbiAqXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIFBJWEkuRmlsdGVyXG4gKiBAbWVtYmVyb2YgUElYSS5maWx0ZXJzXG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9AcGl4aS9maWx0ZXItYXNjaWl8QHBpeGkvZmlsdGVyLWFzY2lpfVxuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvcGl4aS1maWx0ZXJzfHBpeGktZmlsdGVyc31cbiAqIEBwYXJhbSB7bnVtYmVyfSBbc2l6ZT04XSBTaXplIG9mIHRoZSBmb250XG4gKi9cbmNsYXNzIEFzY2lpRmlsdGVyIGV4dGVuZHMgRmlsdGVyIHtcblxuICAgIGNvbnN0cnVjdG9yKHNpemUgPSA4KSB7XG4gICAgICAgIHN1cGVyKHZlcnRleCwgZnJhZ21lbnQpO1xuICAgICAgICB0aGlzLnNpemUgPSBzaXplO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBwaXhlbCBzaXplIHVzZWQgYnkgdGhlIGZpbHRlci5cbiAgICAgKlxuICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgKi9cbiAgICBnZXQgc2l6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudW5pZm9ybXMucGl4ZWxTaXplO1xuICAgIH1cbiAgICBzZXQgc2l6ZSh2YWx1ZSkge1xuICAgICAgICB0aGlzLnVuaWZvcm1zLnBpeGVsU2l6ZSA9IHZhbHVlO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgQXNjaWlGaWx0ZXIgfTtcblxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQkE7QUFFQTtBQUFBO0FBQ0E7QUFBQTtBQUNBOzs7Ozs7O0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFsQkE7QUFDQTs7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-ascii/lib/filter-ascii.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-bevel/lib/filter-bevel.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@pixi/filter-bevel/lib/filter-bevel.esm.js ***!
  \*****************************************************************/
/*! exports provided: BevelFilter */
/*! exports used: BevelFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return BevelFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/* harmony import */ var _pixi_math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixi/math */ \"./node_modules/@pixi/math/lib/math.es.js\");\n/* harmony import */ var _pixi_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @pixi/utils */ \"./node_modules/@pixi/utils/lib/utils.es.js\");\n/*!\n * @pixi/filter-bevel - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-bevel is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\n\\nuniform float transformX;\\nuniform float transformY;\\nuniform vec3 lightColor;\\nuniform float lightAlpha;\\nuniform vec3 shadowColor;\\nuniform float shadowAlpha;\\n\\nvoid main(void) {\\n    vec2 transform = vec2(1.0 / filterArea) * vec2(transformX, transformY);\\n    vec4 color = texture2D(uSampler, vTextureCoord);\\n    float light = texture2D(uSampler, vTextureCoord - transform).a;\\n    float shadow = texture2D(uSampler, vTextureCoord + transform).a;\\n\\n    color.rgb = mix(color.rgb, lightColor, clamp((color.a - light) * lightAlpha, 0.0, 1.0));\\n    color.rgb = mix(color.rgb, shadowColor, clamp((color.a - shadow) * shadowAlpha, 0.0, 1.0));\\n    gl_FragColor = vec4(color.rgb * color.a, color.a);\\n}\\n\";\n\n/**\n * Bevel Filter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/bevel.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-bevel|@pixi/filter-bevel}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {object} [options] - The optional parameters of the filter.\n * @param {number} [options.rotation = 45] - The angle of the light in degrees.\n * @param {number} [options.thickness = 2] - The tickness of the bevel.\n * @param {number} [options.lightColor = 0xffffff] - Color of the light.\n * @param {number} [options.lightAlpha = 0.7] - Alpha of the light.\n * @param {number} [options.shadowColor = 0x000000] - Color of the shadow.\n * @param {number} [options.shadowAlpha = 0.7] - Alpha of the shadow.\n */\nvar BevelFilter = /*@__PURE__*/(function (Filter) {\n    function BevelFilter(options) {\n        if ( options === void 0 ) options = {};\n\n        Filter.call(this, vertex, fragment);\n\n        this.uniforms.lightColor = new Float32Array(3);\n        this.uniforms.shadowColor = new Float32Array(3);\n\n        options = Object.assign({\n            rotation: 45,\n            thickness: 2,\n            lightColor: 0xffffff,\n            lightAlpha: 0.7,\n            shadowColor: 0x000000,\n            shadowAlpha: 0.7,\n        }, options);\n\n        /**\n         * The angle of the light in degrees.\n         * @member {number}\n         * @default 45\n         */\n        this.rotation = options.rotation;\n\n        /**\n         * The tickness of the bevel.\n         * @member {number}\n         * @default 2\n         */\n        this.thickness = options.thickness;\n\n        /**\n         * Color of the light.\n         * @member {number}\n         * @default 0xffffff\n         */\n        this.lightColor = options.lightColor;\n\n        /**\n         * Alpha of the light.\n         * @member {number}\n         * @default 0.7\n         */\n        this.lightAlpha = options.lightAlpha;\n\n        /**\n         * Color of the shadow.\n         * @member {number}\n         * @default 0x000000\n         */\n        this.shadowColor = options.shadowColor;\n\n        /**\n         * Alpha of the shadow.\n         * @member {number}\n         * @default 0.7\n         */\n        this.shadowAlpha = options.shadowAlpha;\n\n    }\n\n    if ( Filter ) BevelFilter.__proto__ = Filter;\n    BevelFilter.prototype = Object.create( Filter && Filter.prototype );\n    BevelFilter.prototype.constructor = BevelFilter;\n\n    var prototypeAccessors = { rotation: { configurable: true },thickness: { configurable: true },lightColor: { configurable: true },lightAlpha: { configurable: true },shadowColor: { configurable: true },shadowAlpha: { configurable: true } };\n\n    /**\n     * Update the transform matrix of offset angle.\n     * @private\n     */\n    BevelFilter.prototype._updateTransform = function _updateTransform () {\n        this.uniforms.transformX = this._thickness * Math.cos(this._angle);\n        this.uniforms.transformY = this._thickness * Math.sin(this._angle);\n    };\n\n    prototypeAccessors.rotation.get = function () {\n        return this._angle / _pixi_math__WEBPACK_IMPORTED_MODULE_1__[/* DEG_TO_RAD */ \"b\"];\n    };\n    prototypeAccessors.rotation.set = function (value) {\n        this._angle = value * _pixi_math__WEBPACK_IMPORTED_MODULE_1__[/* DEG_TO_RAD */ \"b\"];\n        this._updateTransform();\n    };\n\n    prototypeAccessors.thickness.get = function () {\n        return this._thickness;\n    };\n    prototypeAccessors.thickness.set = function (value) {\n        this._thickness = value;\n        this._updateTransform();\n    };\n\n    prototypeAccessors.lightColor.get = function () {\n        return Object(_pixi_utils__WEBPACK_IMPORTED_MODULE_2__[\"rgb2hex\"])(this.uniforms.lightColor);\n    };\n    prototypeAccessors.lightColor.set = function (value) {\n        Object(_pixi_utils__WEBPACK_IMPORTED_MODULE_2__[\"hex2rgb\"])(value, this.uniforms.lightColor);\n    };\n\n    prototypeAccessors.lightAlpha.get = function () {\n        return this.uniforms.lightAlpha;\n    };\n    prototypeAccessors.lightAlpha.set = function (value) {\n        this.uniforms.lightAlpha = value;\n    };\n\n    prototypeAccessors.shadowColor.get = function () {\n        return Object(_pixi_utils__WEBPACK_IMPORTED_MODULE_2__[\"rgb2hex\"])(this.uniforms.shadowColor);\n    };\n    prototypeAccessors.shadowColor.set = function (value) {\n        Object(_pixi_utils__WEBPACK_IMPORTED_MODULE_2__[\"hex2rgb\"])(value, this.uniforms.shadowColor);\n    };\n\n    prototypeAccessors.shadowAlpha.get = function () {\n        return this.uniforms.shadowAlpha;\n    };\n    prototypeAccessors.shadowAlpha.set = function (value) {\n        this.uniforms.shadowAlpha = value;\n    };\n\n    Object.defineProperties( BevelFilter.prototype, prototypeAccessors );\n\n    return BevelFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLWJldmVsL2xpYi9maWx0ZXItYmV2ZWwuZXNtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9CZXZlbEZpbHRlci5qcz9iMzViIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dmVydGV4fSBmcm9tICdAdG9vbHMvZnJhZ21lbnRzJztcbmltcG9ydCBmcmFnbWVudCBmcm9tICcuL2JldmVsLmZyYWcnO1xuaW1wb3J0IHtGaWx0ZXJ9IGZyb20gJ0BwaXhpL2NvcmUnO1xuaW1wb3J0IHtERUdfVE9fUkFEfSBmcm9tICdAcGl4aS9tYXRoJztcbmltcG9ydCB7cmdiMmhleCwgaGV4MnJnYn0gZnJvbSAnQHBpeGkvdXRpbHMnO1xuXG4vKipcbiAqIEJldmVsIEZpbHRlci48YnI+XG4gKiAhW29yaWdpbmFsXSguLi90b29scy9zY3JlZW5zaG90cy9kaXN0L29yaWdpbmFsLnBuZykhW2ZpbHRlcl0oLi4vdG9vbHMvc2NyZWVuc2hvdHMvZGlzdC9iZXZlbC5wbmcpXG4gKlxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBQSVhJLkZpbHRlclxuICogQG1lbWJlcm9mIFBJWEkuZmlsdGVyc1xuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvQHBpeGkvZmlsdGVyLWJldmVsfEBwaXhpL2ZpbHRlci1iZXZlbH1cbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL3BpeGktZmlsdGVyc3xwaXhpLWZpbHRlcnN9XG4gKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdIC0gVGhlIG9wdGlvbmFsIHBhcmFtZXRlcnMgb2YgdGhlIGZpbHRlci5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy5yb3RhdGlvbiA9IDQ1XSAtIFRoZSBhbmdsZSBvZiB0aGUgbGlnaHQgaW4gZGVncmVlcy5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy50aGlja25lc3MgPSAyXSAtIFRoZSB0aWNrbmVzcyBvZiB0aGUgYmV2ZWwuXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMubGlnaHRDb2xvciA9IDB4ZmZmZmZmXSAtIENvbG9yIG9mIHRoZSBsaWdodC5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy5saWdodEFscGhhID0gMC43XSAtIEFscGhhIG9mIHRoZSBsaWdodC5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy5zaGFkb3dDb2xvciA9IDB4MDAwMDAwXSAtIENvbG9yIG9mIHRoZSBzaGFkb3cuXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMuc2hhZG93QWxwaGEgPSAwLjddIC0gQWxwaGEgb2YgdGhlIHNoYWRvdy5cbiAqL1xuY2xhc3MgQmV2ZWxGaWx0ZXIgZXh0ZW5kcyBGaWx0ZXIge1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBzdXBlcih2ZXJ0ZXgsIGZyYWdtZW50KTtcblxuICAgICAgICB0aGlzLnVuaWZvcm1zLmxpZ2h0Q29sb3IgPSBuZXcgRmxvYXQzMkFycmF5KDMpO1xuICAgICAgICB0aGlzLnVuaWZvcm1zLnNoYWRvd0NvbG9yID0gbmV3IEZsb2F0MzJBcnJheSgzKTtcblxuICAgICAgICBvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7XG4gICAgICAgICAgICByb3RhdGlvbjogNDUsXG4gICAgICAgICAgICB0aGlja25lc3M6IDIsXG4gICAgICAgICAgICBsaWdodENvbG9yOiAweGZmZmZmZixcbiAgICAgICAgICAgIGxpZ2h0QWxwaGE6IDAuNyxcbiAgICAgICAgICAgIHNoYWRvd0NvbG9yOiAweDAwMDAwMCxcbiAgICAgICAgICAgIHNoYWRvd0FscGhhOiAwLjcsXG4gICAgICAgIH0sIG9wdGlvbnMpO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgYW5nbGUgb2YgdGhlIGxpZ2h0IGluIGRlZ3JlZXMuXG4gICAgICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgICAgICogQGRlZmF1bHQgNDVcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMucm90YXRpb24gPSBvcHRpb25zLnJvdGF0aW9uO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgdGlja25lc3Mgb2YgdGhlIGJldmVsLlxuICAgICAgICAgKiBAbWVtYmVyIHtudW1iZXJ9XG4gICAgICAgICAqIEBkZWZhdWx0IDJcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMudGhpY2tuZXNzID0gb3B0aW9ucy50aGlja25lc3M7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIENvbG9yIG9mIHRoZSBsaWdodC5cbiAgICAgICAgICogQG1lbWJlciB7bnVtYmVyfVxuICAgICAgICAgKiBAZGVmYXVsdCAweGZmZmZmZlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5saWdodENvbG9yID0gb3B0aW9ucy5saWdodENvbG9yO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBbHBoYSBvZiB0aGUgbGlnaHQuXG4gICAgICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgICAgICogQGRlZmF1bHQgMC43XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmxpZ2h0QWxwaGEgPSBvcHRpb25zLmxpZ2h0QWxwaGE7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIENvbG9yIG9mIHRoZSBzaGFkb3cuXG4gICAgICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgICAgICogQGRlZmF1bHQgMHgwMDAwMDBcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc2hhZG93Q29sb3IgPSBvcHRpb25zLnNoYWRvd0NvbG9yO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBbHBoYSBvZiB0aGUgc2hhZG93LlxuICAgICAgICAgKiBAbWVtYmVyIHtudW1iZXJ9XG4gICAgICAgICAqIEBkZWZhdWx0IDAuN1xuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5zaGFkb3dBbHBoYSA9IG9wdGlvbnMuc2hhZG93QWxwaGE7XG5cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBVcGRhdGUgdGhlIHRyYW5zZm9ybSBtYXRyaXggb2Ygb2Zmc2V0IGFuZ2xlLlxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgX3VwZGF0ZVRyYW5zZm9ybSgpIHtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy50cmFuc2Zvcm1YID0gdGhpcy5fdGhpY2tuZXNzICogTWF0aC5jb3ModGhpcy5fYW5nbGUpO1xuICAgICAgICB0aGlzLnVuaWZvcm1zLnRyYW5zZm9ybVkgPSB0aGlzLl90aGlja25lc3MgKiBNYXRoLnNpbih0aGlzLl9hbmdsZSk7XG4gICAgfVxuXG4gICAgZ2V0IHJvdGF0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fYW5nbGUgLyBERUdfVE9fUkFEO1xuICAgIH1cbiAgICBzZXQgcm90YXRpb24odmFsdWUpIHtcbiAgICAgICAgdGhpcy5fYW5nbGUgPSB2YWx1ZSAqIERFR19UT19SQUQ7XG4gICAgICAgIHRoaXMuX3VwZGF0ZVRyYW5zZm9ybSgpO1xuICAgIH1cblxuICAgIGdldCB0aGlja25lc3MoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl90aGlja25lc3M7XG4gICAgfVxuICAgIHNldCB0aGlja25lc3ModmFsdWUpIHtcbiAgICAgICAgdGhpcy5fdGhpY2tuZXNzID0gdmFsdWU7XG4gICAgICAgIHRoaXMuX3VwZGF0ZVRyYW5zZm9ybSgpO1xuICAgIH1cblxuICAgIGdldCBsaWdodENvbG9yKCkge1xuICAgICAgICByZXR1cm4gcmdiMmhleCh0aGlzLnVuaWZvcm1zLmxpZ2h0Q29sb3IpO1xuICAgIH1cbiAgICBzZXQgbGlnaHRDb2xvcih2YWx1ZSkge1xuICAgICAgICBoZXgycmdiKHZhbHVlLCB0aGlzLnVuaWZvcm1zLmxpZ2h0Q29sb3IpO1xuICAgIH1cblxuICAgIGdldCBsaWdodEFscGhhKCkge1xuICAgICAgICByZXR1cm4gdGhpcy51bmlmb3Jtcy5saWdodEFscGhhO1xuICAgIH1cbiAgICBzZXQgbGlnaHRBbHBoYSh2YWx1ZSkge1xuICAgICAgICB0aGlzLnVuaWZvcm1zLmxpZ2h0QWxwaGEgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBnZXQgc2hhZG93Q29sb3IoKSB7XG4gICAgICAgIHJldHVybiByZ2IyaGV4KHRoaXMudW5pZm9ybXMuc2hhZG93Q29sb3IpO1xuICAgIH1cbiAgICBzZXQgc2hhZG93Q29sb3IodmFsdWUpIHtcbiAgICAgICAgaGV4MnJnYih2YWx1ZSwgdGhpcy51bmlmb3Jtcy5zaGFkb3dDb2xvcik7XG4gICAgfVxuXG4gICAgZ2V0IHNoYWRvd0FscGhhKCkge1xuICAgICAgICByZXR1cm4gdGhpcy51bmlmb3Jtcy5zaGFkb3dBbHBoYTtcbiAgICB9XG4gICAgc2V0IHNoYWRvd0FscGhhKHZhbHVlKSB7XG4gICAgICAgIHRoaXMudW5pZm9ybXMuc2hhZG93QWxwaGEgPSB2YWx1ZTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IEJldmVsRmlsdGVyIH07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVCQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7Ozs7Ozs7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBaEhBO0FBQ0E7OyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-bevel/lib/filter-bevel.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-bloom/lib/filter-bloom.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@pixi/filter-bloom/lib/filter-bloom.esm.js ***!
  \*****************************************************************/
/*! exports provided: BloomFilter */
/*! exports used: BloomFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return BloomFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/* harmony import */ var _pixi_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixi/constants */ \"./node_modules/@pixi/constants/lib/constants.es.js\");\n/* harmony import */ var _pixi_filter_alpha__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @pixi/filter-alpha */ \"./node_modules/@pixi/filter-alpha/lib/filter-alpha.es.js\");\n/* harmony import */ var _pixi_filter_blur__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @pixi/filter-blur */ \"./node_modules/@pixi/filter-blur/lib/filter-blur.es.js\");\n/* harmony import */ var _pixi_settings__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @pixi/settings */ \"./node_modules/@pixi/settings/lib/settings.es.js\");\n/* harmony import */ var _pixi_math__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @pixi/math */ \"./node_modules/@pixi/math/lib/math.es.js\");\n/*!\n * @pixi/filter-bloom - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-bloom is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\n\n\n\n\n\n/**\n * The BloomFilter applies a Gaussian blur to an object.\n * The strength of the blur can be set for x- and y-axis separately.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/bloom.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-bloom|@pixi/filter-bloom}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {number|PIXI.Point|number[]} [blur=2] Sets the strength of both the blurX and blurY properties simultaneously\n * @param {number} [quality=4] The quality of the blurX & blurY filter.\n * @param {number} [resolution=PIXI.settings.RESOLUTION] The resolution of the blurX & blurY filter.\n * @param {number} [kernelSize=5] The kernelSize of the blurX & blurY filter.Options: 5, 7, 9, 11, 13, 15.\n */\nvar BloomFilter = /*@__PURE__*/(function (Filter) {\n    function BloomFilter(blur, quality, resolution, kernelSize) {\n        if ( blur === void 0 ) blur = 2;\n        if ( quality === void 0 ) quality = 4;\n        if ( resolution === void 0 ) resolution = _pixi_settings__WEBPACK_IMPORTED_MODULE_4__[/* settings */ \"b\"].RESOLUTION;\n        if ( kernelSize === void 0 ) kernelSize = 5;\n\n        Filter.call(this);\n\n        var blurX;\n        var blurY;\n\n        if (typeof blur === 'number') {\n            blurX = blur;\n            blurY = blur;\n        }\n        else if (blur instanceof _pixi_math__WEBPACK_IMPORTED_MODULE_5__[/* Point */ \"g\"]) {\n            blurX = blur.x;\n            blurY = blur.y;\n        }\n        else if (Array.isArray(blur)) {\n            blurX = blur[0];\n            blurY = blur[1];\n        }\n\n        this.blurXFilter = new _pixi_filter_blur__WEBPACK_IMPORTED_MODULE_3__[/* BlurFilterPass */ \"b\"](true, blurX, quality, resolution, kernelSize);\n        this.blurYFilter = new _pixi_filter_blur__WEBPACK_IMPORTED_MODULE_3__[/* BlurFilterPass */ \"b\"](false, blurY, quality, resolution, kernelSize);\n        this.blurYFilter.blendMode = _pixi_constants__WEBPACK_IMPORTED_MODULE_1__[/* BLEND_MODES */ \"b\"].SCREEN;\n        this.defaultFilter = new _pixi_filter_alpha__WEBPACK_IMPORTED_MODULE_2__[/* AlphaFilter */ \"a\"]();\n    }\n\n    if ( Filter ) BloomFilter.__proto__ = Filter;\n    BloomFilter.prototype = Object.create( Filter && Filter.prototype );\n    BloomFilter.prototype.constructor = BloomFilter;\n\n    var prototypeAccessors = { blur: { configurable: true },blurX: { configurable: true },blurY: { configurable: true } };\n\n    BloomFilter.prototype.apply = function apply (filterManager, input, output) {\n        var renderTarget = filterManager.getFilterTexture(true);\n\n        //TODO - copyTexSubImage2D could be used here?\n        this.defaultFilter.apply(filterManager, input, output);\n\n        this.blurXFilter.apply(filterManager, input, renderTarget);\n        this.blurYFilter.apply(filterManager, renderTarget, output);\n\n        filterManager.returnFilterTexture(renderTarget);\n    };\n\n    /**\n     * Sets the strength of both the blurX and blurY properties simultaneously\n     *\n     * @member {number}\n     * @default 2\n     */\n    prototypeAccessors.blur.get = function () {\n        return this.blurXFilter.blur;\n    };\n    prototypeAccessors.blur.set = function (value) {\n        this.blurXFilter.blur = this.blurYFilter.blur = value;\n    };\n\n    /**\n     * Sets the strength of the blurX property\n     *\n     * @member {number}\n     * @default 2\n     */\n    prototypeAccessors.blurX.get = function () {\n        return this.blurXFilter.blur;\n    };\n    prototypeAccessors.blurX.set = function (value) {\n        this.blurXFilter.blur = value;\n    };\n\n    /**\n     * Sets the strength of the blurY property\n     *\n     * @member {number}\n     * @default 2\n     */\n    prototypeAccessors.blurY.get = function () {\n        return this.blurYFilter.blur;\n    };\n    prototypeAccessors.blurY.set = function (value) {\n        this.blurYFilter.blur = value;\n    };\n\n    Object.defineProperties( BloomFilter.prototype, prototypeAccessors );\n\n    return BloomFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLWJsb29tL2xpYi9maWx0ZXItYmxvb20uZXNtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9CbG9vbUZpbHRlci5qcz8wNWQ5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RmlsdGVyfSBmcm9tICdAcGl4aS9jb3JlJztcbmltcG9ydCB7QkxFTkRfTU9ERVN9IGZyb20gJ0BwaXhpL2NvbnN0YW50cyc7XG5pbXBvcnQge0FscGhhRmlsdGVyfSBmcm9tICdAcGl4aS9maWx0ZXItYWxwaGEnO1xuaW1wb3J0IHtCbHVyRmlsdGVyUGFzc30gZnJvbSAnQHBpeGkvZmlsdGVyLWJsdXInO1xuaW1wb3J0IHtzZXR0aW5nc30gZnJvbSAnQHBpeGkvc2V0dGluZ3MnO1xuaW1wb3J0IHtQb2ludH0gZnJvbSAnQHBpeGkvbWF0aCc7XG5cbi8qKlxuICogVGhlIEJsb29tRmlsdGVyIGFwcGxpZXMgYSBHYXVzc2lhbiBibHVyIHRvIGFuIG9iamVjdC5cbiAqIFRoZSBzdHJlbmd0aCBvZiB0aGUgYmx1ciBjYW4gYmUgc2V0IGZvciB4LSBhbmQgeS1heGlzIHNlcGFyYXRlbHkuPGJyPlxuICogIVtvcmlnaW5hbF0oLi4vdG9vbHMvc2NyZWVuc2hvdHMvZGlzdC9vcmlnaW5hbC5wbmcpIVtmaWx0ZXJdKC4uL3Rvb2xzL3NjcmVlbnNob3RzL2Rpc3QvYmxvb20ucG5nKVxuICpcbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgUElYSS5GaWx0ZXJcbiAqIEBtZW1iZXJvZiBQSVhJLmZpbHRlcnNcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL0BwaXhpL2ZpbHRlci1ibG9vbXxAcGl4aS9maWx0ZXItYmxvb219XG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9waXhpLWZpbHRlcnN8cGl4aS1maWx0ZXJzfVxuICogQHBhcmFtIHtudW1iZXJ8UElYSS5Qb2ludHxudW1iZXJbXX0gW2JsdXI9Ml0gU2V0cyB0aGUgc3RyZW5ndGggb2YgYm90aCB0aGUgYmx1clggYW5kIGJsdXJZIHByb3BlcnRpZXMgc2ltdWx0YW5lb3VzbHlcbiAqIEBwYXJhbSB7bnVtYmVyfSBbcXVhbGl0eT00XSBUaGUgcXVhbGl0eSBvZiB0aGUgYmx1clggJiBibHVyWSBmaWx0ZXIuXG4gKiBAcGFyYW0ge251bWJlcn0gW3Jlc29sdXRpb249UElYSS5zZXR0aW5ncy5SRVNPTFVUSU9OXSBUaGUgcmVzb2x1dGlvbiBvZiB0aGUgYmx1clggJiBibHVyWSBmaWx0ZXIuXG4gKiBAcGFyYW0ge251bWJlcn0gW2tlcm5lbFNpemU9NV0gVGhlIGtlcm5lbFNpemUgb2YgdGhlIGJsdXJYICYgYmx1clkgZmlsdGVyLk9wdGlvbnM6IDUsIDcsIDksIDExLCAxMywgMTUuXG4gKi9cbmNsYXNzIEJsb29tRmlsdGVyIGV4dGVuZHMgRmlsdGVyIHtcblxuICAgIGNvbnN0cnVjdG9yKGJsdXIgPSAyLCBxdWFsaXR5ID0gNCwgcmVzb2x1dGlvbiA9IHNldHRpbmdzLlJFU09MVVRJT04sIGtlcm5lbFNpemUgPSA1KSB7XG4gICAgICAgIHN1cGVyKCk7XG5cbiAgICAgICAgbGV0IGJsdXJYO1xuICAgICAgICBsZXQgYmx1clk7XG5cbiAgICAgICAgaWYgKHR5cGVvZiBibHVyID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgYmx1clggPSBibHVyO1xuICAgICAgICAgICAgYmx1clkgPSBibHVyO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGJsdXIgaW5zdGFuY2VvZiBQb2ludCkge1xuICAgICAgICAgICAgYmx1clggPSBibHVyLng7XG4gICAgICAgICAgICBibHVyWSA9IGJsdXIueTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KGJsdXIpKSB7XG4gICAgICAgICAgICBibHVyWCA9IGJsdXJbMF07XG4gICAgICAgICAgICBibHVyWSA9IGJsdXJbMV07XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmJsdXJYRmlsdGVyID0gbmV3IEJsdXJGaWx0ZXJQYXNzKHRydWUsIGJsdXJYLCBxdWFsaXR5LCByZXNvbHV0aW9uLCBrZXJuZWxTaXplKTtcbiAgICAgICAgdGhpcy5ibHVyWUZpbHRlciA9IG5ldyBCbHVyRmlsdGVyUGFzcyhmYWxzZSwgYmx1clksIHF1YWxpdHksIHJlc29sdXRpb24sIGtlcm5lbFNpemUpO1xuICAgICAgICB0aGlzLmJsdXJZRmlsdGVyLmJsZW5kTW9kZSA9IEJMRU5EX01PREVTLlNDUkVFTjtcbiAgICAgICAgdGhpcy5kZWZhdWx0RmlsdGVyID0gbmV3IEFscGhhRmlsdGVyKCk7XG4gICAgfVxuXG4gICAgYXBwbHkoZmlsdGVyTWFuYWdlciwgaW5wdXQsIG91dHB1dCkge1xuICAgICAgICBjb25zdCByZW5kZXJUYXJnZXQgPSBmaWx0ZXJNYW5hZ2VyLmdldEZpbHRlclRleHR1cmUodHJ1ZSk7XG5cbiAgICAgICAgLy9UT0RPIC0gY29weVRleFN1YkltYWdlMkQgY291bGQgYmUgdXNlZCBoZXJlP1xuICAgICAgICB0aGlzLmRlZmF1bHRGaWx0ZXIuYXBwbHkoZmlsdGVyTWFuYWdlciwgaW5wdXQsIG91dHB1dCk7XG5cbiAgICAgICAgdGhpcy5ibHVyWEZpbHRlci5hcHBseShmaWx0ZXJNYW5hZ2VyLCBpbnB1dCwgcmVuZGVyVGFyZ2V0KTtcbiAgICAgICAgdGhpcy5ibHVyWUZpbHRlci5hcHBseShmaWx0ZXJNYW5hZ2VyLCByZW5kZXJUYXJnZXQsIG91dHB1dCk7XG5cbiAgICAgICAgZmlsdGVyTWFuYWdlci5yZXR1cm5GaWx0ZXJUZXh0dXJlKHJlbmRlclRhcmdldCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgc3RyZW5ndGggb2YgYm90aCB0aGUgYmx1clggYW5kIGJsdXJZIHByb3BlcnRpZXMgc2ltdWx0YW5lb3VzbHlcbiAgICAgKlxuICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgKiBAZGVmYXVsdCAyXG4gICAgICovXG4gICAgZ2V0IGJsdXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJsdXJYRmlsdGVyLmJsdXI7XG4gICAgfVxuICAgIHNldCBibHVyKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuYmx1clhGaWx0ZXIuYmx1ciA9IHRoaXMuYmx1cllGaWx0ZXIuYmx1ciA9IHZhbHVlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIHN0cmVuZ3RoIG9mIHRoZSBibHVyWCBwcm9wZXJ0eVxuICAgICAqXG4gICAgICogQG1lbWJlciB7bnVtYmVyfVxuICAgICAqIEBkZWZhdWx0IDJcbiAgICAgKi9cbiAgICBnZXQgYmx1clgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJsdXJYRmlsdGVyLmJsdXI7XG4gICAgfVxuICAgIHNldCBibHVyWCh2YWx1ZSkge1xuICAgICAgICB0aGlzLmJsdXJYRmlsdGVyLmJsdXIgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBzdHJlbmd0aCBvZiB0aGUgYmx1clkgcHJvcGVydHlcbiAgICAgKlxuICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgKiBAZGVmYXVsdCAyXG4gICAgICovXG4gICAgZ2V0IGJsdXJZKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5ibHVyWUZpbHRlci5ibHVyO1xuICAgIH1cbiAgICBzZXQgYmx1clkodmFsdWUpIHtcbiAgICAgICAgdGhpcy5ibHVyWUZpbHRlci5ibHVyID0gdmFsdWU7XG4gICAgfVxufVxuXG5leHBvcnQgeyBCbG9vbUZpbHRlciB9O1xuXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXNCQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBN0VBO0FBQ0E7OyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-bloom/lib/filter-bloom.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-bulge-pinch/lib/filter-bulge-pinch.esm.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@pixi/filter-bulge-pinch/lib/filter-bulge-pinch.esm.js ***!
  \*****************************************************************************/
/*! exports provided: BulgePinchFilter */
/*! exports used: BulgePinchFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return BulgePinchFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/*!\n * @pixi/filter-bulge-pinch - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-bulge-pinch is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"uniform float radius;\\nuniform float strength;\\nuniform vec2 center;\\nuniform sampler2D uSampler;\\nvarying vec2 vTextureCoord;\\n\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\nuniform vec2 dimensions;\\n\\nvoid main()\\n{\\n    vec2 coord = vTextureCoord * filterArea.xy;\\n    coord -= center * dimensions.xy;\\n    float distance = length(coord);\\n    if (distance < radius) {\\n        float percent = distance / radius;\\n        if (strength > 0.0) {\\n            coord *= mix(1.0, smoothstep(0.0, radius / distance, percent), strength * 0.75);\\n        } else {\\n            coord *= mix(1.0, pow(percent, 1.0 + strength * 0.75) * radius / distance, 1.0 - percent);\\n        }\\n    }\\n    coord += center * dimensions.xy;\\n    coord /= filterArea.xy;\\n    vec2 clampedCoord = clamp(coord, filterClamp.xy, filterClamp.zw);\\n    vec4 color = texture2D(uSampler, clampedCoord);\\n    if (coord != clampedCoord) {\\n        color *= max(0.0, 1.0 - length(coord - clampedCoord));\\n    }\\n\\n    gl_FragColor = color;\\n}\\n\";\n\n/**\n * @author Julien CLEREL @JuloxRox\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/warp/bulgepinch.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * Bulges or pinches the image in a circle.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/bulge-pinch.gif)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-bulge-pinch|@pixi/filter-bulge-pinch}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {PIXI.Point|Array<number>} [center=[0,0]] The x and y coordinates of the center of the circle of effect.\n * @param {number} [radius=100] The radius of the circle of effect.\n * @param {number} [strength=1] -1 to 1 (-1 is strong pinch, 0 is no effect, 1 is strong bulge)\n */\nvar BulgePinchFilter = /*@__PURE__*/(function (Filter) {\n    function BulgePinchFilter(center, radius, strength) {\n        Filter.call(this, vertex, fragment);\n        this.uniforms.dimensions = new Float32Array(2);\n        this.center = center || [0.5, 0.5];\n        this.radius = (typeof radius === 'number') ? radius : 100; // allow 0 to be passed\n        this.strength = (typeof strength === 'number') ? strength : 1; // allow 0 to be passed\n    }\n\n    if ( Filter ) BulgePinchFilter.__proto__ = Filter;\n    BulgePinchFilter.prototype = Object.create( Filter && Filter.prototype );\n    BulgePinchFilter.prototype.constructor = BulgePinchFilter;\n\n    var prototypeAccessors = { radius: { configurable: true },strength: { configurable: true },center: { configurable: true } };\n\n    BulgePinchFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.dimensions[0] = input.filterFrame.width;\n        this.uniforms.dimensions[1] = input.filterFrame.height;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * The radius of the circle of effect.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.radius.get = function () {\n        return this.uniforms.radius;\n    };\n    prototypeAccessors.radius.set = function (value) {\n        this.uniforms.radius = value;\n    };\n\n    /**\n     * The strength of the effect. -1 to 1 (-1 is strong pinch, 0 is no effect, 1 is strong bulge)\n     *\n     * @member {number}\n     */\n    prototypeAccessors.strength.get = function () {\n        return this.uniforms.strength;\n    };\n    prototypeAccessors.strength.set = function (value) {\n        this.uniforms.strength = value;\n    };\n\n    /**\n     * The x and y coordinates of the center of the circle of effect.\n     *\n     * @member {PIXI.Point}\n     */\n    prototypeAccessors.center.get = function () {\n        return this.uniforms.center;\n    };\n    prototypeAccessors.center.set = function (value) {\n        this.uniforms.center = value;\n    };\n\n    Object.defineProperties( BulgePinchFilter.prototype, prototypeAccessors );\n\n    return BulgePinchFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLWJ1bGdlLXBpbmNoL2xpYi9maWx0ZXItYnVsZ2UtcGluY2guZXNtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9CdWxnZVBpbmNoRmlsdGVyLmpzP2RmZGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHt2ZXJ0ZXh9IGZyb20gJ0B0b29scy9mcmFnbWVudHMnO1xuaW1wb3J0IGZyYWdtZW50IGZyb20gJy4vYnVsZ2VQaW5jaC5mcmFnJztcbmltcG9ydCB7RmlsdGVyfSBmcm9tICdAcGl4aS9jb3JlJztcblxuLyoqXG4gKiBAYXV0aG9yIEp1bGllbiBDTEVSRUwgQEp1bG94Um94XG4gKiBvcmlnaW5hbCBmaWx0ZXIgaHR0cHM6Ly9naXRodWIuY29tL2V2YW53L2dsZnguanMvYmxvYi9tYXN0ZXIvc3JjL2ZpbHRlcnMvd2FycC9idWxnZXBpbmNoLmpzIGJ5IEV2YW4gV2FsbGFjZSA6IGh0dHA6Ly9tYWRlYnlldmFuLmNvbS9cbiAqL1xuXG4vKipcbiAqIEJ1bGdlcyBvciBwaW5jaGVzIHRoZSBpbWFnZSBpbiBhIGNpcmNsZS48YnI+XG4gKiAhW29yaWdpbmFsXSguLi90b29scy9zY3JlZW5zaG90cy9kaXN0L29yaWdpbmFsLnBuZykhW2ZpbHRlcl0oLi4vdG9vbHMvc2NyZWVuc2hvdHMvZGlzdC9idWxnZS1waW5jaC5naWYpXG4gKlxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBQSVhJLkZpbHRlclxuICogQG1lbWJlcm9mIFBJWEkuZmlsdGVyc1xuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvQHBpeGkvZmlsdGVyLWJ1bGdlLXBpbmNofEBwaXhpL2ZpbHRlci1idWxnZS1waW5jaH1cbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL3BpeGktZmlsdGVyc3xwaXhpLWZpbHRlcnN9XG4gKiBAcGFyYW0ge1BJWEkuUG9pbnR8QXJyYXk8bnVtYmVyPn0gW2NlbnRlcj1bMCwwXV0gVGhlIHggYW5kIHkgY29vcmRpbmF0ZXMgb2YgdGhlIGNlbnRlciBvZiB0aGUgY2lyY2xlIG9mIGVmZmVjdC5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbcmFkaXVzPTEwMF0gVGhlIHJhZGl1cyBvZiB0aGUgY2lyY2xlIG9mIGVmZmVjdC5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbc3RyZW5ndGg9MV0gLTEgdG8gMSAoLTEgaXMgc3Ryb25nIHBpbmNoLCAwIGlzIG5vIGVmZmVjdCwgMSBpcyBzdHJvbmcgYnVsZ2UpXG4gKi9cbmNsYXNzIEJ1bGdlUGluY2hGaWx0ZXIgZXh0ZW5kcyBGaWx0ZXIge1xuXG4gICAgY29uc3RydWN0b3IoY2VudGVyLCByYWRpdXMsIHN0cmVuZ3RoKSB7XG4gICAgICAgIHN1cGVyKHZlcnRleCwgZnJhZ21lbnQpO1xuICAgICAgICB0aGlzLnVuaWZvcm1zLmRpbWVuc2lvbnMgPSBuZXcgRmxvYXQzMkFycmF5KDIpO1xuICAgICAgICB0aGlzLmNlbnRlciA9IGNlbnRlciB8fCBbMC41LCAwLjVdO1xuICAgICAgICB0aGlzLnJhZGl1cyA9ICh0eXBlb2YgcmFkaXVzID09PSAnbnVtYmVyJykgPyByYWRpdXMgOiAxMDA7IC8vIGFsbG93IDAgdG8gYmUgcGFzc2VkXG4gICAgICAgIHRoaXMuc3RyZW5ndGggPSAodHlwZW9mIHN0cmVuZ3RoID09PSAnbnVtYmVyJykgPyBzdHJlbmd0aCA6IDE7IC8vIGFsbG93IDAgdG8gYmUgcGFzc2VkXG4gICAgfVxuXG4gICAgYXBwbHkoZmlsdGVyTWFuYWdlciwgaW5wdXQsIG91dHB1dCwgY2xlYXIpIHtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5kaW1lbnNpb25zWzBdID0gaW5wdXQuZmlsdGVyRnJhbWUud2lkdGg7XG4gICAgICAgIHRoaXMudW5pZm9ybXMuZGltZW5zaW9uc1sxXSA9IGlucHV0LmZpbHRlckZyYW1lLmhlaWdodDtcbiAgICAgICAgZmlsdGVyTWFuYWdlci5hcHBseUZpbHRlcih0aGlzLCBpbnB1dCwgb3V0cHV0LCBjbGVhcik7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIHJhZGl1cyBvZiB0aGUgY2lyY2xlIG9mIGVmZmVjdC5cbiAgICAgKlxuICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgKi9cbiAgICBnZXQgcmFkaXVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy51bmlmb3Jtcy5yYWRpdXM7XG4gICAgfVxuICAgIHNldCByYWRpdXModmFsdWUpIHtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5yYWRpdXMgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgc3RyZW5ndGggb2YgdGhlIGVmZmVjdC4gLTEgdG8gMSAoLTEgaXMgc3Ryb25nIHBpbmNoLCAwIGlzIG5vIGVmZmVjdCwgMSBpcyBzdHJvbmcgYnVsZ2UpXG4gICAgICpcbiAgICAgKiBAbWVtYmVyIHtudW1iZXJ9XG4gICAgICovXG4gICAgZ2V0IHN0cmVuZ3RoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy51bmlmb3Jtcy5zdHJlbmd0aDtcbiAgICB9XG4gICAgc2V0IHN0cmVuZ3RoKHZhbHVlKSB7XG4gICAgICAgIHRoaXMudW5pZm9ybXMuc3RyZW5ndGggPSB2YWx1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgeCBhbmQgeSBjb29yZGluYXRlcyBvZiB0aGUgY2VudGVyIG9mIHRoZSBjaXJjbGUgb2YgZWZmZWN0LlxuICAgICAqXG4gICAgICogQG1lbWJlciB7UElYSS5Qb2ludH1cbiAgICAgKi9cbiAgICBnZXQgY2VudGVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy51bmlmb3Jtcy5jZW50ZXI7XG4gICAgfVxuICAgIHNldCBjZW50ZXIodmFsdWUpIHtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5jZW50ZXIgPSB2YWx1ZTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IEJ1bGdlUGluY2hGaWx0ZXIgfTtcblxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQkE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBbkRBO0FBQ0E7OyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-bulge-pinch/lib/filter-bulge-pinch.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-color-map/lib/filter-color-map.esm.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@pixi/filter-color-map/lib/filter-color-map.esm.js ***!
  \*************************************************************************/
/*! exports provided: ColorMapFilter */
/*! exports used: ColorMapFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ColorMapFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/* harmony import */ var _pixi_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixi/constants */ \"./node_modules/@pixi/constants/lib/constants.es.js\");\n/*!\n * @pixi/filter-color-map - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-color-map is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform sampler2D colorMap;\\nuniform float _mix;\\nuniform float _size;\\nuniform float _sliceSize;\\nuniform float _slicePixelSize;\\nuniform float _sliceInnerSize;\\nvoid main() {\\n    vec4 color = texture2D(uSampler, vTextureCoord.xy);\\n\\n    vec4 adjusted;\\n    if (color.a > 0.0) {\\n        color.rgb /= color.a;\\n        float innerWidth = _size - 1.0;\\n        float zSlice0 = min(floor(color.b * innerWidth), innerWidth);\\n        float zSlice1 = min(zSlice0 + 1.0, innerWidth);\\n        float xOffset = _slicePixelSize * 0.5 + color.r * _sliceInnerSize;\\n        float s0 = xOffset + (zSlice0 * _sliceSize);\\n        float s1 = xOffset + (zSlice1 * _sliceSize);\\n        float yOffset = _sliceSize * 0.5 + color.g * (1.0 - _sliceSize);\\n        vec4 slice0Color = texture2D(colorMap, vec2(s0,yOffset));\\n        vec4 slice1Color = texture2D(colorMap, vec2(s1,yOffset));\\n        float zOffset = fract(color.b * innerWidth);\\n        adjusted = mix(slice0Color, slice1Color, zOffset);\\n\\n        color.rgb *= color.a;\\n    }\\n    gl_FragColor = vec4(mix(color, adjusted, _mix).rgb, color.a);\\n\\n}\";\n\n/**\n * The ColorMapFilter applies a color-map effect to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/color-map.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-color-map|@pixi/filter-color-map}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {HTMLImageElement|HTMLCanvasElement|PIXI.BaseTexture|PIXI.Texture} [colorMap] - The colorMap texture of the filter.\n * @param {boolean} [nearest=false] - Whether use NEAREST for colorMap texture.\n * @param {number} [mix=1] - The mix from 0 to 1, where 0 is the original image and 1 is the color mapped image.\n */\nvar ColorMapFilter = /*@__PURE__*/(function (Filter) {\n    function ColorMapFilter(colorMap, nearest, mix) {\n        if ( nearest === void 0 ) nearest = false;\n        if ( mix === void 0 ) mix = 1;\n\n        Filter.call(this, vertex, fragment);\n\n        this._size = 0;\n        this._sliceSize = 0;\n        this._slicePixelSize = 0;\n        this._sliceInnerSize = 0;\n\n        this._scaleMode = null;\n        this._nearest = false;\n        this.nearest = nearest;\n\n        /**\n         * The mix from 0 to 1, where 0 is the original image and 1 is the color mapped image.\n         * @member {number}\n         */\n        this.mix = mix;\n\n        this.colorMap = colorMap;\n    }\n\n    if ( Filter ) ColorMapFilter.__proto__ = Filter;\n    ColorMapFilter.prototype = Object.create( Filter && Filter.prototype );\n    ColorMapFilter.prototype.constructor = ColorMapFilter;\n\n    var prototypeAccessors = { colorSize: { configurable: true },colorMap: { configurable: true },nearest: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    ColorMapFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms._mix = this.mix;\n\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * the size of one color slice\n     * @member {number}\n     * @readonly\n     */\n    prototypeAccessors.colorSize.get = function () {\n        return this._size;\n    };\n\n    /**\n     * the colorMap texture\n     * @member {PIXI.Texture}\n     */\n    prototypeAccessors.colorMap.get = function () {\n        return this._colorMap;\n    };\n    prototypeAccessors.colorMap.set = function (colorMap) {\n        if (!(colorMap instanceof _pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Texture */ \"E\"])) {\n            colorMap = _pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Texture */ \"E\"].from(colorMap);\n        }\n        if (colorMap && colorMap.baseTexture) {\n            colorMap.baseTexture.scaleMode = this._scaleMode;\n            colorMap.baseTexture.mipmap = false;\n\n            this._size = colorMap.height;\n            this._sliceSize = 1 / this._size;\n            this._slicePixelSize = this._sliceSize / this._size;\n            this._sliceInnerSize = this._slicePixelSize * (this._size - 1);\n\n            this.uniforms._size = this._size;\n            this.uniforms._sliceSize = this._sliceSize;\n            this.uniforms._slicePixelSize = this._slicePixelSize;\n            this.uniforms._sliceInnerSize = this._sliceInnerSize;\n\n            this.uniforms.colorMap = colorMap;\n        }\n\n        this._colorMap = colorMap;\n    };\n\n    /**\n     * Whether use NEAREST for colorMap texture.\n     * @member {boolean}\n     */\n    prototypeAccessors.nearest.get = function () {\n        return this._nearest;\n    };\n    prototypeAccessors.nearest.set = function (nearest) {\n        this._nearest = nearest;\n        this._scaleMode = nearest ? _pixi_constants__WEBPACK_IMPORTED_MODULE_1__[/* SCALE_MODES */ \"k\"].NEAREST : _pixi_constants__WEBPACK_IMPORTED_MODULE_1__[/* SCALE_MODES */ \"k\"].LINEAR;\n\n        var texture = this._colorMap;\n\n        if (texture && texture.baseTexture) {\n            texture.baseTexture._glTextures = {};\n\n            texture.baseTexture.scaleMode = this._scaleMode;\n            texture.baseTexture.mipmap = false;\n\n            texture._updateID++;\n            texture.baseTexture.emit('update', texture.baseTexture);\n        }\n    };\n\n    /**\n     * If the colorMap is based on canvas , and the content of canvas has changed,\n     *   then call `updateColorMap` for update texture.\n     */\n    ColorMapFilter.prototype.updateColorMap = function updateColorMap () {\n        var texture = this._colorMap;\n\n        if (texture && texture.baseTexture) {\n            texture._updateID++;\n            texture.baseTexture.emit('update', texture.baseTexture);\n\n            this.colorMap = texture;\n        }\n    };\n\n    /**\n     * Destroys this filter\n     *\n     * @param {boolean} [destroyBase=false] Whether to destroy the base texture of colorMap as well\n     */\n    ColorMapFilter.prototype.destroy = function destroy (destroyBase) {\n        if (this._colorMap) {\n            this._colorMap.destroy(destroyBase);\n        }\n        Filter.prototype.destroy.call(this);\n    };\n\n    Object.defineProperties( ColorMapFilter.prototype, prototypeAccessors );\n\n    return ColorMapFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLWNvbG9yLW1hcC9saWIvZmlsdGVyLWNvbG9yLW1hcC5lc20uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL0NvbG9yTWFwRmlsdGVyLmpzP2FiOWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHt2ZXJ0ZXh9IGZyb20gJ0B0b29scy9mcmFnbWVudHMnO1xuaW1wb3J0IGZyYWdtZW50IGZyb20gJy4vY29sb3ItbWFwLmZyYWcnO1xuaW1wb3J0IHtGaWx0ZXIsIFRleHR1cmV9IGZyb20gJ0BwaXhpL2NvcmUnO1xuaW1wb3J0IHtTQ0FMRV9NT0RFU30gZnJvbSAnQHBpeGkvY29uc3RhbnRzJztcblxuLyoqXG4gKiBUaGUgQ29sb3JNYXBGaWx0ZXIgYXBwbGllcyBhIGNvbG9yLW1hcCBlZmZlY3QgdG8gYW4gb2JqZWN0Ljxicj5cbiAqICFbb3JpZ2luYWxdKC4uL3Rvb2xzL3NjcmVlbnNob3RzL2Rpc3Qvb3JpZ2luYWwucG5nKSFbZmlsdGVyXSguLi90b29scy9zY3JlZW5zaG90cy9kaXN0L2NvbG9yLW1hcC5wbmcpXG4gKlxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBQSVhJLkZpbHRlclxuICogQG1lbWJlcm9mIFBJWEkuZmlsdGVyc1xuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvQHBpeGkvZmlsdGVyLWNvbG9yLW1hcHxAcGl4aS9maWx0ZXItY29sb3ItbWFwfVxuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvcGl4aS1maWx0ZXJzfHBpeGktZmlsdGVyc31cbiAqIEBwYXJhbSB7SFRNTEltYWdlRWxlbWVudHxIVE1MQ2FudmFzRWxlbWVudHxQSVhJLkJhc2VUZXh0dXJlfFBJWEkuVGV4dHVyZX0gW2NvbG9yTWFwXSAtIFRoZSBjb2xvck1hcCB0ZXh0dXJlIG9mIHRoZSBmaWx0ZXIuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtuZWFyZXN0PWZhbHNlXSAtIFdoZXRoZXIgdXNlIE5FQVJFU1QgZm9yIGNvbG9yTWFwIHRleHR1cmUuXG4gKiBAcGFyYW0ge251bWJlcn0gW21peD0xXSAtIFRoZSBtaXggZnJvbSAwIHRvIDEsIHdoZXJlIDAgaXMgdGhlIG9yaWdpbmFsIGltYWdlIGFuZCAxIGlzIHRoZSBjb2xvciBtYXBwZWQgaW1hZ2UuXG4gKi9cbmNsYXNzIENvbG9yTWFwRmlsdGVyIGV4dGVuZHMgRmlsdGVyIHtcblxuICAgIGNvbnN0cnVjdG9yKGNvbG9yTWFwLCBuZWFyZXN0ID0gZmFsc2UsIG1peCA9IDEpIHtcbiAgICAgICAgc3VwZXIodmVydGV4LCBmcmFnbWVudCk7XG5cbiAgICAgICAgdGhpcy5fc2l6ZSA9IDA7XG4gICAgICAgIHRoaXMuX3NsaWNlU2l6ZSA9IDA7XG4gICAgICAgIHRoaXMuX3NsaWNlUGl4ZWxTaXplID0gMDtcbiAgICAgICAgdGhpcy5fc2xpY2VJbm5lclNpemUgPSAwO1xuXG4gICAgICAgIHRoaXMuX3NjYWxlTW9kZSA9IG51bGw7XG4gICAgICAgIHRoaXMuX25lYXJlc3QgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5uZWFyZXN0ID0gbmVhcmVzdDtcblxuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIG1peCBmcm9tIDAgdG8gMSwgd2hlcmUgMCBpcyB0aGUgb3JpZ2luYWwgaW1hZ2UgYW5kIDEgaXMgdGhlIGNvbG9yIG1hcHBlZCBpbWFnZS5cbiAgICAgICAgICogQG1lbWJlciB7bnVtYmVyfVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5taXggPSBtaXg7XG5cbiAgICAgICAgdGhpcy5jb2xvck1hcCA9IGNvbG9yTWFwO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE92ZXJyaWRlIGV4aXN0aW5nIGFwcGx5IG1ldGhvZCBpbiBQSVhJLkZpbHRlclxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgYXBwbHkoZmlsdGVyTWFuYWdlciwgaW5wdXQsIG91dHB1dCwgY2xlYXIpIHtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5fbWl4ID0gdGhpcy5taXg7XG5cbiAgICAgICAgZmlsdGVyTWFuYWdlci5hcHBseUZpbHRlcih0aGlzLCBpbnB1dCwgb3V0cHV0LCBjbGVhcik7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogdGhlIHNpemUgb2Ygb25lIGNvbG9yIHNsaWNlXG4gICAgICogQG1lbWJlciB7bnVtYmVyfVxuICAgICAqIEByZWFkb25seVxuICAgICAqL1xuICAgIGdldCBjb2xvclNpemUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9zaXplO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHRoZSBjb2xvck1hcCB0ZXh0dXJlXG4gICAgICogQG1lbWJlciB7UElYSS5UZXh0dXJlfVxuICAgICAqL1xuICAgIGdldCBjb2xvck1hcCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbG9yTWFwO1xuICAgIH1cbiAgICBzZXQgY29sb3JNYXAoY29sb3JNYXApIHtcbiAgICAgICAgaWYgKCEoY29sb3JNYXAgaW5zdGFuY2VvZiBUZXh0dXJlKSkge1xuICAgICAgICAgICAgY29sb3JNYXAgPSBUZXh0dXJlLmZyb20oY29sb3JNYXApO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb2xvck1hcCAmJiBjb2xvck1hcC5iYXNlVGV4dHVyZSkge1xuICAgICAgICAgICAgY29sb3JNYXAuYmFzZVRleHR1cmUuc2NhbGVNb2RlID0gdGhpcy5fc2NhbGVNb2RlO1xuICAgICAgICAgICAgY29sb3JNYXAuYmFzZVRleHR1cmUubWlwbWFwID0gZmFsc2U7XG5cbiAgICAgICAgICAgIHRoaXMuX3NpemUgPSBjb2xvck1hcC5oZWlnaHQ7XG4gICAgICAgICAgICB0aGlzLl9zbGljZVNpemUgPSAxIC8gdGhpcy5fc2l6ZTtcbiAgICAgICAgICAgIHRoaXMuX3NsaWNlUGl4ZWxTaXplID0gdGhpcy5fc2xpY2VTaXplIC8gdGhpcy5fc2l6ZTtcbiAgICAgICAgICAgIHRoaXMuX3NsaWNlSW5uZXJTaXplID0gdGhpcy5fc2xpY2VQaXhlbFNpemUgKiAodGhpcy5fc2l6ZSAtIDEpO1xuXG4gICAgICAgICAgICB0aGlzLnVuaWZvcm1zLl9zaXplID0gdGhpcy5fc2l6ZTtcbiAgICAgICAgICAgIHRoaXMudW5pZm9ybXMuX3NsaWNlU2l6ZSA9IHRoaXMuX3NsaWNlU2l6ZTtcbiAgICAgICAgICAgIHRoaXMudW5pZm9ybXMuX3NsaWNlUGl4ZWxTaXplID0gdGhpcy5fc2xpY2VQaXhlbFNpemU7XG4gICAgICAgICAgICB0aGlzLnVuaWZvcm1zLl9zbGljZUlubmVyU2l6ZSA9IHRoaXMuX3NsaWNlSW5uZXJTaXplO1xuXG4gICAgICAgICAgICB0aGlzLnVuaWZvcm1zLmNvbG9yTWFwID0gY29sb3JNYXA7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9jb2xvck1hcCA9IGNvbG9yTWFwO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFdoZXRoZXIgdXNlIE5FQVJFU1QgZm9yIGNvbG9yTWFwIHRleHR1cmUuXG4gICAgICogQG1lbWJlciB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBnZXQgbmVhcmVzdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX25lYXJlc3Q7XG4gICAgfVxuICAgIHNldCBuZWFyZXN0KG5lYXJlc3QpIHtcbiAgICAgICAgdGhpcy5fbmVhcmVzdCA9IG5lYXJlc3Q7XG4gICAgICAgIHRoaXMuX3NjYWxlTW9kZSA9IG5lYXJlc3QgPyBTQ0FMRV9NT0RFUy5ORUFSRVNUIDogU0NBTEVfTU9ERVMuTElORUFSO1xuXG4gICAgICAgIGNvbnN0IHRleHR1cmUgPSB0aGlzLl9jb2xvck1hcDtcblxuICAgICAgICBpZiAodGV4dHVyZSAmJiB0ZXh0dXJlLmJhc2VUZXh0dXJlKSB7XG4gICAgICAgICAgICB0ZXh0dXJlLmJhc2VUZXh0dXJlLl9nbFRleHR1cmVzID0ge307XG5cbiAgICAgICAgICAgIHRleHR1cmUuYmFzZVRleHR1cmUuc2NhbGVNb2RlID0gdGhpcy5fc2NhbGVNb2RlO1xuICAgICAgICAgICAgdGV4dHVyZS5iYXNlVGV4dHVyZS5taXBtYXAgPSBmYWxzZTtcblxuICAgICAgICAgICAgdGV4dHVyZS5fdXBkYXRlSUQrKztcbiAgICAgICAgICAgIHRleHR1cmUuYmFzZVRleHR1cmUuZW1pdCgndXBkYXRlJywgdGV4dHVyZS5iYXNlVGV4dHVyZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBJZiB0aGUgY29sb3JNYXAgaXMgYmFzZWQgb24gY2FudmFzICwgYW5kIHRoZSBjb250ZW50IG9mIGNhbnZhcyBoYXMgY2hhbmdlZCxcbiAgICAgKiAgIHRoZW4gY2FsbCBgdXBkYXRlQ29sb3JNYXBgIGZvciB1cGRhdGUgdGV4dHVyZS5cbiAgICAgKi9cbiAgICB1cGRhdGVDb2xvck1hcCgpIHtcbiAgICAgICAgY29uc3QgdGV4dHVyZSA9IHRoaXMuX2NvbG9yTWFwO1xuXG4gICAgICAgIGlmICh0ZXh0dXJlICYmIHRleHR1cmUuYmFzZVRleHR1cmUpIHtcbiAgICAgICAgICAgIHRleHR1cmUuX3VwZGF0ZUlEKys7XG4gICAgICAgICAgICB0ZXh0dXJlLmJhc2VUZXh0dXJlLmVtaXQoJ3VwZGF0ZScsIHRleHR1cmUuYmFzZVRleHR1cmUpO1xuXG4gICAgICAgICAgICB0aGlzLmNvbG9yTWFwID0gdGV4dHVyZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIERlc3Ryb3lzIHRoaXMgZmlsdGVyXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtkZXN0cm95QmFzZT1mYWxzZV0gV2hldGhlciB0byBkZXN0cm95IHRoZSBiYXNlIHRleHR1cmUgb2YgY29sb3JNYXAgYXMgd2VsbFxuICAgICAqL1xuICAgIGRlc3Ryb3koZGVzdHJveUJhc2UpIHtcbiAgICAgICAgaWYgKHRoaXMuX2NvbG9yTWFwKSB7XG4gICAgICAgICAgICB0aGlzLl9jb2xvck1hcC5kZXN0cm95KGRlc3Ryb3lCYXNlKTtcbiAgICAgICAgfVxuICAgICAgICBzdXBlci5kZXN0cm95KCk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBDb2xvck1hcEZpbHRlciB9O1xuXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQTtBQUVBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUEzSEE7QUFDQTs7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-color-map/lib/filter-color-map.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-color-replace/lib/filter-color-replace.esm.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@pixi/filter-color-replace/lib/filter-color-replace.esm.js ***!
  \*********************************************************************************/
/*! exports provided: ColorReplaceFilter */
/*! exports used: ColorReplaceFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ColorReplaceFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/* harmony import */ var _pixi_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixi/utils */ \"./node_modules/@pixi/utils/lib/utils.es.js\");\n/*!\n * @pixi/filter-color-replace - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-color-replace is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec3 originalColor;\\nuniform vec3 newColor;\\nuniform float epsilon;\\nvoid main(void) {\\n    vec4 currentColor = texture2D(uSampler, vTextureCoord);\\n    vec3 colorDiff = originalColor - (currentColor.rgb / max(currentColor.a, 0.0000000001));\\n    float colorDistance = length(colorDiff);\\n    float doReplace = step(colorDistance, epsilon);\\n    gl_FragColor = vec4(mix(currentColor.rgb, (newColor + colorDiff) * currentColor.a, doReplace), currentColor.a);\\n}\\n\";\n\n/**\n * ColorReplaceFilter, originally by mishaa, updated by timetocode\n * http://www.html5gamedevs.com/topic/10640-outline-a-sprite-change-certain-colors/?p=69966<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/color-replace.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-color-replace|@pixi/filter-color-replace}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {number|Array<number>} [originalColor=0xFF0000] The color that will be changed, as a 3 component RGB e.g. [1.0, 1.0, 1.0]\n * @param {number|Array<number>} [newColor=0x000000] The resulting color, as a 3 component RGB e.g. [1.0, 0.5, 1.0]\n * @param {number} [epsilon=0.4] Tolerance/sensitivity of the floating-point comparison between colors (lower = more exact, higher = more inclusive)\n *\n * @example\n *  // replaces true red with true blue\n *  someSprite.filters = [new ColorReplaceFilter(\n *   [1, 0, 0],\n *   [0, 0, 1],\n *   0.001\n *   )];\n *  // replaces the RGB color 220, 220, 220 with the RGB color 225, 200, 215\n *  someOtherSprite.filters = [new ColorReplaceFilter(\n *   [220/255.0, 220/255.0, 220/255.0],\n *   [225/255.0, 200/255.0, 215/255.0],\n *   0.001\n *   )];\n *  // replaces the RGB color 220, 220, 220 with the RGB color 225, 200, 215\n *  someOtherSprite.filters = [new ColorReplaceFilter(0xdcdcdc, 0xe1c8d7, 0.001)];\n *\n */\nvar ColorReplaceFilter = /*@__PURE__*/(function (Filter) {\n    function ColorReplaceFilter(originalColor, newColor, epsilon) {\n        if ( originalColor === void 0 ) originalColor = 0xFF0000;\n        if ( newColor === void 0 ) newColor = 0x000000;\n        if ( epsilon === void 0 ) epsilon = 0.4;\n\n        Filter.call(this, vertex, fragment);\n        this.uniforms.originalColor = new Float32Array(3);\n        this.uniforms.newColor = new Float32Array(3);\n        this.originalColor = originalColor;\n        this.newColor = newColor;\n        this.epsilon = epsilon;\n    }\n\n    if ( Filter ) ColorReplaceFilter.__proto__ = Filter;\n    ColorReplaceFilter.prototype = Object.create( Filter && Filter.prototype );\n    ColorReplaceFilter.prototype.constructor = ColorReplaceFilter;\n\n    var prototypeAccessors = { originalColor: { configurable: true },newColor: { configurable: true },epsilon: { configurable: true } };\n\n    /**\n     * The color that will be changed, as a 3 component RGB e.g. [1.0, 1.0, 1.0]\n     * @member {number|Array<number>}\n     * @default 0xFF0000\n     */\n    prototypeAccessors.originalColor.set = function (value) {\n        var arr = this.uniforms.originalColor;\n        if (typeof value === 'number') {\n            Object(_pixi_utils__WEBPACK_IMPORTED_MODULE_1__[\"hex2rgb\"])(value, arr);\n            this._originalColor = value;\n        }\n        else {\n            arr[0] = value[0];\n            arr[1] = value[1];\n            arr[2] = value[2];\n            this._originalColor = Object(_pixi_utils__WEBPACK_IMPORTED_MODULE_1__[\"rgb2hex\"])(arr);\n        }\n    };\n    prototypeAccessors.originalColor.get = function () {\n        return this._originalColor;\n    };\n\n    /**\n     * The resulting color, as a 3 component RGB e.g. [1.0, 0.5, 1.0]\n     * @member {number|Array<number>}\n     * @default 0x000000\n     */\n    prototypeAccessors.newColor.set = function (value) {\n        var arr = this.uniforms.newColor;\n        if (typeof value === 'number') {\n            Object(_pixi_utils__WEBPACK_IMPORTED_MODULE_1__[\"hex2rgb\"])(value, arr);\n            this._newColor = value;\n        }\n        else {\n            arr[0] = value[0];\n            arr[1] = value[1];\n            arr[2] = value[2];\n            this._newColor = Object(_pixi_utils__WEBPACK_IMPORTED_MODULE_1__[\"rgb2hex\"])(arr);\n        }\n    };\n    prototypeAccessors.newColor.get = function () {\n        return this._newColor;\n    };\n\n    /**\n     * Tolerance/sensitivity of the floating-point comparison between colors (lower = more exact, higher = more inclusive)\n     * @member {number}\n     * @default 0.4\n     */\n    prototypeAccessors.epsilon.set = function (value) {\n        this.uniforms.epsilon = value;\n    };\n    prototypeAccessors.epsilon.get = function () {\n        return this.uniforms.epsilon;\n    };\n\n    Object.defineProperties( ColorReplaceFilter.prototype, prototypeAccessors );\n\n    return ColorReplaceFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLWNvbG9yLXJlcGxhY2UvbGliL2ZpbHRlci1jb2xvci1yZXBsYWNlLmVzbS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9zcmMvQ29sb3JSZXBsYWNlRmlsdGVyLmpzPzI5YjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHt2ZXJ0ZXh9IGZyb20gJ0B0b29scy9mcmFnbWVudHMnO1xuaW1wb3J0IGZyYWdtZW50IGZyb20gJy4vY29sb3JSZXBsYWNlLmZyYWcnO1xuaW1wb3J0IHtGaWx0ZXJ9IGZyb20gJ0BwaXhpL2NvcmUnO1xuaW1wb3J0IHtoZXgycmdiLCByZ2IyaGV4fSBmcm9tICdAcGl4aS91dGlscyc7XG5cbi8qKlxuICogQ29sb3JSZXBsYWNlRmlsdGVyLCBvcmlnaW5hbGx5IGJ5IG1pc2hhYSwgdXBkYXRlZCBieSB0aW1ldG9jb2RlXG4gKiBodHRwOi8vd3d3Lmh0bWw1Z2FtZWRldnMuY29tL3RvcGljLzEwNjQwLW91dGxpbmUtYS1zcHJpdGUtY2hhbmdlLWNlcnRhaW4tY29sb3JzLz9wPTY5OTY2PGJyPlxuICogIVtvcmlnaW5hbF0oLi4vdG9vbHMvc2NyZWVuc2hvdHMvZGlzdC9vcmlnaW5hbC5wbmcpIVtmaWx0ZXJdKC4uL3Rvb2xzL3NjcmVlbnNob3RzL2Rpc3QvY29sb3ItcmVwbGFjZS5wbmcpXG4gKlxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBQSVhJLkZpbHRlclxuICogQG1lbWJlcm9mIFBJWEkuZmlsdGVyc1xuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvQHBpeGkvZmlsdGVyLWNvbG9yLXJlcGxhY2V8QHBpeGkvZmlsdGVyLWNvbG9yLXJlcGxhY2V9XG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9waXhpLWZpbHRlcnN8cGl4aS1maWx0ZXJzfVxuICogQHBhcmFtIHtudW1iZXJ8QXJyYXk8bnVtYmVyPn0gW29yaWdpbmFsQ29sb3I9MHhGRjAwMDBdIFRoZSBjb2xvciB0aGF0IHdpbGwgYmUgY2hhbmdlZCwgYXMgYSAzIGNvbXBvbmVudCBSR0IgZS5nLiBbMS4wLCAxLjAsIDEuMF1cbiAqIEBwYXJhbSB7bnVtYmVyfEFycmF5PG51bWJlcj59IFtuZXdDb2xvcj0weDAwMDAwMF0gVGhlIHJlc3VsdGluZyBjb2xvciwgYXMgYSAzIGNvbXBvbmVudCBSR0IgZS5nLiBbMS4wLCAwLjUsIDEuMF1cbiAqIEBwYXJhbSB7bnVtYmVyfSBbZXBzaWxvbj0wLjRdIFRvbGVyYW5jZS9zZW5zaXRpdml0eSBvZiB0aGUgZmxvYXRpbmctcG9pbnQgY29tcGFyaXNvbiBiZXR3ZWVuIGNvbG9ycyAobG93ZXIgPSBtb3JlIGV4YWN0LCBoaWdoZXIgPSBtb3JlIGluY2x1c2l2ZSlcbiAqXG4gKiBAZXhhbXBsZVxuICogIC8vIHJlcGxhY2VzIHRydWUgcmVkIHdpdGggdHJ1ZSBibHVlXG4gKiAgc29tZVNwcml0ZS5maWx0ZXJzID0gW25ldyBDb2xvclJlcGxhY2VGaWx0ZXIoXG4gKiAgIFsxLCAwLCAwXSxcbiAqICAgWzAsIDAsIDFdLFxuICogICAwLjAwMVxuICogICApXTtcbiAqICAvLyByZXBsYWNlcyB0aGUgUkdCIGNvbG9yIDIyMCwgMjIwLCAyMjAgd2l0aCB0aGUgUkdCIGNvbG9yIDIyNSwgMjAwLCAyMTVcbiAqICBzb21lT3RoZXJTcHJpdGUuZmlsdGVycyA9IFtuZXcgQ29sb3JSZXBsYWNlRmlsdGVyKFxuICogICBbMjIwLzI1NS4wLCAyMjAvMjU1LjAsIDIyMC8yNTUuMF0sXG4gKiAgIFsyMjUvMjU1LjAsIDIwMC8yNTUuMCwgMjE1LzI1NS4wXSxcbiAqICAgMC4wMDFcbiAqICAgKV07XG4gKiAgLy8gcmVwbGFjZXMgdGhlIFJHQiBjb2xvciAyMjAsIDIyMCwgMjIwIHdpdGggdGhlIFJHQiBjb2xvciAyMjUsIDIwMCwgMjE1XG4gKiAgc29tZU90aGVyU3ByaXRlLmZpbHRlcnMgPSBbbmV3IENvbG9yUmVwbGFjZUZpbHRlcigweGRjZGNkYywgMHhlMWM4ZDcsIDAuMDAxKV07XG4gKlxuICovXG5jbGFzcyBDb2xvclJlcGxhY2VGaWx0ZXIgZXh0ZW5kcyBGaWx0ZXIge1xuXG4gICAgY29uc3RydWN0b3Iob3JpZ2luYWxDb2xvciA9IDB4RkYwMDAwLCBuZXdDb2xvciA9IDB4MDAwMDAwLCBlcHNpbG9uID0gMC40KSB7XG4gICAgICAgIHN1cGVyKHZlcnRleCwgZnJhZ21lbnQpO1xuICAgICAgICB0aGlzLnVuaWZvcm1zLm9yaWdpbmFsQ29sb3IgPSBuZXcgRmxvYXQzMkFycmF5KDMpO1xuICAgICAgICB0aGlzLnVuaWZvcm1zLm5ld0NvbG9yID0gbmV3IEZsb2F0MzJBcnJheSgzKTtcbiAgICAgICAgdGhpcy5vcmlnaW5hbENvbG9yID0gb3JpZ2luYWxDb2xvcjtcbiAgICAgICAgdGhpcy5uZXdDb2xvciA9IG5ld0NvbG9yO1xuICAgICAgICB0aGlzLmVwc2lsb24gPSBlcHNpbG9uO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBjb2xvciB0aGF0IHdpbGwgYmUgY2hhbmdlZCwgYXMgYSAzIGNvbXBvbmVudCBSR0IgZS5nLiBbMS4wLCAxLjAsIDEuMF1cbiAgICAgKiBAbWVtYmVyIHtudW1iZXJ8QXJyYXk8bnVtYmVyPn1cbiAgICAgKiBAZGVmYXVsdCAweEZGMDAwMFxuICAgICAqL1xuICAgIHNldCBvcmlnaW5hbENvbG9yKHZhbHVlKSB7XG4gICAgICAgIGxldCBhcnIgPSB0aGlzLnVuaWZvcm1zLm9yaWdpbmFsQ29sb3I7XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICBoZXgycmdiKHZhbHVlLCBhcnIpO1xuICAgICAgICAgICAgdGhpcy5fb3JpZ2luYWxDb2xvciA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgYXJyWzBdID0gdmFsdWVbMF07XG4gICAgICAgICAgICBhcnJbMV0gPSB2YWx1ZVsxXTtcbiAgICAgICAgICAgIGFyclsyXSA9IHZhbHVlWzJdO1xuICAgICAgICAgICAgdGhpcy5fb3JpZ2luYWxDb2xvciA9IHJnYjJoZXgoYXJyKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgb3JpZ2luYWxDb2xvcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX29yaWdpbmFsQ29sb3I7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIHJlc3VsdGluZyBjb2xvciwgYXMgYSAzIGNvbXBvbmVudCBSR0IgZS5nLiBbMS4wLCAwLjUsIDEuMF1cbiAgICAgKiBAbWVtYmVyIHtudW1iZXJ8QXJyYXk8bnVtYmVyPn1cbiAgICAgKiBAZGVmYXVsdCAweDAwMDAwMFxuICAgICAqL1xuICAgIHNldCBuZXdDb2xvcih2YWx1ZSkge1xuICAgICAgICBsZXQgYXJyID0gdGhpcy51bmlmb3Jtcy5uZXdDb2xvcjtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIGhleDJyZ2IodmFsdWUsIGFycik7XG4gICAgICAgICAgICB0aGlzLl9uZXdDb2xvciA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgYXJyWzBdID0gdmFsdWVbMF07XG4gICAgICAgICAgICBhcnJbMV0gPSB2YWx1ZVsxXTtcbiAgICAgICAgICAgIGFyclsyXSA9IHZhbHVlWzJdO1xuICAgICAgICAgICAgdGhpcy5fbmV3Q29sb3IgPSByZ2IyaGV4KGFycik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IG5ld0NvbG9yKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbmV3Q29sb3I7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVG9sZXJhbmNlL3NlbnNpdGl2aXR5IG9mIHRoZSBmbG9hdGluZy1wb2ludCBjb21wYXJpc29uIGJldHdlZW4gY29sb3JzIChsb3dlciA9IG1vcmUgZXhhY3QsIGhpZ2hlciA9IG1vcmUgaW5jbHVzaXZlKVxuICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgKiBAZGVmYXVsdCAwLjRcbiAgICAgKi9cbiAgICBzZXQgZXBzaWxvbih2YWx1ZSkge1xuICAgICAgICB0aGlzLnVuaWZvcm1zLmVwc2lsb24gPSB2YWx1ZTtcbiAgICB9XG4gICAgZ2V0IGVwc2lsb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnVuaWZvcm1zLmVwc2lsb247XG4gICAgfVxufVxuXG5leHBvcnQgeyBDb2xvclJlcGxhY2VGaWx0ZXIgfTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBb0NBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBbEVBO0FBQ0E7OyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-color-replace/lib/filter-color-replace.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-convolution/lib/filter-convolution.esm.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@pixi/filter-convolution/lib/filter-convolution.esm.js ***!
  \*****************************************************************************/
/*! exports provided: ConvolutionFilter */
/*! exports used: ConvolutionFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ConvolutionFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/*!\n * @pixi/filter-convolution - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-convolution is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"precision mediump float;\\n\\nvarying mediump vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform vec2 texelSize;\\nuniform float matrix[9];\\n\\nvoid main(void)\\n{\\n   vec4 c11 = texture2D(uSampler, vTextureCoord - texelSize); // top left\\n   vec4 c12 = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - texelSize.y)); // top center\\n   vec4 c13 = texture2D(uSampler, vec2(vTextureCoord.x + texelSize.x, vTextureCoord.y - texelSize.y)); // top right\\n\\n   vec4 c21 = texture2D(uSampler, vec2(vTextureCoord.x - texelSize.x, vTextureCoord.y)); // mid left\\n   vec4 c22 = texture2D(uSampler, vTextureCoord); // mid center\\n   vec4 c23 = texture2D(uSampler, vec2(vTextureCoord.x + texelSize.x, vTextureCoord.y)); // mid right\\n\\n   vec4 c31 = texture2D(uSampler, vec2(vTextureCoord.x - texelSize.x, vTextureCoord.y + texelSize.y)); // bottom left\\n   vec4 c32 = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + texelSize.y)); // bottom center\\n   vec4 c33 = texture2D(uSampler, vTextureCoord + texelSize); // bottom right\\n\\n   gl_FragColor =\\n       c11 * matrix[0] + c12 * matrix[1] + c13 * matrix[2] +\\n       c21 * matrix[3] + c22 * matrix[4] + c23 * matrix[5] +\\n       c31 * matrix[6] + c32 * matrix[7] + c33 * matrix[8];\\n\\n   gl_FragColor.a = c22.a;\\n}\\n\";\n\n/**\n * The ConvolutionFilter class applies a matrix convolution filter effect.\n * A convolution combines pixels in the input image with neighboring pixels to produce a new image.\n * A wide variety of image effects can be achieved through convolutions, including blurring, edge\n * detection, sharpening, embossing, and beveling. The matrix should be specified as a 9 point Array.\n * See http://docs.gimp.org/en/plug-in-convmatrix.html for more info.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/convolution.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-convolution|@pixi/filter-convolution}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param [matrix=[0,0,0,0,0,0,0,0,0]] {number[]} An array of values used for matrix transformation. Specified as a 9 point Array.\n * @param [width=200] {number} Width of the object you are transforming\n * @param [height=200] {number} Height of the object you are transforming\n */\nvar ConvolutionFilter = /*@__PURE__*/(function (Filter) {\n    function ConvolutionFilter(matrix, width, height) {\n        if ( width === void 0 ) width = 200;\n        if ( height === void 0 ) height = 200;\n\n        Filter.call(this, vertex, fragment);\n        this.uniforms.texelSize = new Float32Array(2);\n        this.uniforms.matrix = new Float32Array(9);\n        if (matrix !== undefined) {\n            this.matrix = matrix;\n        }\n        this.width = width;\n        this.height = height;\n    }\n\n    if ( Filter ) ConvolutionFilter.__proto__ = Filter;\n    ConvolutionFilter.prototype = Object.create( Filter && Filter.prototype );\n    ConvolutionFilter.prototype.constructor = ConvolutionFilter;\n\n    var prototypeAccessors = { matrix: { configurable: true },width: { configurable: true },height: { configurable: true } };\n\n    /**\n     * An array of values used for matrix transformation. Specified as a 9 point Array.\n     *\n     * @member {Array<number>}\n     */\n    prototypeAccessors.matrix.get = function () {\n        return this.uniforms.matrix;\n    };\n    prototypeAccessors.matrix.set = function (matrix) {\n        var this$1 = this;\n\n        matrix.forEach(function (v, i) { return this$1.uniforms.matrix[i] = v; });\n    };\n\n    /**\n     * Width of the object you are transforming\n     *\n     * @member {number}\n     */\n    prototypeAccessors.width.get = function () {\n        return 1/this.uniforms.texelSize[0];\n    };\n    prototypeAccessors.width.set = function (value) {\n        this.uniforms.texelSize[0] = 1/value;\n    };\n\n    /**\n     * Height of the object you are transforming\n     *\n     * @member {number}\n     */\n    prototypeAccessors.height.get = function () {\n        return 1/this.uniforms.texelSize[1];\n    };\n    prototypeAccessors.height.set = function (value) {\n        this.uniforms.texelSize[1] = 1/value;\n    };\n\n    Object.defineProperties( ConvolutionFilter.prototype, prototypeAccessors );\n\n    return ConvolutionFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLWNvbnZvbHV0aW9uL2xpYi9maWx0ZXItY29udm9sdXRpb24uZXNtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9Db252b2x1dGlvbkZpbHRlci5qcz8zYzk4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dmVydGV4fSBmcm9tICdAdG9vbHMvZnJhZ21lbnRzJztcbmltcG9ydCBmcmFnbWVudCBmcm9tICcuL2NvbnZvbHV0aW9uLmZyYWcnO1xuaW1wb3J0IHtGaWx0ZXJ9IGZyb20gJ0BwaXhpL2NvcmUnO1xuXG4vKipcbiAqIFRoZSBDb252b2x1dGlvbkZpbHRlciBjbGFzcyBhcHBsaWVzIGEgbWF0cml4IGNvbnZvbHV0aW9uIGZpbHRlciBlZmZlY3QuXG4gKiBBIGNvbnZvbHV0aW9uIGNvbWJpbmVzIHBpeGVscyBpbiB0aGUgaW5wdXQgaW1hZ2Ugd2l0aCBuZWlnaGJvcmluZyBwaXhlbHMgdG8gcHJvZHVjZSBhIG5ldyBpbWFnZS5cbiAqIEEgd2lkZSB2YXJpZXR5IG9mIGltYWdlIGVmZmVjdHMgY2FuIGJlIGFjaGlldmVkIHRocm91Z2ggY29udm9sdXRpb25zLCBpbmNsdWRpbmcgYmx1cnJpbmcsIGVkZ2VcbiAqIGRldGVjdGlvbiwgc2hhcnBlbmluZywgZW1ib3NzaW5nLCBhbmQgYmV2ZWxpbmcuIFRoZSBtYXRyaXggc2hvdWxkIGJlIHNwZWNpZmllZCBhcyBhIDkgcG9pbnQgQXJyYXkuXG4gKiBTZWUgaHR0cDovL2RvY3MuZ2ltcC5vcmcvZW4vcGx1Zy1pbi1jb252bWF0cml4Lmh0bWwgZm9yIG1vcmUgaW5mby48YnI+XG4gKiAhW29yaWdpbmFsXSguLi90b29scy9zY3JlZW5zaG90cy9kaXN0L29yaWdpbmFsLnBuZykhW2ZpbHRlcl0oLi4vdG9vbHMvc2NyZWVuc2hvdHMvZGlzdC9jb252b2x1dGlvbi5wbmcpXG4gKlxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBQSVhJLkZpbHRlclxuICogQG1lbWJlcm9mIFBJWEkuZmlsdGVyc1xuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvQHBpeGkvZmlsdGVyLWNvbnZvbHV0aW9ufEBwaXhpL2ZpbHRlci1jb252b2x1dGlvbn1cbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL3BpeGktZmlsdGVyc3xwaXhpLWZpbHRlcnN9XG4gKiBAcGFyYW0gW21hdHJpeD1bMCwwLDAsMCwwLDAsMCwwLDBdXSB7bnVtYmVyW119IEFuIGFycmF5IG9mIHZhbHVlcyB1c2VkIGZvciBtYXRyaXggdHJhbnNmb3JtYXRpb24uIFNwZWNpZmllZCBhcyBhIDkgcG9pbnQgQXJyYXkuXG4gKiBAcGFyYW0gW3dpZHRoPTIwMF0ge251bWJlcn0gV2lkdGggb2YgdGhlIG9iamVjdCB5b3UgYXJlIHRyYW5zZm9ybWluZ1xuICogQHBhcmFtIFtoZWlnaHQ9MjAwXSB7bnVtYmVyfSBIZWlnaHQgb2YgdGhlIG9iamVjdCB5b3UgYXJlIHRyYW5zZm9ybWluZ1xuICovXG5jbGFzcyBDb252b2x1dGlvbkZpbHRlciBleHRlbmRzIEZpbHRlciB7XG5cbiAgICBjb25zdHJ1Y3RvcihtYXRyaXgsIHdpZHRoID0gMjAwLCBoZWlnaHQgPSAyMDApIHtcbiAgICAgICAgc3VwZXIodmVydGV4LCBmcmFnbWVudCk7XG4gICAgICAgIHRoaXMudW5pZm9ybXMudGV4ZWxTaXplID0gbmV3IEZsb2F0MzJBcnJheSgyKTtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5tYXRyaXggPSBuZXcgRmxvYXQzMkFycmF5KDkpO1xuICAgICAgICBpZiAobWF0cml4ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMubWF0cml4ID0gbWF0cml4O1xuICAgICAgICB9XG4gICAgICAgIHRoaXMud2lkdGggPSB3aWR0aDtcbiAgICAgICAgdGhpcy5oZWlnaHQgPSBoZWlnaHQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQW4gYXJyYXkgb2YgdmFsdWVzIHVzZWQgZm9yIG1hdHJpeCB0cmFuc2Zvcm1hdGlvbi4gU3BlY2lmaWVkIGFzIGEgOSBwb2ludCBBcnJheS5cbiAgICAgKlxuICAgICAqIEBtZW1iZXIge0FycmF5PG51bWJlcj59XG4gICAgICovXG4gICAgZ2V0IG1hdHJpeCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudW5pZm9ybXMubWF0cml4O1xuICAgIH1cbiAgICBzZXQgbWF0cml4KG1hdHJpeCkge1xuICAgICAgICBtYXRyaXguZm9yRWFjaCgodiwgaSkgPT4gdGhpcy51bmlmb3Jtcy5tYXRyaXhbaV0gPSB2KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBXaWR0aCBvZiB0aGUgb2JqZWN0IHlvdSBhcmUgdHJhbnNmb3JtaW5nXG4gICAgICpcbiAgICAgKiBAbWVtYmVyIHtudW1iZXJ9XG4gICAgICovXG4gICAgZ2V0IHdpZHRoKCkge1xuICAgICAgICByZXR1cm4gMS90aGlzLnVuaWZvcm1zLnRleGVsU2l6ZVswXTtcbiAgICB9XG4gICAgc2V0IHdpZHRoKHZhbHVlKSB7XG4gICAgICAgIHRoaXMudW5pZm9ybXMudGV4ZWxTaXplWzBdID0gMS92YWx1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBIZWlnaHQgb2YgdGhlIG9iamVjdCB5b3UgYXJlIHRyYW5zZm9ybWluZ1xuICAgICAqXG4gICAgICogQG1lbWJlciB7bnVtYmVyfVxuICAgICAqL1xuICAgIGdldCBoZWlnaHQoKSB7XG4gICAgICAgIHJldHVybiAxL3RoaXMudW5pZm9ybXMudGV4ZWxTaXplWzFdO1xuICAgIH1cbiAgICBzZXQgaGVpZ2h0KHZhbHVlKSB7XG4gICAgICAgIHRoaXMudW5pZm9ybXMudGV4ZWxTaXplWzFdID0gMS92YWx1ZTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IENvbnZvbHV0aW9uRmlsdGVyIH07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUJBO0FBRUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBaERBO0FBQ0E7OyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-convolution/lib/filter-convolution.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-cross-hatch/lib/filter-cross-hatch.esm.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@pixi/filter-cross-hatch/lib/filter-cross-hatch.esm.js ***!
  \*****************************************************************************/
/*! exports provided: CrossHatchFilter */
/*! exports used: CrossHatchFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CrossHatchFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/*!\n * @pixi/filter-cross-hatch - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-cross-hatch is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\n\\nvoid main(void)\\n{\\n    float lum = length(texture2D(uSampler, vTextureCoord.xy).rgb);\\n\\n    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n    if (lum < 1.00)\\n    {\\n        if (mod(gl_FragCoord.x + gl_FragCoord.y, 10.0) == 0.0)\\n        {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    }\\n\\n    if (lum < 0.75)\\n    {\\n        if (mod(gl_FragCoord.x - gl_FragCoord.y, 10.0) == 0.0)\\n        {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    }\\n\\n    if (lum < 0.50)\\n    {\\n        if (mod(gl_FragCoord.x + gl_FragCoord.y - 5.0, 10.0) == 0.0)\\n        {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    }\\n\\n    if (lum < 0.3)\\n    {\\n        if (mod(gl_FragCoord.x - gl_FragCoord.y - 5.0, 10.0) == 0.0)\\n        {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    }\\n}\\n\";\n\n/**\n * A Cross Hatch effect filter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/cross-hatch.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-cross-hatch|@pixi/filter-cross-hatch}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n */\nvar CrossHatchFilter = /*@__PURE__*/(function (Filter) {\n    function CrossHatchFilter() {\n        Filter.call(this, vertex, fragment);\n    }\n\n    if ( Filter ) CrossHatchFilter.__proto__ = Filter;\n    CrossHatchFilter.prototype = Object.create( Filter && Filter.prototype );\n    CrossHatchFilter.prototype.constructor = CrossHatchFilter;\n\n    return CrossHatchFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLWNyb3NzLWhhdGNoL2xpYi9maWx0ZXItY3Jvc3MtaGF0Y2guZXNtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9Dcm9zc0hhdGNoRmlsdGVyLmpzP2M3ZjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHt2ZXJ0ZXh9IGZyb20gJ0B0b29scy9mcmFnbWVudHMnO1xuaW1wb3J0IGZyYWdtZW50IGZyb20gJy4vY3Jvc3NoYXRjaC5mcmFnJztcbmltcG9ydCB7RmlsdGVyfSBmcm9tICdAcGl4aS9jb3JlJztcblxuLyoqXG4gKiBBIENyb3NzIEhhdGNoIGVmZmVjdCBmaWx0ZXIuPGJyPlxuICogIVtvcmlnaW5hbF0oLi4vdG9vbHMvc2NyZWVuc2hvdHMvZGlzdC9vcmlnaW5hbC5wbmcpIVtmaWx0ZXJdKC4uL3Rvb2xzL3NjcmVlbnNob3RzL2Rpc3QvY3Jvc3MtaGF0Y2gucG5nKVxuICpcbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgUElYSS5GaWx0ZXJcbiAqIEBtZW1iZXJvZiBQSVhJLmZpbHRlcnNcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL0BwaXhpL2ZpbHRlci1jcm9zcy1oYXRjaHxAcGl4aS9maWx0ZXItY3Jvc3MtaGF0Y2h9XG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9waXhpLWZpbHRlcnN8cGl4aS1maWx0ZXJzfVxuICovXG5jbGFzcyBDcm9zc0hhdGNoRmlsdGVyIGV4dGVuZHMgRmlsdGVyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIodmVydGV4LCBmcmFnbWVudCk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBDcm9zc0hhdGNoRmlsdGVyIH07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFjQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FBRkE7QUFDQTs7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-cross-hatch/lib/filter-cross-hatch.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-crt/lib/filter-crt.esm.js":
/*!*************************************************************!*\
  !*** ./node_modules/@pixi/filter-crt/lib/filter-crt.esm.js ***!
  \*************************************************************/
/*! exports provided: CRTFilter */
/*! exports used: CRTFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CRTFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/*!\n * @pixi/filter-crt - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-crt is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec4 filterArea;\\nuniform vec2 dimensions;\\n\\nconst float SQRT_2 = 1.414213;\\n\\nconst float light = 1.0;\\n\\nuniform float curvature;\\nuniform float lineWidth;\\nuniform float lineContrast;\\nuniform bool verticalLine;\\nuniform float noise;\\nuniform float noiseSize;\\n\\nuniform float vignetting;\\nuniform float vignettingAlpha;\\nuniform float vignettingBlur;\\n\\nuniform float seed;\\nuniform float time;\\n\\nfloat rand(vec2 co) {\\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\nvoid main(void)\\n{\\n    vec2 pixelCoord = vTextureCoord.xy * filterArea.xy;\\n    vec2 coord = pixelCoord / dimensions;\\n\\n    vec2 dir = vec2(coord - vec2(0.5, 0.5));\\n\\n    float _c = curvature > 0. ? curvature : 1.;\\n    float k = curvature > 0. ?(length(dir * dir) * 0.25 * _c * _c + 0.935 * _c) : 1.;\\n    vec2 uv = dir * k;\\n\\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\\n    vec3 rgb = gl_FragColor.rgb;\\n\\n\\n    if (noise > 0.0 && noiseSize > 0.0)\\n    {\\n        pixelCoord.x = floor(pixelCoord.x / noiseSize);\\n        pixelCoord.y = floor(pixelCoord.y / noiseSize);\\n        float _noise = rand(pixelCoord * noiseSize * seed) - 0.5;\\n        rgb += _noise * noise;\\n    }\\n\\n    if (lineWidth > 0.0) {\\n        float v = (verticalLine ? uv.x * dimensions.x : uv.y * dimensions.y) * min(1.0, 2.0 / lineWidth ) / _c;\\n        float j = 1. + cos(v * 1.2 - time) * 0.5 * lineContrast;\\n        rgb *= j;\\n        float segment = verticalLine ? mod((dir.x + .5) * dimensions.x, 4.) : mod((dir.y + .5) * dimensions.y, 4.);\\n        rgb *= 0.99 + ceil(segment) * 0.015;\\n    }\\n\\n    if (vignetting > 0.0)\\n    {\\n        float outter = SQRT_2 - vignetting * SQRT_2;\\n        float darker = clamp((outter - length(dir) * SQRT_2) / ( 0.00001 + vignettingBlur * SQRT_2), 0.0, 1.0);\\n        rgb *= darker + (1.0 - darker) * (1.0 - vignettingAlpha);\\n    }\\n\\n    gl_FragColor.rgb = rgb;\\n}\\n\";\n\n/**\n * The CRTFilter applies a CRT effect to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/crt.gif)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-crt|@pixi/filter-crt}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n *\n * @param {object} [options] - The optional parameters of CRT effect\n * @param {number} [options.curvature=1.0] - Bent of interlaced lines, higher value means more bend\n * @param {number} [options.lineWidth=1.0] - Width of the interlaced lines\n * @param {number} [options.lineContrast=0.25] - Contrast of interlaced lines\n * @param {number} [options.verticalLine=false] - `true` is vertical lines, `false` is horizontal\n * @param {number} [options.noise=0.3] - Opacity/intensity of the noise effect between `0` and `1`\n * @param {number} [options.noiseSize=1.0] - The size of the noise particles\n * @param {number} [options.seed=0] - A seed value to apply to the random noise generation\n * @param {number} [options.vignetting=0.3] - The radius of the vignette effect, smaller\n *        values produces a smaller vignette\n * @param {number} [options.vignettingAlpha=1.0] - Amount of opacity of vignette\n * @param {number} [options.vignettingBlur=0.3] - Blur intensity of the vignette\n * @param {number} [options.time=0] - For animating interlaced lines\n */\nvar CRTFilter = /*@__PURE__*/(function (Filter) {\n    function CRTFilter(options) {\n        Filter.call(this, vertex, fragment);\n        this.uniforms.dimensions = new Float32Array(2);\n\n        /**\n         * For animating interlaced lines\n         *\n         * @member {number}\n         * @default 0\n         */\n        this.time = 0;\n\n        /**\n         * A seed value to apply to the random noise generation\n         *\n         * @member {number}\n         * @default 0\n         */\n        this.seed = 0;\n\n        Object.assign(this, {\n            curvature: 1.0,\n            lineWidth: 1.0,\n            lineContrast: 0.25,\n            verticalLine: false,\n            noise: 0.0,\n            noiseSize: 1.0,\n            seed: 0.0,\n            vignetting: 0.3,\n            vignettingAlpha: 1.0,\n            vignettingBlur: 0.3,\n            time: 0.0,\n        }, options);\n    }\n\n    if ( Filter ) CRTFilter.__proto__ = Filter;\n    CRTFilter.prototype = Object.create( Filter && Filter.prototype );\n    CRTFilter.prototype.constructor = CRTFilter;\n\n    var prototypeAccessors = { curvature: { configurable: true },lineWidth: { configurable: true },lineContrast: { configurable: true },verticalLine: { configurable: true },noise: { configurable: true },noiseSize: { configurable: true },vignetting: { configurable: true },vignettingAlpha: { configurable: true },vignettingBlur: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    CRTFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.dimensions[0] = input.filterFrame.width;\n        this.uniforms.dimensions[1] = input.filterFrame.height;\n\n        this.uniforms.seed = this.seed;\n        this.uniforms.time = this.time;\n\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * Bent of interlaced lines, higher value means more bend\n     *\n     * @member {number}\n     * @default 1\n     */\n    prototypeAccessors.curvature.set = function (value) {\n        this.uniforms.curvature = value;\n    };\n    prototypeAccessors.curvature.get = function () {\n        return this.uniforms.curvature;\n    };\n\n    /**\n     * Width of interlaced lines\n     *\n     * @member {number}\n     * @default 1\n     */\n    prototypeAccessors.lineWidth.set = function (value) {\n        this.uniforms.lineWidth = value;\n    };\n    prototypeAccessors.lineWidth.get = function () {\n        return this.uniforms.lineWidth;\n    };\n\n    /**\n     * Contrast of interlaced lines\n     *\n     * @member {number}\n     * @default 0.25\n     */\n    prototypeAccessors.lineContrast.set = function (value) {\n        this.uniforms.lineContrast = value;\n    };\n    prototypeAccessors.lineContrast.get = function () {\n        return this.uniforms.lineContrast;\n    };\n\n    /**\n     * `true` for vertical lines, `false` for horizontal lines\n     *\n     * @member {boolean}\n     * @default false\n     */\n    prototypeAccessors.verticalLine.set = function (value) {\n        this.uniforms.verticalLine = value;\n    };\n    prototypeAccessors.verticalLine.get = function () {\n        return this.uniforms.verticalLine;\n    };\n\n    /**\n     * Opacity/intensity of the noise effect between `0` and `1`\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.noise.set = function (value) {\n        this.uniforms.noise = value;\n    };\n    prototypeAccessors.noise.get = function () {\n        return this.uniforms.noise;\n    };\n\n    /**\n     * The size of the noise particles\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.noiseSize.set = function (value) {\n        this.uniforms.noiseSize = value;\n    };\n    prototypeAccessors.noiseSize.get = function () {\n        return this.uniforms.noiseSize;\n    };\n\n    /**\n     * The radius of the vignette effect, smaller\n     * values produces a smaller vignette\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.vignetting.set = function (value) {\n        this.uniforms.vignetting = value;\n    };\n    prototypeAccessors.vignetting.get = function () {\n        return this.uniforms.vignetting;\n    };\n\n    /**\n     * Amount of opacity of vignette\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.vignettingAlpha.set = function (value) {\n        this.uniforms.vignettingAlpha = value;\n    };\n    prototypeAccessors.vignettingAlpha.get = function () {\n        return this.uniforms.vignettingAlpha;\n    };\n\n    /**\n     * Blur intensity of the vignette\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.vignettingBlur.set = function (value) {\n        this.uniforms.vignettingBlur = value;\n    };\n    prototypeAccessors.vignettingBlur.get = function () {\n        return this.uniforms.vignettingBlur;\n    };\n\n    Object.defineProperties( CRTFilter.prototype, prototypeAccessors );\n\n    return CRTFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-crt/lib/filter-crt.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-dot/lib/filter-dot.esm.js":
/*!*************************************************************!*\
  !*** ./node_modules/@pixi/filter-dot/lib/filter-dot.esm.js ***!
  \*************************************************************/
/*! exports provided: DotFilter */
/*! exports used: DotFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DotFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/*!\n * @pixi/filter-dot - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-dot is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\nvarying vec4 vColor;\\n\\nuniform vec4 filterArea;\\nuniform sampler2D uSampler;\\n\\nuniform float angle;\\nuniform float scale;\\n\\nfloat pattern()\\n{\\n   float s = sin(angle), c = cos(angle);\\n   vec2 tex = vTextureCoord * filterArea.xy;\\n   vec2 point = vec2(\\n       c * tex.x - s * tex.y,\\n       s * tex.x + c * tex.y\\n   ) * scale;\\n   return (sin(point.x) * sin(point.y)) * 4.0;\\n}\\n\\nvoid main()\\n{\\n   vec4 color = texture2D(uSampler, vTextureCoord);\\n   float average = (color.r + color.g + color.b) / 3.0;\\n   gl_FragColor = vec4(vec3(average * 10.0 - 5.0 + pattern()), color.a);\\n}\\n\";\n\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n * original filter: https://github.com/evanw/glfx.js/blob/master/src/filters/fun/dotscreen.js\n */\n\n/**\n * This filter applies a dotscreen effect making display objects appear to be made out of\n * black and white halftone dots like an old printer.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/dot.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-dot|@pixi/filter-dot}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {number} [scale=1] The scale of the effect.\n * @param {number} [angle=5] The radius of the effect.\n */\nvar DotFilter = /*@__PURE__*/(function (Filter) {\n    function DotFilter(scale, angle) {\n        if ( scale === void 0 ) scale = 1;\n        if ( angle === void 0 ) angle = 5;\n\n        Filter.call(this, vertex, fragment);\n        this.scale = scale;\n        this.angle = angle;\n    }\n\n    if ( Filter ) DotFilter.__proto__ = Filter;\n    DotFilter.prototype = Object.create( Filter && Filter.prototype );\n    DotFilter.prototype.constructor = DotFilter;\n\n    var prototypeAccessors = { scale: { configurable: true },angle: { configurable: true } };\n\n    /**\n     * The scale of the effect.\n     * @member {number}\n     * @default 1\n     */\n    prototypeAccessors.scale.get = function () {\n        return this.uniforms.scale;\n    };\n    prototypeAccessors.scale.set = function (value) {\n        this.uniforms.scale = value;\n    };\n\n    /**\n     * The radius of the effect.\n     * @member {number}\n     * @default 5\n     */\n    prototypeAccessors.angle.get = function () {\n        return this.uniforms.angle;\n    };\n    prototypeAccessors.angle.set = function (value) {\n        this.uniforms.angle = value;\n    };\n\n    Object.defineProperties( DotFilter.prototype, prototypeAccessors );\n\n    return DotFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLWRvdC9saWIvZmlsdGVyLWRvdC5lc20uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL0RvdEZpbHRlci5qcz8yNjc0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dmVydGV4fSBmcm9tICdAdG9vbHMvZnJhZ21lbnRzJztcbmltcG9ydCBmcmFnbWVudCBmcm9tICcuL2RvdC5mcmFnJztcbmltcG9ydCB7RmlsdGVyfSBmcm9tICdAcGl4aS9jb3JlJztcblxuLyoqXG4gKiBAYXV0aG9yIE1hdCBHcm92ZXMgaHR0cDovL21hdGdyb3Zlcy5jb20vIEBEb29ybWF0MjNcbiAqIG9yaWdpbmFsIGZpbHRlcjogaHR0cHM6Ly9naXRodWIuY29tL2V2YW53L2dsZnguanMvYmxvYi9tYXN0ZXIvc3JjL2ZpbHRlcnMvZnVuL2RvdHNjcmVlbi5qc1xuICovXG5cbi8qKlxuICogVGhpcyBmaWx0ZXIgYXBwbGllcyBhIGRvdHNjcmVlbiBlZmZlY3QgbWFraW5nIGRpc3BsYXkgb2JqZWN0cyBhcHBlYXIgdG8gYmUgbWFkZSBvdXQgb2ZcbiAqIGJsYWNrIGFuZCB3aGl0ZSBoYWxmdG9uZSBkb3RzIGxpa2UgYW4gb2xkIHByaW50ZXIuPGJyPlxuICogIVtvcmlnaW5hbF0oLi4vdG9vbHMvc2NyZWVuc2hvdHMvZGlzdC9vcmlnaW5hbC5wbmcpIVtmaWx0ZXJdKC4uL3Rvb2xzL3NjcmVlbnNob3RzL2Rpc3QvZG90LnBuZylcbiAqXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIFBJWEkuRmlsdGVyXG4gKiBAbWVtYmVyb2YgUElYSS5maWx0ZXJzXG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9AcGl4aS9maWx0ZXItZG90fEBwaXhpL2ZpbHRlci1kb3R9XG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9waXhpLWZpbHRlcnN8cGl4aS1maWx0ZXJzfVxuICogQHBhcmFtIHtudW1iZXJ9IFtzY2FsZT0xXSBUaGUgc2NhbGUgb2YgdGhlIGVmZmVjdC5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbYW5nbGU9NV0gVGhlIHJhZGl1cyBvZiB0aGUgZWZmZWN0LlxuICovXG5jbGFzcyBEb3RGaWx0ZXIgZXh0ZW5kcyBGaWx0ZXIge1xuXG4gICAgY29uc3RydWN0b3Ioc2NhbGUgPSAxLCBhbmdsZSA9IDUpIHtcbiAgICAgICAgc3VwZXIodmVydGV4LCBmcmFnbWVudCk7XG4gICAgICAgIHRoaXMuc2NhbGUgPSBzY2FsZTtcbiAgICAgICAgdGhpcy5hbmdsZSA9IGFuZ2xlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBzY2FsZSBvZiB0aGUgZWZmZWN0LlxuICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgKiBAZGVmYXVsdCAxXG4gICAgICovXG4gICAgZ2V0IHNjYWxlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy51bmlmb3Jtcy5zY2FsZTtcbiAgICB9XG4gICAgc2V0IHNjYWxlKHZhbHVlKSB7XG4gICAgICAgIHRoaXMudW5pZm9ybXMuc2NhbGUgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgcmFkaXVzIG9mIHRoZSBlZmZlY3QuXG4gICAgICogQG1lbWJlciB7bnVtYmVyfVxuICAgICAqIEBkZWZhdWx0IDVcbiAgICAgKi9cbiAgICBnZXQgYW5nbGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnVuaWZvcm1zLmFuZ2xlO1xuICAgIH1cbiAgICBzZXQgYW5nbGUodmFsdWUpIHtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5hbmdsZSA9IHZhbHVlO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgRG90RmlsdGVyIH07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXNCQTtBQUVBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBOzs7Ozs7O0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBL0JBO0FBQ0E7OyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-dot/lib/filter-dot.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-drop-shadow/lib/filter-drop-shadow.esm.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@pixi/filter-drop-shadow/lib/filter-drop-shadow.esm.js ***!
  \*****************************************************************************/
/*! exports provided: DropShadowFilter */
/*! exports used: DropShadowFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DropShadowFilter; });\n/* harmony import */ var _pixi_filter_kawase_blur__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/filter-kawase-blur */ \"./node_modules/@pixi/filter-kawase-blur/lib/filter-kawase-blur.esm.js\");\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/* harmony import */ var _pixi_settings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @pixi/settings */ \"./node_modules/@pixi/settings/lib/settings.es.js\");\n/* harmony import */ var _pixi_math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @pixi/math */ \"./node_modules/@pixi/math/lib/math.es.js\");\n/* harmony import */ var _pixi_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @pixi/utils */ \"./node_modules/@pixi/utils/lib/utils.es.js\");\n/*!\n * @pixi/filter-drop-shadow - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-drop-shadow is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\n\n\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform float alpha;\\nuniform vec3 color;\\n\\nuniform vec2 shift;\\nuniform vec4 inputSize;\\n\\nvoid main(void){\\n    vec4 sample = texture2D(uSampler, vTextureCoord - shift * inputSize.zw);\\n\\n    // Un-premultiply alpha before applying the color\\n    if (sample.a > 0.0) {\\n        sample.rgb /= sample.a;\\n    }\\n\\n    // Premultiply alpha again\\n    sample.rgb = color.rgb * sample.a;\\n\\n    // alpha user alpha\\n    sample *= alpha;\\n\\n    gl_FragColor = sample;\\n}\";\n\n/**\n * Drop shadow filter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/drop-shadow.png)\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-drop-shadow|@pixi/filter-drop-shadow}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {object} [options] Filter options\n * @param {number} [options.rotation=45] The angle of the shadow in degrees.\n * @param {number} [options.distance=5] Distance of shadow\n * @param {number} [options.color=0x000000] Color of the shadow\n * @param {number} [options.alpha=0.5] Alpha of the shadow\n * @param {number} [options.shadowOnly=false] Whether render shadow only\n * @param {number} [options.blur=2] - Sets the strength of the Blur properties simultaneously\n * @param {number} [options.quality=3] - The quality of the Blur filter.\n * @param {number[]} [options.kernels=null] - The kernels of the Blur filter.\n * @param {number|number[]|PIXI.Point} [options.pixelSize=1] - the pixelSize of the Blur filter.\n * @param {number} [options.resolution=PIXI.settings.RESOLUTION] - The resolution of the Blur filter.\n */\nvar DropShadowFilter = /*@__PURE__*/(function (Filter) {\n    function DropShadowFilter(options) {\n\n        // Fallback support for ctor: (rotation, distance, blur, color, alpha)\n        if (options && options.constructor !== Object) {\n            // eslint-disable-next-line no-console\n            console.warn('DropShadowFilter now uses options instead of (rotation, distance, blur, color, alpha)');\n            options = { rotation: options };\n            if (arguments[1] !== undefined) {\n                options.distance = arguments[1];\n            }\n            if (arguments[2] !== undefined) {\n                options.blur = arguments[2];\n            }\n            if (arguments[3] !== undefined) {\n                options.color = arguments[3];\n            }\n            if (arguments[4] !== undefined) {\n                options.alpha = arguments[4];\n            }\n        }\n\n        options = Object.assign({\n            rotation: 45,\n            distance: 5,\n            color: 0x000000,\n            alpha: 0.5,\n            shadowOnly: false,\n            kernels: null,\n            blur: 2,\n            quality: 3,\n            pixelSize: 1,\n            resolution: _pixi_settings__WEBPACK_IMPORTED_MODULE_2__[/* settings */ \"b\"].RESOLUTION,\n        }, options);\n\n        Filter.call(this);\n\n        var kernels = options.kernels;\n        var blur = options.blur;\n        var quality = options.quality;\n        var pixelSize = options.pixelSize;\n        var resolution = options.resolution;\n\n        this._tintFilter = new Filter(vertex, fragment);\n        this._tintFilter.uniforms.color = new Float32Array(4);\n        this._tintFilter.uniforms.shift = new _pixi_math__WEBPACK_IMPORTED_MODULE_3__[/* Point */ \"g\"]();\n        this._tintFilter.resolution = resolution;\n        this._blurFilter = kernels ?\n            new _pixi_filter_kawase_blur__WEBPACK_IMPORTED_MODULE_0__[/* KawaseBlurFilter */ \"a\"](kernels) :\n            new _pixi_filter_kawase_blur__WEBPACK_IMPORTED_MODULE_0__[/* KawaseBlurFilter */ \"a\"](blur, quality);\n\n        this.pixelSize = pixelSize;\n        this.resolution = resolution;\n\n        var shadowOnly = options.shadowOnly;\n        var rotation = options.rotation;\n        var distance = options.distance;\n        var alpha = options.alpha;\n        var color = options.color;\n\n        this.shadowOnly = shadowOnly;\n        this.rotation = rotation;\n        this.distance = distance;\n        this.alpha = alpha;\n        this.color = color;\n\n        this._updatePadding();\n    }\n\n    if ( Filter ) DropShadowFilter.__proto__ = Filter;\n    DropShadowFilter.prototype = Object.create( Filter && Filter.prototype );\n    DropShadowFilter.prototype.constructor = DropShadowFilter;\n\n    var prototypeAccessors = { resolution: { configurable: true },distance: { configurable: true },rotation: { configurable: true },alpha: { configurable: true },color: { configurable: true },kernels: { configurable: true },blur: { configurable: true },quality: { configurable: true },pixelSize: { configurable: true } };\n\n    DropShadowFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        var target = filterManager.getFilterTexture();\n\n        this._tintFilter.apply(filterManager, input, target, true);\n        this._blurFilter.apply(filterManager, target, output, clear);\n\n        if (this.shadowOnly !== true) {\n            filterManager.applyFilter(this, input, output, false);\n        }\n\n        filterManager.returnFilterTexture(target);\n    };\n\n    /**\n     * Recalculate the proper padding amount.\n     * @private\n     */\n    DropShadowFilter.prototype._updatePadding = function _updatePadding () {\n        this.padding = this.distance + (this.blur * 2);\n    };\n\n    /**\n     * Update the transform matrix of offset angle.\n     * @private\n     */\n    DropShadowFilter.prototype._updateShift = function _updateShift () {\n        this._tintFilter.uniforms.shift.set(\n            this.distance * Math.cos(this.angle),\n            this.distance * Math.sin(this.angle)\n        );\n    };\n\n    /**\n     * The resolution of the filter.\n     *\n     * @member {number}\n     * @default PIXI.settings.RESOLUTION\n     */\n    prototypeAccessors.resolution.get = function () {\n        return this._resolution;\n    };\n    prototypeAccessors.resolution.set = function (value) {\n        this._resolution = value;\n\n        if (this._tintFilter) {\n            this._tintFilter.resolution = value;\n        }\n        if (this._blurFilter) {\n            this._blurFilter.resolution = value;\n        }\n    };\n\n    /**\n     * Distance offset of the shadow\n     * @member {number}\n     * @default 5\n     */\n    prototypeAccessors.distance.get = function () {\n        return this._distance;\n    };\n    prototypeAccessors.distance.set = function (value) {\n        this._distance = value;\n        this._updatePadding();\n        this._updateShift();\n    };\n\n    /**\n     * The angle of the shadow in degrees\n     * @member {number}\n     * @default 2\n     */\n    prototypeAccessors.rotation.get = function () {\n        return this.angle / _pixi_math__WEBPACK_IMPORTED_MODULE_3__[/* DEG_TO_RAD */ \"b\"];\n    };\n    prototypeAccessors.rotation.set = function (value) {\n        this.angle = value * _pixi_math__WEBPACK_IMPORTED_MODULE_3__[/* DEG_TO_RAD */ \"b\"];\n        this._updateShift();\n    };\n\n    /**\n     * The alpha of the shadow\n     * @member {number}\n     * @default 1\n     */\n    prototypeAccessors.alpha.get = function () {\n        return this._tintFilter.uniforms.alpha;\n    };\n    prototypeAccessors.alpha.set = function (value) {\n        this._tintFilter.uniforms.alpha = value;\n    };\n\n    /**\n     * The color of the shadow.\n     * @member {number}\n     * @default 0x000000\n     */\n    prototypeAccessors.color.get = function () {\n        return Object(_pixi_utils__WEBPACK_IMPORTED_MODULE_4__[\"rgb2hex\"])(this._tintFilter.uniforms.color);\n    };\n    prototypeAccessors.color.set = function (value) {\n        Object(_pixi_utils__WEBPACK_IMPORTED_MODULE_4__[\"hex2rgb\"])(value, this._tintFilter.uniforms.color);\n    };\n\n    /**\n     * Sets the kernels of the Blur Filter\n     *\n     * @member {number[]}\n     */\n    prototypeAccessors.kernels.get = function () {\n        return this._blurFilter.kernels;\n    };\n    prototypeAccessors.kernels.set = function (value) {\n        this._blurFilter.kernels = value;\n    };\n\n    /**\n     * The blur of the shadow\n     * @member {number}\n     * @default 2\n     */\n    prototypeAccessors.blur.get = function () {\n        return this._blurFilter.blur;\n    };\n    prototypeAccessors.blur.set = function (value) {\n        this._blurFilter.blur = value;\n        this._updatePadding();\n    };\n\n    /**\n     * Sets the quality of the Blur Filter\n     *\n     * @member {number}\n     * @default 4\n     */\n    prototypeAccessors.quality.get = function () {\n        return this._blurFilter.quality;\n    };\n    prototypeAccessors.quality.set = function (value) {\n        this._blurFilter.quality = value;\n    };\n\n    /**\n     * Sets the pixelSize of the Kawase Blur filter\n     *\n     * @member {number|number[]|PIXI.Point}\n     * @default 1\n     */\n    prototypeAccessors.pixelSize.get = function () {\n        return this._blurFilter.pixelSize;\n    };\n    prototypeAccessors.pixelSize.set = function (value) {\n        this._blurFilter.pixelSize = value;\n    };\n\n    Object.defineProperties( DropShadowFilter.prototype, prototypeAccessors );\n\n    return DropShadowFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_1__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-drop-shadow/lib/filter-drop-shadow.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-emboss/lib/filter-emboss.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@pixi/filter-emboss/lib/filter-emboss.esm.js ***!
  \*******************************************************************/
/*! exports provided: EmbossFilter */
/*! exports used: EmbossFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return EmbossFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/*!\n * @pixi/filter-emboss - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-emboss is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform float strength;\\nuniform vec4 filterArea;\\n\\n\\nvoid main(void)\\n{\\n\\tvec2 onePixel = vec2(1.0 / filterArea);\\n\\n\\tvec4 color;\\n\\n\\tcolor.rgb = vec3(0.5);\\n\\n\\tcolor -= texture2D(uSampler, vTextureCoord - onePixel) * strength;\\n\\tcolor += texture2D(uSampler, vTextureCoord + onePixel) * strength;\\n\\n\\tcolor.rgb = vec3((color.r + color.g + color.b) / 3.0);\\n\\n\\tfloat alpha = texture2D(uSampler, vTextureCoord).a;\\n\\n\\tgl_FragColor = vec4(color.rgb * alpha, alpha);\\n}\\n\";\n\n/**\n * An RGB Split Filter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/emboss.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-emboss|@pixi/filter-emboss}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {number} [strength=5] Strength of the emboss.\n */\nvar EmbossFilter = /*@__PURE__*/(function (Filter) {\n    function EmbossFilter(strength){\n        if ( strength === void 0 ) strength = 5;\n\n        Filter.call(this, vertex, fragment);\n        this.strength = strength;\n    }\n\n    if ( Filter ) EmbossFilter.__proto__ = Filter;\n    EmbossFilter.prototype = Object.create( Filter && Filter.prototype );\n    EmbossFilter.prototype.constructor = EmbossFilter;\n\n    var prototypeAccessors = { strength: { configurable: true } };\n\n    /**\n     * Strength of emboss.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.strength.get = function () {\n        return this.uniforms.strength;\n    };\n    prototypeAccessors.strength.set = function (value) {\n        this.uniforms.strength = value;\n    };\n\n    Object.defineProperties( EmbossFilter.prototype, prototypeAccessors );\n\n    return EmbossFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLWVtYm9zcy9saWIvZmlsdGVyLWVtYm9zcy5lc20uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL0VtYm9zc0ZpbHRlci5qcz81NDc0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dmVydGV4fSBmcm9tICdAdG9vbHMvZnJhZ21lbnRzJztcbmltcG9ydCBmcmFnbWVudCBmcm9tICcuL2VtYm9zcy5mcmFnJztcbmltcG9ydCB7RmlsdGVyfSBmcm9tICdAcGl4aS9jb3JlJztcblxuLyoqXG4gKiBBbiBSR0IgU3BsaXQgRmlsdGVyLjxicj5cbiAqICFbb3JpZ2luYWxdKC4uL3Rvb2xzL3NjcmVlbnNob3RzL2Rpc3Qvb3JpZ2luYWwucG5nKSFbZmlsdGVyXSguLi90b29scy9zY3JlZW5zaG90cy9kaXN0L2VtYm9zcy5wbmcpXG4gKlxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBQSVhJLkZpbHRlclxuICogQG1lbWJlcm9mIFBJWEkuZmlsdGVyc1xuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvQHBpeGkvZmlsdGVyLWVtYm9zc3xAcGl4aS9maWx0ZXItZW1ib3NzfVxuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvcGl4aS1maWx0ZXJzfHBpeGktZmlsdGVyc31cbiAqIEBwYXJhbSB7bnVtYmVyfSBbc3RyZW5ndGg9NV0gU3RyZW5ndGggb2YgdGhlIGVtYm9zcy5cbiAqL1xuY2xhc3MgRW1ib3NzRmlsdGVyIGV4dGVuZHMgRmlsdGVyIHtcbiAgICBjb25zdHJ1Y3RvcihzdHJlbmd0aCA9IDUpe1xuICAgICAgICBzdXBlcih2ZXJ0ZXgsIGZyYWdtZW50KTtcbiAgICAgICAgdGhpcy5zdHJlbmd0aCA9IHN0cmVuZ3RoO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFN0cmVuZ3RoIG9mIGVtYm9zcy5cbiAgICAgKlxuICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgKi9cbiAgICBnZXQgc3RyZW5ndGgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnVuaWZvcm1zLnN0cmVuZ3RoO1xuICAgIH1cbiAgICBzZXQgc3RyZW5ndGgodmFsdWUpIHtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5zdHJlbmd0aCA9IHZhbHVlO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgRW1ib3NzRmlsdGVyIH07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBOzs7Ozs7O0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFqQkE7QUFDQTs7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-emboss/lib/filter-emboss.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-glitch/lib/filter-glitch.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@pixi/filter-glitch/lib/filter-glitch.esm.js ***!
  \*******************************************************************/
/*! exports provided: GlitchFilter */
/*! exports used: GlitchFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return GlitchFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/* harmony import */ var _pixi_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixi/constants */ \"./node_modules/@pixi/constants/lib/constants.es.js\");\n/* harmony import */ var _pixi_math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @pixi/math */ \"./node_modules/@pixi/math/lib/math.es.js\");\n/*!\n * @pixi/filter-glitch - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-glitch is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"// precision highp float;\\n\\nvarying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\nuniform vec2 dimensions;\\nuniform float aspect;\\n\\nuniform sampler2D displacementMap;\\nuniform float offset;\\nuniform float sinDir;\\nuniform float cosDir;\\nuniform int fillMode;\\n\\nuniform float seed;\\nuniform vec2 red;\\nuniform vec2 green;\\nuniform vec2 blue;\\n\\nconst int TRANSPARENT = 0;\\nconst int ORIGINAL = 1;\\nconst int LOOP = 2;\\nconst int CLAMP = 3;\\nconst int MIRROR = 4;\\n\\nvoid main(void)\\n{\\n    vec2 coord = (vTextureCoord * filterArea.xy) / dimensions;\\n\\n    if (coord.x > 1.0 || coord.y > 1.0) {\\n        return;\\n    }\\n\\n    float cx = coord.x - 0.5;\\n    float cy = (coord.y - 0.5) * aspect;\\n    float ny = (-sinDir * cx + cosDir * cy) / aspect + 0.5;\\n\\n    // displacementMap: repeat\\n    // ny = ny > 1.0 ? ny - 1.0 : (ny < 0.0 ? 1.0 + ny : ny);\\n\\n    // displacementMap: mirror\\n    ny = ny > 1.0 ? 2.0 - ny : (ny < 0.0 ? -ny : ny);\\n\\n    vec4 dc = texture2D(displacementMap, vec2(0.5, ny));\\n\\n    float displacement = (dc.r - dc.g) * (offset / filterArea.x);\\n\\n    coord = vTextureCoord + vec2(cosDir * displacement, sinDir * displacement * aspect);\\n\\n    if (fillMode == CLAMP) {\\n        coord = clamp(coord, filterClamp.xy, filterClamp.zw);\\n    } else {\\n        if( coord.x > filterClamp.z ) {\\n            if (fillMode == TRANSPARENT) {\\n                discard;\\n            } else if (fillMode == LOOP) {\\n                coord.x -= filterClamp.z;\\n            } else if (fillMode == MIRROR) {\\n                coord.x = filterClamp.z * 2.0 - coord.x;\\n            }\\n        } else if( coord.x < filterClamp.x ) {\\n            if (fillMode == TRANSPARENT) {\\n                discard;\\n            } else if (fillMode == LOOP) {\\n                coord.x += filterClamp.z;\\n            } else if (fillMode == MIRROR) {\\n                coord.x *= -filterClamp.z;\\n            }\\n        }\\n\\n        if( coord.y > filterClamp.w ) {\\n            if (fillMode == TRANSPARENT) {\\n                discard;\\n            } else if (fillMode == LOOP) {\\n                coord.y -= filterClamp.w;\\n            } else if (fillMode == MIRROR) {\\n                coord.y = filterClamp.w * 2.0 - coord.y;\\n            }\\n        } else if( coord.y < filterClamp.y ) {\\n            if (fillMode == TRANSPARENT) {\\n                discard;\\n            } else if (fillMode == LOOP) {\\n                coord.y += filterClamp.w;\\n            } else if (fillMode == MIRROR) {\\n                coord.y *= -filterClamp.w;\\n            }\\n        }\\n    }\\n\\n    gl_FragColor.r = texture2D(uSampler, coord + red * (1.0 - seed * 0.4) / filterArea.xy).r;\\n    gl_FragColor.g = texture2D(uSampler, coord + green * (1.0 - seed * 0.3) / filterArea.xy).g;\\n    gl_FragColor.b = texture2D(uSampler, coord + blue * (1.0 - seed * 0.2) / filterArea.xy).b;\\n    gl_FragColor.a = texture2D(uSampler, coord).a;\\n}\\n\";\n\n/**\n * The GlitchFilter applies a glitch effect to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/glitch.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-glitch|@pixi/filter-glitch}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {object} [options] - The more optional parameters of the filter.\n * @param {number} [options.slices=5] - The maximum number of slices.\n * @param {number} [options.offset=100] - The maximum offset amount of slices.\n * @param {number} [options.direction=0] - The angle in degree of the offset of slices.\n * @param {number} [options.fillMode=0] - The fill mode of the space after the offset. Acceptable values:\n *  - `0` {@link PIXI.filters.GlitchFilter.TRANSPARENT TRANSPARENT}\n *  - `1` {@link PIXI.filters.GlitchFilter.ORIGINAL ORIGINAL}\n *  - `2` {@link PIXI.filters.GlitchFilter.LOOP LOOP}\n *  - `3` {@link PIXI.filters.GlitchFilter.CLAMP CLAMP}\n *  - `4` {@link PIXI.filters.GlitchFilter.MIRROR MIRROR}\n * @param {number} [options.seed=0] - A seed value for randomizing glitch effect.\n * @param {number} [options.average=false] - `true` will divide the bands roughly based on equal amounts\n *                 where as setting to `false` will vary the band sizes dramatically (more random looking).\n * @param {number} [options.minSize=8] - Minimum size of individual slice. Segment of total `sampleSize`\n * @param {number} [options.sampleSize=512] - The resolution of the displacement map texture.\n * @param {number} [options.red=[0,0]] - Red channel offset\n * @param {number} [options.green=[0,0]] - Green channel offset.\n * @param {number} [options.blue=[0,0]] - Blue channel offset.\n */\nvar GlitchFilter = /*@__PURE__*/(function (Filter) {\n    function GlitchFilter(options) {\n        if ( options === void 0 ) options = {};\n\n\n        Filter.call(this, vertex, fragment);\n        this.uniforms.dimensions = new Float32Array(2);\n\n        options = Object.assign({\n            slices: 5,\n            offset: 100,\n            direction: 0,\n            fillMode: 0,\n            average: false,\n            seed: 0,\n            red: [0, 0],\n            green: [0, 0],\n            blue: [0, 0],\n            minSize: 8,\n            sampleSize: 512,\n        }, options);\n\n        this.direction = options.direction;\n        this.red = options.red;\n        this.green = options.green;\n        this.blue = options.blue;\n\n        /**\n         * The maximum offset value for each of the slices.\n         *\n         * @member {number}\n         */\n        this.offset = options.offset;\n\n        /**\n         * The fill mode of the space after the offset.\n         *\n         * @member {number}\n         */\n        this.fillMode = options.fillMode;\n\n        /**\n         * `true` will divide the bands roughly based on equal amounts\n         * where as setting to `false` will vary the band sizes dramatically (more random looking).\n         *\n         * @member {boolean}\n         * @default false\n         */\n        this.average = options.average;\n\n        /**\n         * A seed value for randomizing color offset. Animating\n         * this value to `Math.random()` produces a twitching effect.\n         *\n         * @member {number}\n         */\n        this.seed = options.seed;\n\n        /**\n         * Minimum size of slices as a portion of the `sampleSize`\n         *\n         * @member {number}\n         */\n        this.minSize = options.minSize;\n\n        /**\n         * Height of the displacement map canvas.\n         *\n         * @member {number}\n         * @readonly\n         */\n        this.sampleSize = options.sampleSize;\n\n        /**\n         * Internally generated canvas.\n         *\n         * @member {HTMLCanvasElement} _canvas\n         * @private\n         */\n        this._canvas = document.createElement('canvas');\n        this._canvas.width = 4;\n        this._canvas.height = this.sampleSize;\n\n        /**\n         * The displacement map is used to generate the bands.\n         * If using your own texture, `slices` will be ignored.\n         *\n         * @member {PIXI.Texture}\n         * @readonly\n         */\n        this.texture = _pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Texture */ \"E\"].from(this._canvas, { scaleMode: _pixi_constants__WEBPACK_IMPORTED_MODULE_1__[/* SCALE_MODES */ \"k\"].NEAREST });\n\n        /**\n         * Internal number of slices\n         * @member {number}\n         * @private\n         */\n        this._slices = 0;\n\n        // Set slices\n        this.slices = options.slices;\n    }\n\n    if ( Filter ) GlitchFilter.__proto__ = Filter;\n    GlitchFilter.prototype = Object.create( Filter && Filter.prototype );\n    GlitchFilter.prototype.constructor = GlitchFilter;\n\n    var prototypeAccessors = { sizes: { configurable: true },offsets: { configurable: true },slices: { configurable: true },direction: { configurable: true },red: { configurable: true },green: { configurable: true },blue: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    GlitchFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n\n        var width = input.filterFrame.width;\n        var height = input.filterFrame.height;\n\n        this.uniforms.dimensions[0] = width;\n        this.uniforms.dimensions[1] = height;\n        this.uniforms.aspect = height / width;\n\n        this.uniforms.seed = this.seed;\n        this.uniforms.offset = this.offset;\n        this.uniforms.fillMode = this.fillMode;\n\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * Randomize the slices size (heights).\n     *\n     * @private\n     */\n    GlitchFilter.prototype._randomizeSizes = function _randomizeSizes () {\n        var arr = this._sizes;\n        var last = this._slices - 1;\n        var size = this.sampleSize;\n        var min = Math.min(this.minSize / size, 0.9 / this._slices);\n\n        if (this.average) {\n            var count = this._slices;\n            var rest = 1;\n\n            for (var i = 0; i < last; i++) {\n                var averageWidth = rest / (count - i);\n                var w =  Math.max(averageWidth * (1 - Math.random() * 0.6), min);\n                arr[i] = w;\n                rest -= w;\n            }\n            arr[last] = rest;\n        }\n        else {\n            var rest$1 = 1;\n            var ratio = Math.sqrt(1 / this._slices);\n\n            for (var i$1 = 0; i$1 < last; i$1++) {\n                var w$1 = Math.max(ratio * rest$1 * Math.random(), min);\n                arr[i$1] = w$1;\n                rest$1 -= w$1;\n            }\n            arr[last] = rest$1;\n        }\n\n        this.shuffle();\n    };\n\n    /**\n     * Shuffle the sizes of the slices, advanced usage.\n     */\n    GlitchFilter.prototype.shuffle = function shuffle () {\n        var arr = this._sizes;\n        var last = this._slices - 1;\n\n        // shuffle\n        for (var i = last; i > 0; i--) {\n            var rand = (Math.random() * i) >> 0;\n            var temp = arr[i];\n\n            arr[i] = arr[rand];\n            arr[rand] = temp;\n        }\n    };\n\n    /**\n     * Randomize the values for offset from -1 to 1\n     *\n     * @private\n     */\n    GlitchFilter.prototype._randomizeOffsets = function _randomizeOffsets () {\n        for (var i = 0 ; i < this._slices; i++) {\n            this._offsets[i] = Math.random() * (Math.random() < 0.5 ? -1 : 1);\n        }\n    };\n\n    /**\n     * Regenerating random size, offsets for slices.\n     */\n    GlitchFilter.prototype.refresh = function refresh () {\n        this._randomizeSizes();\n        this._randomizeOffsets();\n        this.redraw();\n    };\n\n    /**\n     * Redraw displacement bitmap texture, advanced usage.\n     */\n    GlitchFilter.prototype.redraw = function redraw () {\n        var size = this.sampleSize;\n        var texture = this.texture;\n        var ctx = this._canvas.getContext('2d');\n        ctx.clearRect(0, 0, 8, size);\n\n        var offset;\n        var y = 0;\n\n        for (var i = 0 ; i < this._slices; i++) {\n            offset = Math.floor(this._offsets[i] * 256);\n            var height = this._sizes[i] * size;\n            var red = offset > 0 ? offset : 0;\n            var green = offset < 0 ? -offset : 0;\n            ctx.fillStyle = 'rgba(' + red + ', ' + green + ', 0, 1)';\n            ctx.fillRect(0, y >> 0, size, height + 1 >> 0);\n            y += height;\n        }\n\n        texture.baseTexture.update();\n        this.uniforms.displacementMap = texture;\n    };\n\n    /**\n     * Manually custom slices size (height) of displacement bitmap\n     *\n     * @member {number[]}\n     */\n    prototypeAccessors.sizes.set = function (sizes) {\n        var len = Math.min(this._slices, sizes.length);\n\n        for (var i = 0; i < len; i++){\n            this._sizes[i] = sizes[i];\n        }\n    };\n    prototypeAccessors.sizes.get = function () {\n        return this._sizes;\n    };\n\n    /**\n     * Manually set custom slices offset of displacement bitmap, this is\n     * a collection of values from -1 to 1. To change the max offset value\n     * set `offset`.\n     *\n     * @member {number[]}\n     */\n    prototypeAccessors.offsets.set = function (offsets) {\n        var len = Math.min(this._slices, offsets.length);\n\n        for (var i = 0; i < len; i++){\n            this._offsets[i] = offsets[i];\n        }\n    };\n    prototypeAccessors.offsets.get = function () {\n        return this._offsets;\n    };\n\n    /**\n     * The count of slices.\n     * @member {number}\n     * @default 5\n     */\n    prototypeAccessors.slices.get = function () {\n        return this._slices;\n    };\n    prototypeAccessors.slices.set = function (value) {\n        if (this._slices === value) {\n            return;\n        }\n        this._slices = value;\n        this.uniforms.slices = value;\n        this._sizes = this.uniforms.slicesWidth = new Float32Array(value);\n        this._offsets = this.uniforms.slicesOffset = new Float32Array(value);\n        this.refresh();\n    };\n\n    /**\n     * The angle in degree of the offset of slices.\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.direction.get = function () {\n        return this._direction;\n    };\n    prototypeAccessors.direction.set = function (value) {\n        if (this._direction === value) {\n            return;\n        }\n        this._direction = value;\n\n        var radians = value * _pixi_math__WEBPACK_IMPORTED_MODULE_2__[/* DEG_TO_RAD */ \"b\"];\n\n        this.uniforms.sinDir = Math.sin(radians);\n        this.uniforms.cosDir = Math.cos(radians);\n    };\n\n    /**\n     * Red channel offset.\n     *\n     * @member {PIXI.Point}\n     */\n    prototypeAccessors.red.get = function () {\n        return this.uniforms.red;\n    };\n    prototypeAccessors.red.set = function (value) {\n        this.uniforms.red = value;\n    };\n\n    /**\n     * Green channel offset.\n     *\n     * @member {PIXI.Point}\n     */\n    prototypeAccessors.green.get = function () {\n        return this.uniforms.green;\n    };\n    prototypeAccessors.green.set = function (value) {\n        this.uniforms.green = value;\n    };\n\n    /**\n     * Blue offset.\n     *\n     * @member {PIXI.Point}\n     */\n    prototypeAccessors.blue.get = function () {\n        return this.uniforms.blue;\n    };\n    prototypeAccessors.blue.set = function (value) {\n        this.uniforms.blue = value;\n    };\n\n    /**\n     * Removes all references\n     */\n    GlitchFilter.prototype.destroy = function destroy () {\n        this.texture.destroy(true);\n        this.texture = null;\n        this._canvas = null;\n        this.red = null;\n        this.green = null;\n        this.blue = null;\n        this._sizes = null;\n        this._offsets = null;\n    };\n\n    Object.defineProperties( GlitchFilter.prototype, prototypeAccessors );\n\n    return GlitchFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n/**\n * Fill mode as transparent\n *\n * @constant\n * @static\n * @member {int} TRANSPARENT\n * @memberof PIXI.filters.GlitchFilter\n * @readonly\n */\nGlitchFilter.TRANSPARENT = 0;\n\n/**\n * Fill mode as original\n *\n * @constant\n * @static\n * @member {int} ORIGINAL\n * @memberof PIXI.filters.GlitchFilter\n * @readonly\n */\nGlitchFilter.ORIGINAL = 1;\n\n/**\n * Fill mode as loop\n *\n * @constant\n * @static\n * @member {int} LOOP\n * @memberof PIXI.filters.GlitchFilter\n * @readonly\n */\nGlitchFilter.LOOP = 2;\n\n/**\n * Fill mode as clamp\n *\n * @constant\n * @static\n * @member {int} CLAMP\n * @memberof PIXI.filters.GlitchFilter\n * @readonly\n */\nGlitchFilter.CLAMP = 3;\n\n/**\n * Fill mode as mirror\n *\n * @constant\n * @static\n * @member {int} MIRROR\n * @memberof PIXI.filters.GlitchFilter\n * @readonly\n */\nGlitchFilter.MIRROR = 4;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-glitch/lib/filter-glitch.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-glow/lib/filter-glow.esm.js":
/*!***************************************************************!*\
  !*** ./node_modules/@pixi/filter-glow/lib/filter-glow.esm.js ***!
  \***************************************************************/
/*! exports provided: GlowFilter */
/*! exports used: GlowFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return GlowFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/* harmony import */ var _pixi_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixi/utils */ \"./node_modules/@pixi/utils/lib/utils.es.js\");\n/*!\n * @pixi/filter-glow - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-glow is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nvarying vec4 vColor;\\n\\nuniform sampler2D uSampler;\\n\\nuniform float distance;\\nuniform float outerStrength;\\nuniform float innerStrength;\\nuniform vec4 glowColor;\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\nconst float PI = 3.14159265358979323846264;\\n\\nvoid main(void) {\\n    vec2 px = vec2(1.0 / filterArea.x, 1.0 / filterArea.y);\\n    vec4 ownColor = texture2D(uSampler, vTextureCoord);\\n    vec4 curColor;\\n    float totalAlpha = 0.0;\\n    float maxTotalAlpha = 0.0;\\n    float cosAngle;\\n    float sinAngle;\\n    vec2 displaced;\\n    for (float angle = 0.0; angle <= PI * 2.0; angle += %QUALITY_DIST%) {\\n       cosAngle = cos(angle);\\n       sinAngle = sin(angle);\\n       for (float curDistance = 1.0; curDistance <= %DIST%; curDistance++) {\\n           displaced.x = vTextureCoord.x + cosAngle * curDistance * px.x;\\n           displaced.y = vTextureCoord.y + sinAngle * curDistance * px.y;\\n           curColor = texture2D(uSampler, clamp(displaced, filterClamp.xy, filterClamp.zw));\\n           totalAlpha += (distance - curDistance) * curColor.a;\\n           maxTotalAlpha += (distance - curDistance);\\n       }\\n    }\\n    maxTotalAlpha = max(maxTotalAlpha, 0.0001);\\n\\n    ownColor.a = max(ownColor.a, 0.0001);\\n    ownColor.rgb = ownColor.rgb / ownColor.a;\\n    float outerGlowAlpha = (totalAlpha / maxTotalAlpha)  * outerStrength * (1. - ownColor.a);\\n    float innerGlowAlpha = ((maxTotalAlpha - totalAlpha) / maxTotalAlpha) * innerStrength * ownColor.a;\\n    float resultAlpha = (ownColor.a + outerGlowAlpha);\\n    gl_FragColor = vec4(mix(mix(ownColor.rgb, glowColor.rgb, innerGlowAlpha / ownColor.a), glowColor.rgb, outerGlowAlpha / resultAlpha) * resultAlpha, resultAlpha);\\n}\\n\";\n\n/**\n * GlowFilter, originally by mishaa\n * http://www.html5gamedevs.com/topic/12756-glow-filter/?hl=mishaa#entry73578\n * http://codepen.io/mishaa/pen/raKzrm<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/glow.png)\n *\n * @class\n *\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-glow|@pixi/filter-glow}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {number} [distance=10] The distance of the glow. Make it 2 times more for resolution=2. It cant be changed after filter creation\n * @param {number} [outerStrength=4] The strength of the glow outward from the edge of the sprite.\n * @param {number} [innerStrength=0] The strength of the glow inward from the edge of the sprite.\n * @param {number} [color=0xffffff] The color of the glow.\n * @param {number} [quality=0.1] A number between 0 and 1 that describes the quality of the glow.\n *\n * @example\n *  someSprite.filters = [\n *      new GlowFilter(15, 2, 1, 0xFF0000, 0.5)\n *  ];\n */\nvar GlowFilter = /*@__PURE__*/(function (Filter) {\n    function GlowFilter(distance, outerStrength, innerStrength, color, quality) {\n        if ( distance === void 0 ) distance = 10;\n        if ( outerStrength === void 0 ) outerStrength = 4;\n        if ( innerStrength === void 0 ) innerStrength = 0;\n        if ( color === void 0 ) color = 0xffffff;\n        if ( quality === void 0 ) quality = 0.1;\n\n        Filter.call(this, vertex, fragment\n            .replace(/%QUALITY_DIST%/gi, '' + (1 / quality / distance).toFixed(7))\n            .replace(/%DIST%/gi, '' + distance.toFixed(7)));\n\n        this.uniforms.glowColor = new Float32Array([0, 0, 0, 1]);\n        this.distance = distance;\n        this.color = color;\n        this.outerStrength = outerStrength;\n        this.innerStrength = innerStrength;\n    }\n\n    if ( Filter ) GlowFilter.__proto__ = Filter;\n    GlowFilter.prototype = Object.create( Filter && Filter.prototype );\n    GlowFilter.prototype.constructor = GlowFilter;\n\n    var prototypeAccessors = { color: { configurable: true },distance: { configurable: true },outerStrength: { configurable: true },innerStrength: { configurable: true } };\n\n    /**\n     * The color of the glow.\n     * @member {number}\n     * @default 0xFFFFFF\n     */\n    prototypeAccessors.color.get = function () {\n        return Object(_pixi_utils__WEBPACK_IMPORTED_MODULE_1__[\"rgb2hex\"])(this.uniforms.glowColor);\n    };\n    prototypeAccessors.color.set = function (value) {\n        Object(_pixi_utils__WEBPACK_IMPORTED_MODULE_1__[\"hex2rgb\"])(value, this.uniforms.glowColor);\n    };\n\n    /**\n     * The distance of the glow. Make it 2 times more for resolution=2. It cant be changed after filter creation\n     * @member {number}\n     * @default 10\n     */\n    prototypeAccessors.distance.get = function () {\n        return this.uniforms.distance;\n    };\n    prototypeAccessors.distance.set = function (value) {\n        this.uniforms.distance = value;\n    };\n\n    /**\n     * The strength of the glow outward from the edge of the sprite.\n     * @member {number}\n     * @default 4\n     */\n    prototypeAccessors.outerStrength.get = function () {\n        return this.uniforms.outerStrength;\n    };\n    prototypeAccessors.outerStrength.set = function (value) {\n        this.uniforms.outerStrength = value;\n    };\n\n    /**\n     * The strength of the glow inward from the edge of the sprite.\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.innerStrength.get = function () {\n        return this.uniforms.innerStrength;\n    };\n    prototypeAccessors.innerStrength.set = function (value) {\n        this.uniforms.innerStrength = value;\n    };\n\n    Object.defineProperties( GlowFilter.prototype, prototypeAccessors );\n\n    return GlowFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLWdsb3cvbGliL2ZpbHRlci1nbG93LmVzbS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9zcmMvR2xvd0ZpbHRlci5qcz9hNmJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dmVydGV4fSBmcm9tICdAdG9vbHMvZnJhZ21lbnRzJztcbmltcG9ydCBmcmFnbWVudCBmcm9tICcuL2dsb3cuZnJhZyc7XG5pbXBvcnQge0ZpbHRlcn0gZnJvbSAnQHBpeGkvY29yZSc7XG5pbXBvcnQge3JnYjJoZXgsIGhleDJyZ2J9IGZyb20gJ0BwaXhpL3V0aWxzJztcblxuLyoqXG4gKiBHbG93RmlsdGVyLCBvcmlnaW5hbGx5IGJ5IG1pc2hhYVxuICogaHR0cDovL3d3dy5odG1sNWdhbWVkZXZzLmNvbS90b3BpYy8xMjc1Ni1nbG93LWZpbHRlci8/aGw9bWlzaGFhI2VudHJ5NzM1NzhcbiAqIGh0dHA6Ly9jb2RlcGVuLmlvL21pc2hhYS9wZW4vcmFLenJtPGJyPlxuICogIVtvcmlnaW5hbF0oLi4vdG9vbHMvc2NyZWVuc2hvdHMvZGlzdC9vcmlnaW5hbC5wbmcpIVtmaWx0ZXJdKC4uL3Rvb2xzL3NjcmVlbnNob3RzL2Rpc3QvZ2xvdy5wbmcpXG4gKlxuICogQGNsYXNzXG4gKlxuICogQGV4dGVuZHMgUElYSS5GaWx0ZXJcbiAqIEBtZW1iZXJvZiBQSVhJLmZpbHRlcnNcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL0BwaXhpL2ZpbHRlci1nbG93fEBwaXhpL2ZpbHRlci1nbG93fVxuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvcGl4aS1maWx0ZXJzfHBpeGktZmlsdGVyc31cbiAqIEBwYXJhbSB7bnVtYmVyfSBbZGlzdGFuY2U9MTBdIFRoZSBkaXN0YW5jZSBvZiB0aGUgZ2xvdy4gTWFrZSBpdCAyIHRpbWVzIG1vcmUgZm9yIHJlc29sdXRpb249Mi4gSXQgY2FudCBiZSBjaGFuZ2VkIGFmdGVyIGZpbHRlciBjcmVhdGlvblxuICogQHBhcmFtIHtudW1iZXJ9IFtvdXRlclN0cmVuZ3RoPTRdIFRoZSBzdHJlbmd0aCBvZiB0aGUgZ2xvdyBvdXR3YXJkIGZyb20gdGhlIGVkZ2Ugb2YgdGhlIHNwcml0ZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbaW5uZXJTdHJlbmd0aD0wXSBUaGUgc3RyZW5ndGggb2YgdGhlIGdsb3cgaW53YXJkIGZyb20gdGhlIGVkZ2Ugb2YgdGhlIHNwcml0ZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbY29sb3I9MHhmZmZmZmZdIFRoZSBjb2xvciBvZiB0aGUgZ2xvdy5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbcXVhbGl0eT0wLjFdIEEgbnVtYmVyIGJldHdlZW4gMCBhbmQgMSB0aGF0IGRlc2NyaWJlcyB0aGUgcXVhbGl0eSBvZiB0aGUgZ2xvdy5cbiAqXG4gKiBAZXhhbXBsZVxuICogIHNvbWVTcHJpdGUuZmlsdGVycyA9IFtcbiAqICAgICAgbmV3IEdsb3dGaWx0ZXIoMTUsIDIsIDEsIDB4RkYwMDAwLCAwLjUpXG4gKiAgXTtcbiAqL1xuY2xhc3MgR2xvd0ZpbHRlciBleHRlbmRzIEZpbHRlciB7XG5cbiAgICBjb25zdHJ1Y3RvcihkaXN0YW5jZSA9IDEwLCBvdXRlclN0cmVuZ3RoID0gNCwgaW5uZXJTdHJlbmd0aCA9IDAsIGNvbG9yID0gMHhmZmZmZmYsIHF1YWxpdHkgPSAwLjEpIHtcbiAgICAgICAgc3VwZXIodmVydGV4LCBmcmFnbWVudFxuICAgICAgICAgICAgLnJlcGxhY2UoLyVRVUFMSVRZX0RJU1QlL2dpLCAnJyArICgxIC8gcXVhbGl0eSAvIGRpc3RhbmNlKS50b0ZpeGVkKDcpKVxuICAgICAgICAgICAgLnJlcGxhY2UoLyVESVNUJS9naSwgJycgKyBkaXN0YW5jZS50b0ZpeGVkKDcpKSk7XG5cbiAgICAgICAgdGhpcy51bmlmb3Jtcy5nbG93Q29sb3IgPSBuZXcgRmxvYXQzMkFycmF5KFswLCAwLCAwLCAxXSk7XG4gICAgICAgIHRoaXMuZGlzdGFuY2UgPSBkaXN0YW5jZTtcbiAgICAgICAgdGhpcy5jb2xvciA9IGNvbG9yO1xuICAgICAgICB0aGlzLm91dGVyU3RyZW5ndGggPSBvdXRlclN0cmVuZ3RoO1xuICAgICAgICB0aGlzLmlubmVyU3RyZW5ndGggPSBpbm5lclN0cmVuZ3RoO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBjb2xvciBvZiB0aGUgZ2xvdy5cbiAgICAgKiBAbWVtYmVyIHtudW1iZXJ9XG4gICAgICogQGRlZmF1bHQgMHhGRkZGRkZcbiAgICAgKi9cbiAgICBnZXQgY29sb3IoKSB7XG4gICAgICAgIHJldHVybiByZ2IyaGV4KHRoaXMudW5pZm9ybXMuZ2xvd0NvbG9yKTtcbiAgICB9XG4gICAgc2V0IGNvbG9yKHZhbHVlKSB7XG4gICAgICAgIGhleDJyZ2IodmFsdWUsIHRoaXMudW5pZm9ybXMuZ2xvd0NvbG9yKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgZGlzdGFuY2Ugb2YgdGhlIGdsb3cuIE1ha2UgaXQgMiB0aW1lcyBtb3JlIGZvciByZXNvbHV0aW9uPTIuIEl0IGNhbnQgYmUgY2hhbmdlZCBhZnRlciBmaWx0ZXIgY3JlYXRpb25cbiAgICAgKiBAbWVtYmVyIHtudW1iZXJ9XG4gICAgICogQGRlZmF1bHQgMTBcbiAgICAgKi9cbiAgICBnZXQgZGlzdGFuY2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnVuaWZvcm1zLmRpc3RhbmNlO1xuICAgIH1cbiAgICBzZXQgZGlzdGFuY2UodmFsdWUpIHtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5kaXN0YW5jZSA9IHZhbHVlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBzdHJlbmd0aCBvZiB0aGUgZ2xvdyBvdXR3YXJkIGZyb20gdGhlIGVkZ2Ugb2YgdGhlIHNwcml0ZS5cbiAgICAgKiBAbWVtYmVyIHtudW1iZXJ9XG4gICAgICogQGRlZmF1bHQgNFxuICAgICAqL1xuICAgIGdldCBvdXRlclN0cmVuZ3RoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy51bmlmb3Jtcy5vdXRlclN0cmVuZ3RoO1xuICAgIH1cbiAgICBzZXQgb3V0ZXJTdHJlbmd0aCh2YWx1ZSkge1xuICAgICAgICB0aGlzLnVuaWZvcm1zLm91dGVyU3RyZW5ndGggPSB2YWx1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgc3RyZW5ndGggb2YgdGhlIGdsb3cgaW53YXJkIGZyb20gdGhlIGVkZ2Ugb2YgdGhlIHNwcml0ZS5cbiAgICAgKiBAbWVtYmVyIHtudW1iZXJ9XG4gICAgICogQGRlZmF1bHQgMFxuICAgICAqL1xuICAgIGdldCBpbm5lclN0cmVuZ3RoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy51bmlmb3Jtcy5pbm5lclN0cmVuZ3RoO1xuICAgIH1cbiAgICBzZXQgaW5uZXJTdHJlbmd0aCh2YWx1ZSkge1xuICAgICAgICB0aGlzLnVuaWZvcm1zLmlubmVyU3RyZW5ndGggPSB2YWx1ZTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IEdsb3dGaWx0ZXIgfTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTRCQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUE3REE7QUFDQTs7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-glow/lib/filter-glow.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-godray/lib/filter-godray.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@pixi/filter-godray/lib/filter-godray.esm.js ***!
  \*******************************************************************/
/*! exports provided: GodrayFilter */
/*! exports used: GodrayFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return GodrayFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/* harmony import */ var _pixi_math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixi/math */ \"./node_modules/@pixi/math/lib/math.es.js\");\n/*!\n * @pixi/filter-godray - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-godray is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar perlin = \"vec3 mod289(vec3 x)\\n{\\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\nvec4 mod289(vec4 x)\\n{\\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\nvec4 permute(vec4 x)\\n{\\n    return mod289(((x * 34.0) + 1.0) * x);\\n}\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n    return 1.79284291400159 - 0.85373472095314 * r;\\n}\\nvec3 fade(vec3 t)\\n{\\n    return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\\n}\\n// Classic Perlin noise, periodic variant\\nfloat pnoise(vec3 P, vec3 rep)\\n{\\n    vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\\n    vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\\n    Pi0 = mod289(Pi0);\\n    Pi1 = mod289(Pi1);\\n    vec3 Pf0 = fract(P); // Fractional part for interpolation\\n    vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n    vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n    vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n    vec4 iz0 = Pi0.zzzz;\\n    vec4 iz1 = Pi1.zzzz;\\n    vec4 ixy = permute(permute(ix) + iy);\\n    vec4 ixy0 = permute(ixy + iz0);\\n    vec4 ixy1 = permute(ixy + iz1);\\n    vec4 gx0 = ixy0 * (1.0 / 7.0);\\n    vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\\n    gx0 = fract(gx0);\\n    vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n    vec4 sz0 = step(gz0, vec4(0.0));\\n    gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n    gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n    vec4 gx1 = ixy1 * (1.0 / 7.0);\\n    vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\\n    gx1 = fract(gx1);\\n    vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n    vec4 sz1 = step(gz1, vec4(0.0));\\n    gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n    gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n    vec3 g000 = vec3(gx0.x, gy0.x, gz0.x);\\n    vec3 g100 = vec3(gx0.y, gy0.y, gz0.y);\\n    vec3 g010 = vec3(gx0.z, gy0.z, gz0.z);\\n    vec3 g110 = vec3(gx0.w, gy0.w, gz0.w);\\n    vec3 g001 = vec3(gx1.x, gy1.x, gz1.x);\\n    vec3 g101 = vec3(gx1.y, gy1.y, gz1.y);\\n    vec3 g011 = vec3(gx1.z, gy1.z, gz1.z);\\n    vec3 g111 = vec3(gx1.w, gy1.w, gz1.w);\\n    vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n    g000 *= norm0.x;\\n    g010 *= norm0.y;\\n    g100 *= norm0.z;\\n    g110 *= norm0.w;\\n    vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n    g001 *= norm1.x;\\n    g011 *= norm1.y;\\n    g101 *= norm1.z;\\n    g111 *= norm1.w;\\n    float n000 = dot(g000, Pf0);\\n    float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n    float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n    float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n    float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n    float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n    float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n    float n111 = dot(g111, Pf1);\\n    vec3 fade_xyz = fade(Pf0);\\n    vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n    vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n    float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\\n    return 2.2 * n_xyz;\\n}\\nfloat turb(vec3 P, vec3 rep, float lacunarity, float gain)\\n{\\n    float sum = 0.0;\\n    float sc = 1.0;\\n    float totalgain = 1.0;\\n    for (float i = 0.0; i < 6.0; i++)\\n    {\\n        sum += totalgain * pnoise(P * sc, rep);\\n        sc *= lacunarity;\\n        totalgain *= gain;\\n    }\\n    return abs(sum);\\n}\\n\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\nuniform vec2 dimensions;\\n\\nuniform vec2 light;\\nuniform bool parallel;\\nuniform float aspect;\\n\\nuniform float gain;\\nuniform float lacunarity;\\nuniform float time;\\n\\n${perlin}\\n\\nvoid main(void) {\\n    vec2 coord = vTextureCoord * filterArea.xy / dimensions.xy;\\n\\n    float d;\\n\\n    if (parallel) {\\n        float _cos = light.x;\\n        float _sin = light.y;\\n        d = (_cos * coord.x) + (_sin * coord.y * aspect);\\n    } else {\\n        float dx = coord.x - light.x / dimensions.x;\\n        float dy = (coord.y - light.y / dimensions.y) * aspect;\\n        float dis = sqrt(dx * dx + dy * dy) + 0.00001;\\n        d = dy / dis;\\n    }\\n\\n    vec3 dir = vec3(d, d, 0.0);\\n\\n    float noise = turb(dir + vec3(time, 0.0, 62.1 + time) * 0.05, vec3(480.0, 320.0, 480.0), lacunarity, gain);\\n    noise = mix(noise, 0.0, 0.3);\\n    //fade vertically.\\n    vec4 mist = vec4(noise, noise, noise, 1.0) * (1.0 - coord.y);\\n    mist.a = 1.0;\\n\\n    gl_FragColor = texture2D(uSampler, vTextureCoord) + mist;\\n}\\n\";\n\n/**\n * GordayFilter, {@link https://codepen.io/alaingalvan originally} by Alain Galvan\n *\n *\n *\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/godray.gif)\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-godray|@pixi/filter-godray}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n *\n * @example\n *  displayObject.filters = [new GodrayFilter()];\n * @param {object} [options] Filter options\n * @param {number} [options.angle=30] Angle/Light-source of the rays.\n * @param {number} [options.gain=0.5] General intensity of the effect.\n * @param {number} [options.lacunrity=2.5] The density of the fractal noise.\n * @param {boolean} [options.parallel=true] `true` to use `angle`, `false` to use `center`\n * @param {number} [options.time=0] The current time position.\n * @param {PIXI.Point|number[]} [options.center=[0,0]] Focal point for non-parallel rays,\n *        to use this `parallel` must be set to `false`.\n */\nvar GodrayFilter = /*@__PURE__*/(function (Filter) {\n    function GodrayFilter(options) {\n        Filter.call(this, vertex, fragment.replace('${perlin}', perlin));\n\n        this.uniforms.dimensions = new Float32Array(2);\n\n        // Fallback support for ctor: (angle, gain, lacunarity, time)\n        if (typeof options === 'number') {\n            // eslint-disable-next-line no-console\n            console.warn('GodrayFilter now uses options instead of (angle, gain, lacunarity, time)');\n            options = { angle: options };\n            if (arguments[1] !== undefined) {\n                options.gain = arguments[1];\n            }\n            if (arguments[2] !== undefined) {\n                options.lacunarity = arguments[2];\n            }\n            if (arguments[3] !== undefined) {\n                options.time = arguments[3];\n            }\n        }\n\n        options = Object.assign({\n            angle: 30,\n            gain: 0.5,\n            lacunarity: 2.5,\n            time: 0,\n            parallel: true,\n            center: [0, 0],\n        }, options);\n\n        this._angleLight = new _pixi_math__WEBPACK_IMPORTED_MODULE_1__[/* Point */ \"g\"]();\n        this.angle = options.angle;\n        this.gain = options.gain;\n        this.lacunarity = options.lacunarity;\n\n        /**\n         * `true` if light rays are parallel (uses angle),\n         * `false` to use the focal `center` point\n         *\n         * @member {boolean}\n         * @default true\n         */\n        this.parallel = options.parallel;\n\n        /**\n         * The position of the emitting point for light rays\n         * only used if `parallel` is set to `false`.\n         *\n         * @member {PIXI.Point|number[]}\n         * @default [0, 0]\n         */\n        this.center = options.center;\n\n        /**\n         * The current time.\n         *\n         * @member {number}\n         * @default 0\n         */\n        this.time = options.time;\n    }\n\n    if ( Filter ) GodrayFilter.__proto__ = Filter;\n    GodrayFilter.prototype = Object.create( Filter && Filter.prototype );\n    GodrayFilter.prototype.constructor = GodrayFilter;\n\n    var prototypeAccessors = { angle: { configurable: true },gain: { configurable: true },lacunarity: { configurable: true } };\n\n    /**\n     * Applies the filter.\n     * @private\n     * @param {PIXI.FilterManager} filterManager - The manager.\n     * @param {PIXI.RenderTarget} input - The input target.\n     * @param {PIXI.RenderTarget} output - The output target.\n     */\n    GodrayFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        var ref = input.filterFrame;\n        var width = ref.width;\n        var height = ref.height;\n\n        this.uniforms.light = this.parallel ? this._angleLight : this.center;\n\n        this.uniforms.parallel = this.parallel;\n        this.uniforms.dimensions[0] = width;\n        this.uniforms.dimensions[1] = height;\n        this.uniforms.aspect = height / width;\n        this.uniforms.time = this.time;\n\n        // draw the filter...\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * The angle/light-source of the rays in degrees. For instance, a value of 0 is vertical rays,\n     *     values of 90 or -90 produce horizontal rays.\n     * @member {number}\n     * @default 30\n     */\n    prototypeAccessors.angle.get = function () {\n        return this._angle;\n    };\n    prototypeAccessors.angle.set = function (value) {\n        this._angle = value;\n\n        var radians = value * _pixi_math__WEBPACK_IMPORTED_MODULE_1__[/* DEG_TO_RAD */ \"b\"];\n\n        this._angleLight.x = Math.cos(radians);\n        this._angleLight.y = Math.sin(radians);\n    };\n\n    /**\n     * General intensity of the effect. A value closer to 1 will produce a more intense effect,\n     * where a value closer to 0 will produce a subtler effect.\n     *\n     * @member {number}\n     * @default 0.5\n     */\n    prototypeAccessors.gain.get = function () {\n        return this.uniforms.gain;\n    };\n    prototypeAccessors.gain.set = function (value) {\n        this.uniforms.gain = value;\n    };\n\n    /**\n     * The density of the fractal noise. A higher amount produces more rays and a smaller amound\n     * produces fewer waves.\n     *\n     * @member {number}\n     * @default 2.5\n     */\n    prototypeAccessors.lacunarity.get = function () {\n        return this.uniforms.lacunarity;\n    };\n    prototypeAccessors.lacunarity.set = function (value) {\n        this.uniforms.lacunarity = value;\n    };\n\n    Object.defineProperties( GodrayFilter.prototype, prototypeAccessors );\n\n    return GodrayFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLWdvZHJheS9saWIvZmlsdGVyLWdvZHJheS5lc20uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL0dvZHJheUZpbHRlci5qcz82ODFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dmVydGV4fSBmcm9tICdAdG9vbHMvZnJhZ21lbnRzJztcbmltcG9ydCBwZXJsaW4gZnJvbSAnLi9wZXJsaW4uZnJhZyc7XG5pbXBvcnQgZnJhZ21lbnQgZnJvbSAnLi9nb3JkYXkuZnJhZyc7XG5pbXBvcnQge0ZpbHRlcn0gZnJvbSAnQHBpeGkvY29yZSc7XG5pbXBvcnQge1BvaW50LCBERUdfVE9fUkFEfSBmcm9tICdAcGl4aS9tYXRoJztcblxuLyoqXG4gKiBHb3JkYXlGaWx0ZXIsIHtAbGluayBodHRwczovL2NvZGVwZW4uaW8vYWxhaW5nYWx2YW4gb3JpZ2luYWxseX0gYnkgQWxhaW4gR2FsdmFuXG4gKlxuICpcbiAqXG4gKiAhW29yaWdpbmFsXSguLi90b29scy9zY3JlZW5zaG90cy9kaXN0L29yaWdpbmFsLnBuZykhW2ZpbHRlcl0oLi4vdG9vbHMvc2NyZWVuc2hvdHMvZGlzdC9nb2RyYXkuZ2lmKVxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBQSVhJLkZpbHRlclxuICogQG1lbWJlcm9mIFBJWEkuZmlsdGVyc1xuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvQHBpeGkvZmlsdGVyLWdvZHJheXxAcGl4aS9maWx0ZXItZ29kcmF5fVxuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvcGl4aS1maWx0ZXJzfHBpeGktZmlsdGVyc31cbiAqXG4gKiBAZXhhbXBsZVxuICogIGRpc3BsYXlPYmplY3QuZmlsdGVycyA9IFtuZXcgR29kcmF5RmlsdGVyKCldO1xuICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXSBGaWx0ZXIgb3B0aW9uc1xuICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLmFuZ2xlPTMwXSBBbmdsZS9MaWdodC1zb3VyY2Ugb2YgdGhlIHJheXMuXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMuZ2Fpbj0wLjVdIEdlbmVyYWwgaW50ZW5zaXR5IG9mIHRoZSBlZmZlY3QuXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMubGFjdW5yaXR5PTIuNV0gVGhlIGRlbnNpdHkgb2YgdGhlIGZyYWN0YWwgbm9pc2UuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLnBhcmFsbGVsPXRydWVdIGB0cnVlYCB0byB1c2UgYGFuZ2xlYCwgYGZhbHNlYCB0byB1c2UgYGNlbnRlcmBcbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy50aW1lPTBdIFRoZSBjdXJyZW50IHRpbWUgcG9zaXRpb24uXG4gKiBAcGFyYW0ge1BJWEkuUG9pbnR8bnVtYmVyW119IFtvcHRpb25zLmNlbnRlcj1bMCwwXV0gRm9jYWwgcG9pbnQgZm9yIG5vbi1wYXJhbGxlbCByYXlzLFxuICogICAgICAgIHRvIHVzZSB0aGlzIGBwYXJhbGxlbGAgbXVzdCBiZSBzZXQgdG8gYGZhbHNlYC5cbiAqL1xuY2xhc3MgR29kcmF5RmlsdGVyIGV4dGVuZHMgRmlsdGVyIHtcblxuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICAgICAgc3VwZXIodmVydGV4LCBmcmFnbWVudC5yZXBsYWNlKCcke3Blcmxpbn0nLCBwZXJsaW4pKTtcblxuICAgICAgICB0aGlzLnVuaWZvcm1zLmRpbWVuc2lvbnMgPSBuZXcgRmxvYXQzMkFycmF5KDIpO1xuXG4gICAgICAgIC8vIEZhbGxiYWNrIHN1cHBvcnQgZm9yIGN0b3I6IChhbmdsZSwgZ2FpbiwgbGFjdW5hcml0eSwgdGltZSlcbiAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignR29kcmF5RmlsdGVyIG5vdyB1c2VzIG9wdGlvbnMgaW5zdGVhZCBvZiAoYW5nbGUsIGdhaW4sIGxhY3VuYXJpdHksIHRpbWUpJyk7XG4gICAgICAgICAgICBvcHRpb25zID0geyBhbmdsZTogb3B0aW9ucyB9O1xuICAgICAgICAgICAgaWYgKGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5nYWluID0gYXJndW1lbnRzWzFdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5sYWN1bmFyaXR5ID0gYXJndW1lbnRzWzJdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy50aW1lID0gYXJndW1lbnRzWzNdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgb3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe1xuICAgICAgICAgICAgYW5nbGU6IDMwLFxuICAgICAgICAgICAgZ2FpbjogMC41LFxuICAgICAgICAgICAgbGFjdW5hcml0eTogMi41LFxuICAgICAgICAgICAgdGltZTogMCxcbiAgICAgICAgICAgIHBhcmFsbGVsOiB0cnVlLFxuICAgICAgICAgICAgY2VudGVyOiBbMCwgMF0sXG4gICAgICAgIH0sIG9wdGlvbnMpO1xuXG4gICAgICAgIHRoaXMuX2FuZ2xlTGlnaHQgPSBuZXcgUG9pbnQoKTtcbiAgICAgICAgdGhpcy5hbmdsZSA9IG9wdGlvbnMuYW5nbGU7XG4gICAgICAgIHRoaXMuZ2FpbiA9IG9wdGlvbnMuZ2FpbjtcbiAgICAgICAgdGhpcy5sYWN1bmFyaXR5ID0gb3B0aW9ucy5sYWN1bmFyaXR5O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBgdHJ1ZWAgaWYgbGlnaHQgcmF5cyBhcmUgcGFyYWxsZWwgKHVzZXMgYW5nbGUpLFxuICAgICAgICAgKiBgZmFsc2VgIHRvIHVzZSB0aGUgZm9jYWwgYGNlbnRlcmAgcG9pbnRcbiAgICAgICAgICpcbiAgICAgICAgICogQG1lbWJlciB7Ym9vbGVhbn1cbiAgICAgICAgICogQGRlZmF1bHQgdHJ1ZVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5wYXJhbGxlbCA9IG9wdGlvbnMucGFyYWxsZWw7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBwb3NpdGlvbiBvZiB0aGUgZW1pdHRpbmcgcG9pbnQgZm9yIGxpZ2h0IHJheXNcbiAgICAgICAgICogb25seSB1c2VkIGlmIGBwYXJhbGxlbGAgaXMgc2V0IHRvIGBmYWxzZWAuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBtZW1iZXIge1BJWEkuUG9pbnR8bnVtYmVyW119XG4gICAgICAgICAqIEBkZWZhdWx0IFswLCAwXVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5jZW50ZXIgPSBvcHRpb25zLmNlbnRlcjtcblxuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIGN1cnJlbnQgdGltZS5cbiAgICAgICAgICpcbiAgICAgICAgICogQG1lbWJlciB7bnVtYmVyfVxuICAgICAgICAgKiBAZGVmYXVsdCAwXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnRpbWUgPSBvcHRpb25zLnRpbWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQXBwbGllcyB0aGUgZmlsdGVyLlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHtQSVhJLkZpbHRlck1hbmFnZXJ9IGZpbHRlck1hbmFnZXIgLSBUaGUgbWFuYWdlci5cbiAgICAgKiBAcGFyYW0ge1BJWEkuUmVuZGVyVGFyZ2V0fSBpbnB1dCAtIFRoZSBpbnB1dCB0YXJnZXQuXG4gICAgICogQHBhcmFtIHtQSVhJLlJlbmRlclRhcmdldH0gb3V0cHV0IC0gVGhlIG91dHB1dCB0YXJnZXQuXG4gICAgICovXG4gICAgYXBwbHkoZmlsdGVyTWFuYWdlciwgaW5wdXQsIG91dHB1dCwgY2xlYXIpIHtcbiAgICAgICAgY29uc3Qge3dpZHRoLCBoZWlnaHR9ID0gaW5wdXQuZmlsdGVyRnJhbWU7XG5cbiAgICAgICAgdGhpcy51bmlmb3Jtcy5saWdodCA9IHRoaXMucGFyYWxsZWwgPyB0aGlzLl9hbmdsZUxpZ2h0IDogdGhpcy5jZW50ZXI7XG5cbiAgICAgICAgdGhpcy51bmlmb3Jtcy5wYXJhbGxlbCA9IHRoaXMucGFyYWxsZWw7XG4gICAgICAgIHRoaXMudW5pZm9ybXMuZGltZW5zaW9uc1swXSA9IHdpZHRoO1xuICAgICAgICB0aGlzLnVuaWZvcm1zLmRpbWVuc2lvbnNbMV0gPSBoZWlnaHQ7XG4gICAgICAgIHRoaXMudW5pZm9ybXMuYXNwZWN0ID0gaGVpZ2h0IC8gd2lkdGg7XG4gICAgICAgIHRoaXMudW5pZm9ybXMudGltZSA9IHRoaXMudGltZTtcblxuICAgICAgICAvLyBkcmF3IHRoZSBmaWx0ZXIuLi5cbiAgICAgICAgZmlsdGVyTWFuYWdlci5hcHBseUZpbHRlcih0aGlzLCBpbnB1dCwgb3V0cHV0LCBjbGVhcik7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIGFuZ2xlL2xpZ2h0LXNvdXJjZSBvZiB0aGUgcmF5cyBpbiBkZWdyZWVzLiBGb3IgaW5zdGFuY2UsIGEgdmFsdWUgb2YgMCBpcyB2ZXJ0aWNhbCByYXlzLFxuICAgICAqICAgICB2YWx1ZXMgb2YgOTAgb3IgLTkwIHByb2R1Y2UgaG9yaXpvbnRhbCByYXlzLlxuICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgKiBAZGVmYXVsdCAzMFxuICAgICAqL1xuICAgIGdldCBhbmdsZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FuZ2xlO1xuICAgIH1cbiAgICBzZXQgYW5nbGUodmFsdWUpIHtcbiAgICAgICAgdGhpcy5fYW5nbGUgPSB2YWx1ZTtcblxuICAgICAgICBjb25zdCByYWRpYW5zID0gdmFsdWUgKiBERUdfVE9fUkFEO1xuXG4gICAgICAgIHRoaXMuX2FuZ2xlTGlnaHQueCA9IE1hdGguY29zKHJhZGlhbnMpO1xuICAgICAgICB0aGlzLl9hbmdsZUxpZ2h0LnkgPSBNYXRoLnNpbihyYWRpYW5zKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZW5lcmFsIGludGVuc2l0eSBvZiB0aGUgZWZmZWN0LiBBIHZhbHVlIGNsb3NlciB0byAxIHdpbGwgcHJvZHVjZSBhIG1vcmUgaW50ZW5zZSBlZmZlY3QsXG4gICAgICogd2hlcmUgYSB2YWx1ZSBjbG9zZXIgdG8gMCB3aWxsIHByb2R1Y2UgYSBzdWJ0bGVyIGVmZmVjdC5cbiAgICAgKlxuICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgKiBAZGVmYXVsdCAwLjVcbiAgICAgKi9cbiAgICBnZXQgZ2FpbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudW5pZm9ybXMuZ2FpbjtcbiAgICB9XG4gICAgc2V0IGdhaW4odmFsdWUpIHtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5nYWluID0gdmFsdWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIGRlbnNpdHkgb2YgdGhlIGZyYWN0YWwgbm9pc2UuIEEgaGlnaGVyIGFtb3VudCBwcm9kdWNlcyBtb3JlIHJheXMgYW5kIGEgc21hbGxlciBhbW91bmRcbiAgICAgKiBwcm9kdWNlcyBmZXdlciB3YXZlcy5cbiAgICAgKlxuICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgKiBAZGVmYXVsdCAyLjVcbiAgICAgKi9cbiAgICBnZXQgbGFjdW5hcml0eSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudW5pZm9ybXMubGFjdW5hcml0eTtcbiAgICB9XG4gICAgc2V0IGxhY3VuYXJpdHkodmFsdWUpIHtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5sYWN1bmFyaXR5ID0gdmFsdWU7XG4gICAgfVxufVxuXG5leHBvcnQgeyBHb2RyYXlGaWx0ZXIgfTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNkJBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FBUUE7QUFDQTs7Ozs7Ozs7QUFRQTtBQUNBOzs7Ozs7O0FBT0E7Ozs7Ozs7QUFDQTtBQUNBOzs7Ozs7OztBQVFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQW5JQTtBQUNBOzsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-godray/lib/filter-godray.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-kawase-blur/lib/filter-kawase-blur.esm.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@pixi/filter-kawase-blur/lib/filter-kawase-blur.esm.js ***!
  \*****************************************************************************/
/*! exports provided: KawaseBlurFilter */
/*! exports used: KawaseBlurFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return KawaseBlurFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/* harmony import */ var _pixi_math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixi/math */ \"./node_modules/@pixi/math/lib/math.es.js\");\n/*!\n * @pixi/filter-kawase-blur - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-kawase-blur is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"\\nvarying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec2 uOffset;\\n\\nvoid main(void)\\n{\\n    vec4 color = vec4(0.0);\\n\\n    // Sample top left pixel\\n    color += texture2D(uSampler, vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y + uOffset.y));\\n\\n    // Sample top right pixel\\n    color += texture2D(uSampler, vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y + uOffset.y));\\n\\n    // Sample bottom right pixel\\n    color += texture2D(uSampler, vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y - uOffset.y));\\n\\n    // Sample bottom left pixel\\n    color += texture2D(uSampler, vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y - uOffset.y));\\n\\n    // Average\\n    color *= 0.25;\\n\\n    gl_FragColor = color;\\n}\";\n\nvar fragmentClamp = \"\\nvarying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec2 uOffset;\\nuniform vec4 filterClamp;\\n\\nvoid main(void)\\n{\\n    vec4 color = vec4(0.0);\\n\\n    // Sample top left pixel\\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y + uOffset.y), filterClamp.xy, filterClamp.zw));\\n\\n    // Sample top right pixel\\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y + uOffset.y), filterClamp.xy, filterClamp.zw));\\n\\n    // Sample bottom right pixel\\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y - uOffset.y), filterClamp.xy, filterClamp.zw));\\n\\n    // Sample bottom left pixel\\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y - uOffset.y), filterClamp.xy, filterClamp.zw));\\n\\n    // Average\\n    color *= 0.25;\\n\\n    gl_FragColor = color;\\n}\\n\";\n\n/**\n * A much faster blur than Gaussian blur, but more complicated to use.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/kawase-blur.png)\n *\n * @see https://software.intel.com/en-us/blogs/2014/07/15/an-investigation-of-fast-real-time-gpu-based-image-blur-algorithms\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-kawase-blur|@pixi/filter-kawase-blur}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {number|number[]} [blur=4] - The blur of the filter. Should be greater than `0`. If\n *        value is an Array, setting kernels.\n * @param {number} [quality=3] - The quality of the filter. Should be an integer greater than `1`.\n * @param {boolean} [clamp=false] - Clamp edges, useful for removing dark edges\n *        from fullscreen filters or bleeding to the edge of filterArea.\n */\nvar KawaseBlurFilter = /*@__PURE__*/(function (Filter) {\n    function KawaseBlurFilter(blur, quality, clamp) {\n        if ( blur === void 0 ) blur = 4;\n        if ( quality === void 0 ) quality = 3;\n        if ( clamp === void 0 ) clamp = false;\n\n        Filter.call(this, vertex, clamp ? fragmentClamp : fragment);\n        this.uniforms.uOffset = new Float32Array(2);\n\n        this._pixelSize = new _pixi_math__WEBPACK_IMPORTED_MODULE_1__[/* Point */ \"g\"]();\n        this.pixelSize = 1;\n        this._clamp = clamp;\n        this._kernels = null;\n\n        // if `blur` is array , as kernels\n        if (Array.isArray(blur)) {\n            this.kernels = blur;\n        }\n        else {\n            this._blur = blur;\n            this.quality = quality;\n        }\n    }\n\n    if ( Filter ) KawaseBlurFilter.__proto__ = Filter;\n    KawaseBlurFilter.prototype = Object.create( Filter && Filter.prototype );\n    KawaseBlurFilter.prototype.constructor = KawaseBlurFilter;\n\n    var prototypeAccessors = { kernels: { configurable: true },clamp: { configurable: true },pixelSize: { configurable: true },quality: { configurable: true },blur: { configurable: true } };\n\n    /**\n     * Overrides apply\n     * @private\n     */\n    KawaseBlurFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        var uvX = this.pixelSize.x / input._frame.width;\n        var uvY = this.pixelSize.y / input._frame.height;\n        var offset;\n\n        if (this._quality === 1 || this._blur === 0) {\n            offset = this._kernels[0] + 0.5;\n            this.uniforms.uOffset[0] = offset * uvX;\n            this.uniforms.uOffset[1] = offset * uvY;\n            filterManager.applyFilter(this, input, output, clear);\n        }\n        else {\n            var renderTarget = filterManager.getFilterTexture();\n\n            var source = input;\n            var target = renderTarget;\n            var tmp;\n\n            var last = this._quality - 1;\n\n            for (var i = 0; i < last; i++) {\n                offset = this._kernels[i] + 0.5;\n                this.uniforms.uOffset[0] = offset * uvX;\n                this.uniforms.uOffset[1] = offset * uvY;\n                filterManager.applyFilter(this, source, target, true);\n\n                tmp = source;\n                source = target;\n                target = tmp;\n            }\n            offset = this._kernels[last] + 0.5;\n            this.uniforms.uOffset[0] = offset * uvX;\n            this.uniforms.uOffset[1] = offset * uvY;\n            filterManager.applyFilter(this, source, output, clear);\n\n            filterManager.returnFilterTexture(renderTarget);\n        }\n    };\n\n    /**\n     * Auto generate kernels by blur & quality\n     * @private\n     */\n    KawaseBlurFilter.prototype._generateKernels = function _generateKernels () {\n        var blur = this._blur;\n        var quality = this._quality;\n        var kernels = [ blur ];\n\n        if (blur > 0) {\n            var k = blur;\n            var step = blur / quality;\n\n            for (var i = 1; i < quality; i++) {\n                k -= step;\n                kernels.push(k);\n            }\n        }\n\n        this._kernels = kernels;\n    };\n\n    /**\n     * The kernel size of the blur filter, for advanced usage.\n     *\n     * @member {number[]}\n     * @default [0]\n     */\n    prototypeAccessors.kernels.get = function () {\n        return this._kernels;\n    };\n    prototypeAccessors.kernels.set = function (value) {\n        if (Array.isArray(value) && value.length > 0) {\n            this._kernels = value;\n            this._quality = value.length;\n            this._blur = Math.max.apply(Math, value);\n        }\n        else {\n            // if value is invalid , set default value\n            this._kernels = [0];\n            this._quality = 1;\n        }\n    };\n\n    /**\n     * Get the if the filter is clampped.\n     *\n     * @readonly\n     * @member {boolean}\n     * @default false\n     */\n    prototypeAccessors.clamp.get = function () {\n        return this._clamp;\n    };\n\n    /**\n     * Sets the pixel size of the filter. Large size is blurrier. For advanced usage.\n     *\n     * @member {PIXI.Point|number[]}\n     * @default [1, 1]\n     */\n    prototypeAccessors.pixelSize.set = function (value) {\n        if (typeof value === 'number') {\n            this._pixelSize.x = value;\n            this._pixelSize.y = value;\n        }\n        else if (Array.isArray(value)) {\n            this._pixelSize.x = value[0];\n            this._pixelSize.y = value[1];\n        }\n        else if (value instanceof _pixi_math__WEBPACK_IMPORTED_MODULE_1__[/* Point */ \"g\"]) {\n            this._pixelSize.x = value.x;\n            this._pixelSize.y = value.y;\n        }\n        else {\n            // if value is invalid , set default value\n            this._pixelSize.x = 1;\n            this._pixelSize.y = 1;\n        }\n    };\n    prototypeAccessors.pixelSize.get = function () {\n        return this._pixelSize;\n    };\n\n    /**\n     * The quality of the filter, integer greater than `1`.\n     *\n     * @member {number}\n     * @default 3\n     */\n    prototypeAccessors.quality.get = function () {\n        return this._quality;\n    };\n    prototypeAccessors.quality.set = function (value) {\n        this._quality = Math.max(1, Math.round(value));\n        this._generateKernels();\n    };\n\n    /**\n     * The amount of blur, value greater than `0`.\n     *\n     * @member {number}\n     * @default 4\n     */\n    prototypeAccessors.blur.get = function () {\n        return this._blur;\n    };\n    prototypeAccessors.blur.set = function (value) {\n        this._blur = value;\n        this._generateKernels();\n    };\n\n    Object.defineProperties( KawaseBlurFilter.prototype, prototypeAccessors );\n\n    return KawaseBlurFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLWthd2FzZS1ibHVyL2xpYi9maWx0ZXIta2F3YXNlLWJsdXIuZXNtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9LYXdhc2VCbHVyRmlsdGVyLmpzPzE3MDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHt2ZXJ0ZXh9IGZyb20gJ0B0b29scy9mcmFnbWVudHMnO1xuaW1wb3J0IGZyYWdtZW50IGZyb20gJy4va2F3YXNlLWJsdXIuZnJhZyc7XG5pbXBvcnQgZnJhZ21lbnRDbGFtcCBmcm9tICcuL2thd2FzZS1ibHVyLWNsYW1wLmZyYWcnO1xuaW1wb3J0IHtGaWx0ZXJ9IGZyb20gJ0BwaXhpL2NvcmUnO1xuaW1wb3J0IHtQb2ludH0gZnJvbSAnQHBpeGkvbWF0aCc7XG5cbi8qKlxuICogQSBtdWNoIGZhc3RlciBibHVyIHRoYW4gR2F1c3NpYW4gYmx1ciwgYnV0IG1vcmUgY29tcGxpY2F0ZWQgdG8gdXNlLjxicj5cbiAqICFbb3JpZ2luYWxdKC4uL3Rvb2xzL3NjcmVlbnNob3RzL2Rpc3Qvb3JpZ2luYWwucG5nKSFbZmlsdGVyXSguLi90b29scy9zY3JlZW5zaG90cy9kaXN0L2thd2FzZS1ibHVyLnBuZylcbiAqXG4gKiBAc2VlIGh0dHBzOi8vc29mdHdhcmUuaW50ZWwuY29tL2VuLXVzL2Jsb2dzLzIwMTQvMDcvMTUvYW4taW52ZXN0aWdhdGlvbi1vZi1mYXN0LXJlYWwtdGltZS1ncHUtYmFzZWQtaW1hZ2UtYmx1ci1hbGdvcml0aG1zXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIFBJWEkuRmlsdGVyXG4gKiBAbWVtYmVyb2YgUElYSS5maWx0ZXJzXG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9AcGl4aS9maWx0ZXIta2F3YXNlLWJsdXJ8QHBpeGkvZmlsdGVyLWthd2FzZS1ibHVyfVxuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvcGl4aS1maWx0ZXJzfHBpeGktZmlsdGVyc31cbiAqIEBwYXJhbSB7bnVtYmVyfG51bWJlcltdfSBbYmx1cj00XSAtIFRoZSBibHVyIG9mIHRoZSBmaWx0ZXIuIFNob3VsZCBiZSBncmVhdGVyIHRoYW4gYDBgLiBJZlxuICogICAgICAgIHZhbHVlIGlzIGFuIEFycmF5LCBzZXR0aW5nIGtlcm5lbHMuXG4gKiBAcGFyYW0ge251bWJlcn0gW3F1YWxpdHk9M10gLSBUaGUgcXVhbGl0eSBvZiB0aGUgZmlsdGVyLiBTaG91bGQgYmUgYW4gaW50ZWdlciBncmVhdGVyIHRoYW4gYDFgLlxuICogQHBhcmFtIHtib29sZWFufSBbY2xhbXA9ZmFsc2VdIC0gQ2xhbXAgZWRnZXMsIHVzZWZ1bCBmb3IgcmVtb3ZpbmcgZGFyayBlZGdlc1xuICogICAgICAgIGZyb20gZnVsbHNjcmVlbiBmaWx0ZXJzIG9yIGJsZWVkaW5nIHRvIHRoZSBlZGdlIG9mIGZpbHRlckFyZWEuXG4gKi9cbmNsYXNzIEthd2FzZUJsdXJGaWx0ZXIgZXh0ZW5kcyBGaWx0ZXIge1xuICAgIGNvbnN0cnVjdG9yKGJsdXIgPSA0LCBxdWFsaXR5ID0gMywgY2xhbXAgPSBmYWxzZSkge1xuICAgICAgICBzdXBlcih2ZXJ0ZXgsIGNsYW1wID8gZnJhZ21lbnRDbGFtcCA6IGZyYWdtZW50KTtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy51T2Zmc2V0ID0gbmV3IEZsb2F0MzJBcnJheSgyKTtcblxuICAgICAgICB0aGlzLl9waXhlbFNpemUgPSBuZXcgUG9pbnQoKTtcbiAgICAgICAgdGhpcy5waXhlbFNpemUgPSAxO1xuICAgICAgICB0aGlzLl9jbGFtcCA9IGNsYW1wO1xuICAgICAgICB0aGlzLl9rZXJuZWxzID0gbnVsbDtcblxuICAgICAgICAvLyBpZiBgYmx1cmAgaXMgYXJyYXkgLCBhcyBrZXJuZWxzXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGJsdXIpKSB7XG4gICAgICAgICAgICB0aGlzLmtlcm5lbHMgPSBibHVyO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fYmx1ciA9IGJsdXI7XG4gICAgICAgICAgICB0aGlzLnF1YWxpdHkgPSBxdWFsaXR5O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogT3ZlcnJpZGVzIGFwcGx5XG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBhcHBseShmaWx0ZXJNYW5hZ2VyLCBpbnB1dCwgb3V0cHV0LCBjbGVhcikge1xuICAgICAgICBjb25zdCB1dlggPSB0aGlzLnBpeGVsU2l6ZS54IC8gaW5wdXQuX2ZyYW1lLndpZHRoO1xuICAgICAgICBjb25zdCB1dlkgPSB0aGlzLnBpeGVsU2l6ZS55IC8gaW5wdXQuX2ZyYW1lLmhlaWdodDtcbiAgICAgICAgbGV0IG9mZnNldDtcblxuICAgICAgICBpZiAodGhpcy5fcXVhbGl0eSA9PT0gMSB8fCB0aGlzLl9ibHVyID09PSAwKSB7XG4gICAgICAgICAgICBvZmZzZXQgPSB0aGlzLl9rZXJuZWxzWzBdICsgMC41O1xuICAgICAgICAgICAgdGhpcy51bmlmb3Jtcy51T2Zmc2V0WzBdID0gb2Zmc2V0ICogdXZYO1xuICAgICAgICAgICAgdGhpcy51bmlmb3Jtcy51T2Zmc2V0WzFdID0gb2Zmc2V0ICogdXZZO1xuICAgICAgICAgICAgZmlsdGVyTWFuYWdlci5hcHBseUZpbHRlcih0aGlzLCBpbnB1dCwgb3V0cHV0LCBjbGVhcik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCByZW5kZXJUYXJnZXQgPSBmaWx0ZXJNYW5hZ2VyLmdldEZpbHRlclRleHR1cmUoKTtcblxuICAgICAgICAgICAgbGV0IHNvdXJjZSA9IGlucHV0O1xuICAgICAgICAgICAgbGV0IHRhcmdldCA9IHJlbmRlclRhcmdldDtcbiAgICAgICAgICAgIGxldCB0bXA7XG5cbiAgICAgICAgICAgIGNvbnN0IGxhc3QgPSB0aGlzLl9xdWFsaXR5IC0gMTtcblxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsYXN0OyBpKyspIHtcbiAgICAgICAgICAgICAgICBvZmZzZXQgPSB0aGlzLl9rZXJuZWxzW2ldICsgMC41O1xuICAgICAgICAgICAgICAgIHRoaXMudW5pZm9ybXMudU9mZnNldFswXSA9IG9mZnNldCAqIHV2WDtcbiAgICAgICAgICAgICAgICB0aGlzLnVuaWZvcm1zLnVPZmZzZXRbMV0gPSBvZmZzZXQgKiB1dlk7XG4gICAgICAgICAgICAgICAgZmlsdGVyTWFuYWdlci5hcHBseUZpbHRlcih0aGlzLCBzb3VyY2UsIHRhcmdldCwgdHJ1ZSk7XG5cbiAgICAgICAgICAgICAgICB0bXAgPSBzb3VyY2U7XG4gICAgICAgICAgICAgICAgc291cmNlID0gdGFyZ2V0O1xuICAgICAgICAgICAgICAgIHRhcmdldCA9IHRtcDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9mZnNldCA9IHRoaXMuX2tlcm5lbHNbbGFzdF0gKyAwLjU7XG4gICAgICAgICAgICB0aGlzLnVuaWZvcm1zLnVPZmZzZXRbMF0gPSBvZmZzZXQgKiB1dlg7XG4gICAgICAgICAgICB0aGlzLnVuaWZvcm1zLnVPZmZzZXRbMV0gPSBvZmZzZXQgKiB1dlk7XG4gICAgICAgICAgICBmaWx0ZXJNYW5hZ2VyLmFwcGx5RmlsdGVyKHRoaXMsIHNvdXJjZSwgb3V0cHV0LCBjbGVhcik7XG5cbiAgICAgICAgICAgIGZpbHRlck1hbmFnZXIucmV0dXJuRmlsdGVyVGV4dHVyZShyZW5kZXJUYXJnZXQpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQXV0byBnZW5lcmF0ZSBrZXJuZWxzIGJ5IGJsdXIgJiBxdWFsaXR5XG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBfZ2VuZXJhdGVLZXJuZWxzKCkge1xuICAgICAgICBjb25zdCBibHVyID0gdGhpcy5fYmx1cjtcbiAgICAgICAgY29uc3QgcXVhbGl0eSA9IHRoaXMuX3F1YWxpdHk7XG4gICAgICAgIGNvbnN0IGtlcm5lbHMgPSBbIGJsdXIgXTtcblxuICAgICAgICBpZiAoYmx1ciA+IDApIHtcbiAgICAgICAgICAgIGxldCBrID0gYmx1cjtcbiAgICAgICAgICAgIGNvbnN0IHN0ZXAgPSBibHVyIC8gcXVhbGl0eTtcblxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPCBxdWFsaXR5OyBpKyspIHtcbiAgICAgICAgICAgICAgICBrIC09IHN0ZXA7XG4gICAgICAgICAgICAgICAga2VybmVscy5wdXNoKGspO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fa2VybmVscyA9IGtlcm5lbHM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIGtlcm5lbCBzaXplIG9mIHRoZSBibHVyIGZpbHRlciwgZm9yIGFkdmFuY2VkIHVzYWdlLlxuICAgICAqXG4gICAgICogQG1lbWJlciB7bnVtYmVyW119XG4gICAgICogQGRlZmF1bHQgWzBdXG4gICAgICovXG4gICAgZ2V0IGtlcm5lbHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9rZXJuZWxzO1xuICAgIH1cbiAgICBzZXQga2VybmVscyh2YWx1ZSkge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiYgdmFsdWUubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgdGhpcy5fa2VybmVscyA9IHZhbHVlO1xuICAgICAgICAgICAgdGhpcy5fcXVhbGl0eSA9IHZhbHVlLmxlbmd0aDtcbiAgICAgICAgICAgIHRoaXMuX2JsdXIgPSBNYXRoLm1heC5hcHBseShNYXRoLCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBpZiB2YWx1ZSBpcyBpbnZhbGlkICwgc2V0IGRlZmF1bHQgdmFsdWVcbiAgICAgICAgICAgIHRoaXMuX2tlcm5lbHMgPSBbMF07XG4gICAgICAgICAgICB0aGlzLl9xdWFsaXR5ID0gMTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgaWYgdGhlIGZpbHRlciBpcyBjbGFtcHBlZC5cbiAgICAgKlxuICAgICAqIEByZWFkb25seVxuICAgICAqIEBtZW1iZXIge2Jvb2xlYW59XG4gICAgICogQGRlZmF1bHQgZmFsc2VcbiAgICAgKi9cbiAgICBnZXQgY2xhbXAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGFtcDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBwaXhlbCBzaXplIG9mIHRoZSBmaWx0ZXIuIExhcmdlIHNpemUgaXMgYmx1cnJpZXIuIEZvciBhZHZhbmNlZCB1c2FnZS5cbiAgICAgKlxuICAgICAqIEBtZW1iZXIge1BJWEkuUG9pbnR8bnVtYmVyW119XG4gICAgICogQGRlZmF1bHQgWzEsIDFdXG4gICAgICovXG4gICAgc2V0IHBpeGVsU2l6ZSh2YWx1ZSkge1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgdGhpcy5fcGl4ZWxTaXplLnggPSB2YWx1ZTtcbiAgICAgICAgICAgIHRoaXMuX3BpeGVsU2l6ZS55ID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHRoaXMuX3BpeGVsU2l6ZS54ID0gdmFsdWVbMF07XG4gICAgICAgICAgICB0aGlzLl9waXhlbFNpemUueSA9IHZhbHVlWzFdO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgUG9pbnQpIHtcbiAgICAgICAgICAgIHRoaXMuX3BpeGVsU2l6ZS54ID0gdmFsdWUueDtcbiAgICAgICAgICAgIHRoaXMuX3BpeGVsU2l6ZS55ID0gdmFsdWUueTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIGlmIHZhbHVlIGlzIGludmFsaWQgLCBzZXQgZGVmYXVsdCB2YWx1ZVxuICAgICAgICAgICAgdGhpcy5fcGl4ZWxTaXplLnggPSAxO1xuICAgICAgICAgICAgdGhpcy5fcGl4ZWxTaXplLnkgPSAxO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldCBwaXhlbFNpemUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9waXhlbFNpemU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIHF1YWxpdHkgb2YgdGhlIGZpbHRlciwgaW50ZWdlciBncmVhdGVyIHRoYW4gYDFgLlxuICAgICAqXG4gICAgICogQG1lbWJlciB7bnVtYmVyfVxuICAgICAqIEBkZWZhdWx0IDNcbiAgICAgKi9cbiAgICBnZXQgcXVhbGl0eSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3F1YWxpdHk7XG4gICAgfVxuICAgIHNldCBxdWFsaXR5KHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX3F1YWxpdHkgPSBNYXRoLm1heCgxLCBNYXRoLnJvdW5kKHZhbHVlKSk7XG4gICAgICAgIHRoaXMuX2dlbmVyYXRlS2VybmVscygpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBhbW91bnQgb2YgYmx1ciwgdmFsdWUgZ3JlYXRlciB0aGFuIGAwYC5cbiAgICAgKlxuICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgKiBAZGVmYXVsdCA0XG4gICAgICovXG4gICAgZ2V0IGJsdXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9ibHVyO1xuICAgIH1cbiAgICBzZXQgYmx1cih2YWx1ZSkge1xuICAgICAgICB0aGlzLl9ibHVyID0gdmFsdWU7XG4gICAgICAgIHRoaXMuX2dlbmVyYXRlS2VybmVscygpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgS2F3YXNlQmx1ckZpbHRlciB9O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXNCQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUFRQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBOUtBO0FBQ0E7OyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-kawase-blur/lib/filter-kawase-blur.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-motion-blur/lib/filter-motion-blur.esm.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@pixi/filter-motion-blur/lib/filter-motion-blur.esm.js ***!
  \*****************************************************************************/
/*! exports provided: MotionBlurFilter */
/*! exports used: MotionBlurFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MotionBlurFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/* harmony import */ var _pixi_math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixi/math */ \"./node_modules/@pixi/math/lib/math.es.js\");\n/*!\n * @pixi/filter-motion-blur - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-motion-blur is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\n\\nuniform vec2 uVelocity;\\nuniform int uKernelSize;\\nuniform float uOffset;\\n\\nconst int MAX_KERNEL_SIZE = 2048;\\n\\n// Notice:\\n// the perfect way:\\n//    int kernelSize = min(uKernelSize, MAX_KERNELSIZE);\\n// BUT in real use-case , uKernelSize < MAX_KERNELSIZE almost always.\\n// So use uKernelSize directly.\\n\\nvoid main(void)\\n{\\n    vec4 color = texture2D(uSampler, vTextureCoord);\\n\\n    if (uKernelSize == 0)\\n    {\\n        gl_FragColor = color;\\n        return;\\n    }\\n\\n    vec2 velocity = uVelocity / filterArea.xy;\\n    float offset = -uOffset / length(uVelocity) - 0.5;\\n    int k = uKernelSize - 1;\\n\\n    for(int i = 0; i < MAX_KERNEL_SIZE - 1; i++) {\\n        if (i == k) {\\n            break;\\n        }\\n        vec2 bias = velocity * (float(i) / float(k) + offset);\\n        color += texture2D(uSampler, vTextureCoord + bias);\\n    }\\n    gl_FragColor = color / float(uKernelSize);\\n}\\n\";\n\n/**\n * The MotionBlurFilter applies a Motion blur to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/motion-blur.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-motion-blur|@pixi/filter-motion-blur}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {PIXI.ObservablePoint|PIXI.Point|number[]} [velocity=[0, 0]] Sets the velocity of the motion for blur effect.\n * @param {number} [kernelSize=5] - The kernelSize of the blur filter. Must be odd number >= 5\n * @param {number} [offset=0] - The offset of the blur filter.\n */\nvar MotionBlurFilter = /*@__PURE__*/(function (Filter) {\n    function MotionBlurFilter(velocity, kernelSize, offset) {\n        if ( velocity === void 0 ) velocity = [0, 0];\n        if ( kernelSize === void 0 ) kernelSize = 5;\n        if ( offset === void 0 ) offset = 0;\n\n        Filter.call(this, vertex, fragment);\n        this.uniforms.uVelocity = new Float32Array(2);\n        this._velocity = new _pixi_math__WEBPACK_IMPORTED_MODULE_1__[/* ObservablePoint */ \"e\"](this.velocityChanged, this);\n        this.velocity = velocity;\n\n        /**\n         * The kernelSize of the blur, higher values are slower but look better.\n         * Use odd value greater than 5.\n         * @member {number}\n         * @default 5\n         */\n        this.kernelSize = kernelSize;\n        this.offset = offset;\n    }\n\n    if ( Filter ) MotionBlurFilter.__proto__ = Filter;\n    MotionBlurFilter.prototype = Object.create( Filter && Filter.prototype );\n    MotionBlurFilter.prototype.constructor = MotionBlurFilter;\n\n    var prototypeAccessors = { velocity: { configurable: true },offset: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    MotionBlurFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        var ref = this.velocity;\n        var x = ref.x;\n        var y = ref.y;\n\n        this.uniforms.uKernelSize = (x !== 0 || y !== 0) ? this.kernelSize : 0;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * Sets the velocity of the motion for blur effect.\n     *\n     * @member {PIXI.ObservablePoint}\n     */\n    prototypeAccessors.velocity.set = function (value) {\n        if (Array.isArray(value)) {\n            this._velocity.set(value[0], value[1]);\n        }\n        else if (value instanceof _pixi_math__WEBPACK_IMPORTED_MODULE_1__[/* Point */ \"g\"] || value instanceof _pixi_math__WEBPACK_IMPORTED_MODULE_1__[/* ObservablePoint */ \"e\"]) {\n            this._velocity.copy(value);\n        }\n    };\n\n    prototypeAccessors.velocity.get = function () {\n        return this._velocity;\n    };\n\n    /**\n     * Handle velocity changed\n     * @private\n     */\n    MotionBlurFilter.prototype.velocityChanged = function velocityChanged () {\n        this.uniforms.uVelocity[0] = this._velocity.x;\n        this.uniforms.uVelocity[1] = this._velocity.y;\n    };\n\n    /**\n     * The offset of the blur filter.\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.offset.set = function (value) {\n        this.uniforms.uOffset = value;\n    };\n\n    prototypeAccessors.offset.get = function () {\n        return this.uniforms.uOffset;\n    };\n\n    Object.defineProperties( MotionBlurFilter.prototype, prototypeAccessors );\n\n    return MotionBlurFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLW1vdGlvbi1ibHVyL2xpYi9maWx0ZXItbW90aW9uLWJsdXIuZXNtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9Nb3Rpb25CbHVyRmlsdGVyLmpzPzJlOWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHt2ZXJ0ZXh9IGZyb20gJ0B0b29scy9mcmFnbWVudHMnO1xuaW1wb3J0IGZyYWdtZW50IGZyb20gJy4vbW90aW9uLWJsdXIuZnJhZyc7XG5pbXBvcnQge0ZpbHRlcn0gZnJvbSAnQHBpeGkvY29yZSc7XG5pbXBvcnQge09ic2VydmFibGVQb2ludCwgUG9pbnR9IGZyb20gJ0BwaXhpL21hdGgnO1xuXG4vKipcbiAqIFRoZSBNb3Rpb25CbHVyRmlsdGVyIGFwcGxpZXMgYSBNb3Rpb24gYmx1ciB0byBhbiBvYmplY3QuPGJyPlxuICogIVtvcmlnaW5hbF0oLi4vdG9vbHMvc2NyZWVuc2hvdHMvZGlzdC9vcmlnaW5hbC5wbmcpIVtmaWx0ZXJdKC4uL3Rvb2xzL3NjcmVlbnNob3RzL2Rpc3QvbW90aW9uLWJsdXIucG5nKVxuICpcbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgUElYSS5GaWx0ZXJcbiAqIEBtZW1iZXJvZiBQSVhJLmZpbHRlcnNcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL0BwaXhpL2ZpbHRlci1tb3Rpb24tYmx1cnxAcGl4aS9maWx0ZXItbW90aW9uLWJsdXJ9XG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9waXhpLWZpbHRlcnN8cGl4aS1maWx0ZXJzfVxuICogQHBhcmFtIHtQSVhJLk9ic2VydmFibGVQb2ludHxQSVhJLlBvaW50fG51bWJlcltdfSBbdmVsb2NpdHk9WzAsIDBdXSBTZXRzIHRoZSB2ZWxvY2l0eSBvZiB0aGUgbW90aW9uIGZvciBibHVyIGVmZmVjdC5cbiAqIEBwYXJhbSB7bnVtYmVyfSBba2VybmVsU2l6ZT01XSAtIFRoZSBrZXJuZWxTaXplIG9mIHRoZSBibHVyIGZpbHRlci4gTXVzdCBiZSBvZGQgbnVtYmVyID49IDVcbiAqIEBwYXJhbSB7bnVtYmVyfSBbb2Zmc2V0PTBdIC0gVGhlIG9mZnNldCBvZiB0aGUgYmx1ciBmaWx0ZXIuXG4gKi9cbmNsYXNzIE1vdGlvbkJsdXJGaWx0ZXIgZXh0ZW5kcyBGaWx0ZXIge1xuICAgIGNvbnN0cnVjdG9yKHZlbG9jaXR5ID0gWzAsIDBdLCBrZXJuZWxTaXplID0gNSwgb2Zmc2V0ID0gMCkge1xuICAgICAgICBzdXBlcih2ZXJ0ZXgsIGZyYWdtZW50KTtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy51VmVsb2NpdHkgPSBuZXcgRmxvYXQzMkFycmF5KDIpO1xuICAgICAgICB0aGlzLl92ZWxvY2l0eSA9IG5ldyBPYnNlcnZhYmxlUG9pbnQodGhpcy52ZWxvY2l0eUNoYW5nZWQsIHRoaXMpO1xuICAgICAgICB0aGlzLnZlbG9jaXR5ID0gdmVsb2NpdHk7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBrZXJuZWxTaXplIG9mIHRoZSBibHVyLCBoaWdoZXIgdmFsdWVzIGFyZSBzbG93ZXIgYnV0IGxvb2sgYmV0dGVyLlxuICAgICAgICAgKiBVc2Ugb2RkIHZhbHVlIGdyZWF0ZXIgdGhhbiA1LlxuICAgICAgICAgKiBAbWVtYmVyIHtudW1iZXJ9XG4gICAgICAgICAqIEBkZWZhdWx0IDVcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMua2VybmVsU2l6ZSA9IGtlcm5lbFNpemU7XG4gICAgICAgIHRoaXMub2Zmc2V0ID0gb2Zmc2V0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE92ZXJyaWRlIGV4aXN0aW5nIGFwcGx5IG1ldGhvZCBpbiBQSVhJLkZpbHRlclxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgYXBwbHkoZmlsdGVyTWFuYWdlciwgaW5wdXQsIG91dHB1dCwgY2xlYXIpIHtcbiAgICAgICAgY29uc3Qge3gsIHl9ID0gdGhpcy52ZWxvY2l0eTtcblxuICAgICAgICB0aGlzLnVuaWZvcm1zLnVLZXJuZWxTaXplID0gKHggIT09IDAgfHwgeSAhPT0gMCkgPyB0aGlzLmtlcm5lbFNpemUgOiAwO1xuICAgICAgICBmaWx0ZXJNYW5hZ2VyLmFwcGx5RmlsdGVyKHRoaXMsIGlucHV0LCBvdXRwdXQsIGNsZWFyKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSB2ZWxvY2l0eSBvZiB0aGUgbW90aW9uIGZvciBibHVyIGVmZmVjdC5cbiAgICAgKlxuICAgICAqIEBtZW1iZXIge1BJWEkuT2JzZXJ2YWJsZVBvaW50fVxuICAgICAqL1xuICAgIHNldCB2ZWxvY2l0eSh2YWx1ZSkge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHRoaXMuX3ZlbG9jaXR5LnNldCh2YWx1ZVswXSwgdmFsdWVbMV0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgUG9pbnQgfHwgdmFsdWUgaW5zdGFuY2VvZiBPYnNlcnZhYmxlUG9pbnQpIHtcbiAgICAgICAgICAgIHRoaXMuX3ZlbG9jaXR5LmNvcHkodmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0IHZlbG9jaXR5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fdmVsb2NpdHk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSGFuZGxlIHZlbG9jaXR5IGNoYW5nZWRcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIHZlbG9jaXR5Q2hhbmdlZCgpIHtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy51VmVsb2NpdHlbMF0gPSB0aGlzLl92ZWxvY2l0eS54O1xuICAgICAgICB0aGlzLnVuaWZvcm1zLnVWZWxvY2l0eVsxXSA9IHRoaXMuX3ZlbG9jaXR5Lnk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIG9mZnNldCBvZiB0aGUgYmx1ciBmaWx0ZXIuXG4gICAgICpcbiAgICAgKiBAbWVtYmVyIHtudW1iZXJ9XG4gICAgICogQGRlZmF1bHQgMFxuICAgICAqL1xuICAgIHNldCBvZmZzZXQodmFsdWUpIHtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy51T2Zmc2V0ID0gdmFsdWU7XG4gICAgfVxuXG4gICAgZ2V0IG9mZnNldCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudW5pZm9ybXMudU9mZnNldDtcbiAgICB9XG59XG5cbmV4cG9ydCB7IE1vdGlvbkJsdXJGaWx0ZXIgfTtcblxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7Ozs7Ozs7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFwRUE7QUFDQTs7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-motion-blur/lib/filter-motion-blur.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-multi-color-replace/lib/filter-multi-color-replace.esm.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@pixi/filter-multi-color-replace/lib/filter-multi-color-replace.esm.js ***!
  \*********************************************************************************************/
/*! exports provided: MultiColorReplaceFilter */
/*! exports used: MultiColorReplaceFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MultiColorReplaceFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/* harmony import */ var _pixi_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixi/utils */ \"./node_modules/@pixi/utils/lib/utils.es.js\");\n/*!\n * @pixi/filter-multi-color-replace - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-multi-color-replace is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform float epsilon;\\n\\nconst int MAX_COLORS = %maxColors%;\\n\\nuniform vec3 originalColors[MAX_COLORS];\\nuniform vec3 targetColors[MAX_COLORS];\\n\\nvoid main(void)\\n{\\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\\n\\n    float alpha = gl_FragColor.a;\\n    if (alpha < 0.0001)\\n    {\\n      return;\\n    }\\n\\n    vec3 color = gl_FragColor.rgb / alpha;\\n\\n    for(int i = 0; i < MAX_COLORS; i++)\\n    {\\n      vec3 origColor = originalColors[i];\\n      if (origColor.r < 0.0)\\n      {\\n        break;\\n      }\\n      vec3 colorDiff = origColor - color;\\n      if (length(colorDiff) < epsilon)\\n      {\\n        vec3 targetColor = targetColors[i];\\n        gl_FragColor = vec4((targetColor + colorDiff) * alpha, alpha);\\n        return;\\n      }\\n    }\\n}\\n\";\n\n/**\n * Filter for replacing a color with another color. Similar to ColorReplaceFilter, but support multiple\n * colors.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/multi-color-replace.png)\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-multi-color-replace|@pixi/filter-multi-color-replace}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {Array<Array>} replacements - The collection of replacement items. Each item is color-pair (an array length is 2).\n *                       In the pair, the first value is original color , the second value is target color.\n * @param {number} [epsilon=0.05] - Tolerance of the floating-point comparison between colors\n *                                  (lower = more exact, higher = more inclusive)\n * @param {number} [maxColors] - The maximum number of replacements filter is able to use. Because the\n *                               fragment is only compiled once, this cannot be changed after construction.\n *                               If omitted, the default value is the length of `replacements`.\n *\n * @example\n *  // replaces pure red with pure blue, and replaces pure green with pure white\n *  someSprite.filters = [new MultiColorReplaceFilter(\n *    [\n *      [0xFF0000, 0x0000FF],\n *      [0x00FF00, 0xFFFFFF]\n *    ],\n *    0.001\n *  )];\n *\n *  You also could use [R, G, B] as the color\n *  someOtherSprite.filters = [new MultiColorReplaceFilter(\n *    [\n *      [ [1,0,0], [0,0,1] ],\n *      [ [0,1,0], [1,1,1] ]\n *    ],\n *    0.001\n *  )];\n *\n */\nvar MultiColorReplaceFilter = /*@__PURE__*/(function (Filter) {\n    function MultiColorReplaceFilter(replacements, epsilon, maxColors) {\n        if ( epsilon === void 0 ) epsilon = 0.05;\n        if ( maxColors === void 0 ) maxColors = null;\n\n        maxColors = maxColors || replacements.length;\n\n        Filter.call(this, vertex, fragment.replace(/%maxColors%/g, maxColors));\n\n        this.epsilon = epsilon;\n        this._maxColors = maxColors;\n        this._replacements = null;\n        this.uniforms.originalColors = new Float32Array(maxColors * 3);\n        this.uniforms.targetColors = new Float32Array(maxColors * 3);\n        this.replacements = replacements;\n    }\n\n    if ( Filter ) MultiColorReplaceFilter.__proto__ = Filter;\n    MultiColorReplaceFilter.prototype = Object.create( Filter && Filter.prototype );\n    MultiColorReplaceFilter.prototype.constructor = MultiColorReplaceFilter;\n\n    var prototypeAccessors = { replacements: { configurable: true },maxColors: { configurable: true },epsilon: { configurable: true } };\n\n    /**\n     * The source and target colors for replacement. See constructor for information on the format.\n     *\n     * @member {Array<Array>}\n     */\n    prototypeAccessors.replacements.set = function (replacements) {\n        var originals = this.uniforms.originalColors;\n        var targets = this.uniforms.targetColors;\n        var colorCount = replacements.length;\n\n        if (colorCount > this._maxColors) {\n            throw (\"Length of replacements (\" + colorCount + \") exceeds the maximum colors length (\" + (this._maxColors) + \")\");\n        }\n\n        // Fill with negative values\n        originals[colorCount * 3] = -1;\n\n        for (var i = 0; i < colorCount; i++) {\n            var pair = replacements[i];\n\n            // for original colors\n            var color = pair[0];\n            if (typeof color === 'number') {\n                color = Object(_pixi_utils__WEBPACK_IMPORTED_MODULE_1__[\"hex2rgb\"])(color);\n            }\n            else {\n                pair[0] = Object(_pixi_utils__WEBPACK_IMPORTED_MODULE_1__[\"rgb2hex\"])(color);\n            }\n\n            originals[i * 3] = color[0];\n            originals[(i * 3) + 1] = color[1];\n            originals[(i * 3) + 2] = color[2];\n\n            // for target colors\n            var targetColor = pair[1];\n            if (typeof targetColor === 'number') {\n                targetColor = Object(_pixi_utils__WEBPACK_IMPORTED_MODULE_1__[\"hex2rgb\"])(targetColor);\n            }\n            else {\n                pair[1] = Object(_pixi_utils__WEBPACK_IMPORTED_MODULE_1__[\"rgb2hex\"])(targetColor);\n            }\n\n            targets[i * 3] = targetColor[0];\n            targets[(i * 3) + 1] = targetColor[1];\n            targets[(i * 3) + 2] = targetColor[2];\n        }\n\n        this._replacements = replacements;\n    };\n    prototypeAccessors.replacements.get = function () {\n        return this._replacements;\n    };\n\n    /**\n     * Should be called after changing any of the contents of the replacements.\n     * This is a convenience method for resetting the `replacements`.\n     */\n    MultiColorReplaceFilter.prototype.refresh = function refresh () {\n        this.replacements = this._replacements;\n    };\n\n    /**\n     * The maximum number of color replacements supported by this filter. Can be changed\n     * _only_ during construction.\n     *\n     * @member {number}\n     * @readonly\n     */\n    prototypeAccessors.maxColors.get = function () {\n        return this._maxColors;\n    };\n\n    /**\n     * Tolerance of the floating-point comparison between colors (lower = more exact, higher = more inclusive)\n     *\n     * @member {number}\n     * @default 0.05\n     */\n    prototypeAccessors.epsilon.set = function (value) {\n        this.uniforms.epsilon = value;\n    };\n    prototypeAccessors.epsilon.get = function () {\n        return this.uniforms.epsilon;\n    };\n\n    Object.defineProperties( MultiColorReplaceFilter.prototype, prototypeAccessors );\n\n    return MultiColorReplaceFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLW11bHRpLWNvbG9yLXJlcGxhY2UvbGliL2ZpbHRlci1tdWx0aS1jb2xvci1yZXBsYWNlLmVzbS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9zcmMvTXVsdGlDb2xvclJlcGxhY2VGaWx0ZXIuanM/NDViNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3ZlcnRleH0gZnJvbSAnQHRvb2xzL2ZyYWdtZW50cyc7XG5pbXBvcnQgZnJhZ21lbnQgZnJvbSAnLi9tdWx0aS1jb2xvci1yZXBsYWNlLmZyYWcnO1xuaW1wb3J0IHtGaWx0ZXJ9IGZyb20gJ0BwaXhpL2NvcmUnO1xuaW1wb3J0IHtoZXgycmdiLCByZ2IyaGV4fSBmcm9tICdAcGl4aS91dGlscyc7XG5cbi8qKlxuICogRmlsdGVyIGZvciByZXBsYWNpbmcgYSBjb2xvciB3aXRoIGFub3RoZXIgY29sb3IuIFNpbWlsYXIgdG8gQ29sb3JSZXBsYWNlRmlsdGVyLCBidXQgc3VwcG9ydCBtdWx0aXBsZVxuICogY29sb3JzLjxicj5cbiAqICFbb3JpZ2luYWxdKC4uL3Rvb2xzL3NjcmVlbnNob3RzL2Rpc3Qvb3JpZ2luYWwucG5nKSFbZmlsdGVyXSguLi90b29scy9zY3JlZW5zaG90cy9kaXN0L211bHRpLWNvbG9yLXJlcGxhY2UucG5nKVxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBQSVhJLkZpbHRlclxuICogQG1lbWJlcm9mIFBJWEkuZmlsdGVyc1xuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvQHBpeGkvZmlsdGVyLW11bHRpLWNvbG9yLXJlcGxhY2V8QHBpeGkvZmlsdGVyLW11bHRpLWNvbG9yLXJlcGxhY2V9XG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9waXhpLWZpbHRlcnN8cGl4aS1maWx0ZXJzfVxuICogQHBhcmFtIHtBcnJheTxBcnJheT59IHJlcGxhY2VtZW50cyAtIFRoZSBjb2xsZWN0aW9uIG9mIHJlcGxhY2VtZW50IGl0ZW1zLiBFYWNoIGl0ZW0gaXMgY29sb3ItcGFpciAoYW4gYXJyYXkgbGVuZ3RoIGlzIDIpLlxuICogICAgICAgICAgICAgICAgICAgICAgIEluIHRoZSBwYWlyLCB0aGUgZmlyc3QgdmFsdWUgaXMgb3JpZ2luYWwgY29sb3IgLCB0aGUgc2Vjb25kIHZhbHVlIGlzIHRhcmdldCBjb2xvci5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbZXBzaWxvbj0wLjA1XSAtIFRvbGVyYW5jZSBvZiB0aGUgZmxvYXRpbmctcG9pbnQgY29tcGFyaXNvbiBiZXR3ZWVuIGNvbG9yc1xuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGxvd2VyID0gbW9yZSBleGFjdCwgaGlnaGVyID0gbW9yZSBpbmNsdXNpdmUpXG4gKiBAcGFyYW0ge251bWJlcn0gW21heENvbG9yc10gLSBUaGUgbWF4aW11bSBudW1iZXIgb2YgcmVwbGFjZW1lbnRzIGZpbHRlciBpcyBhYmxlIHRvIHVzZS4gQmVjYXVzZSB0aGVcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZyYWdtZW50IGlzIG9ubHkgY29tcGlsZWQgb25jZSwgdGhpcyBjYW5ub3QgYmUgY2hhbmdlZCBhZnRlciBjb25zdHJ1Y3Rpb24uXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJZiBvbWl0dGVkLCB0aGUgZGVmYXVsdCB2YWx1ZSBpcyB0aGUgbGVuZ3RoIG9mIGByZXBsYWNlbWVudHNgLlxuICpcbiAqIEBleGFtcGxlXG4gKiAgLy8gcmVwbGFjZXMgcHVyZSByZWQgd2l0aCBwdXJlIGJsdWUsIGFuZCByZXBsYWNlcyBwdXJlIGdyZWVuIHdpdGggcHVyZSB3aGl0ZVxuICogIHNvbWVTcHJpdGUuZmlsdGVycyA9IFtuZXcgTXVsdGlDb2xvclJlcGxhY2VGaWx0ZXIoXG4gKiAgICBbXG4gKiAgICAgIFsweEZGMDAwMCwgMHgwMDAwRkZdLFxuICogICAgICBbMHgwMEZGMDAsIDB4RkZGRkZGXVxuICogICAgXSxcbiAqICAgIDAuMDAxXG4gKiAgKV07XG4gKlxuICogIFlvdSBhbHNvIGNvdWxkIHVzZSBbUiwgRywgQl0gYXMgdGhlIGNvbG9yXG4gKiAgc29tZU90aGVyU3ByaXRlLmZpbHRlcnMgPSBbbmV3IE11bHRpQ29sb3JSZXBsYWNlRmlsdGVyKFxuICogICAgW1xuICogICAgICBbIFsxLDAsMF0sIFswLDAsMV0gXSxcbiAqICAgICAgWyBbMCwxLDBdLCBbMSwxLDFdIF1cbiAqICAgIF0sXG4gKiAgICAwLjAwMVxuICogICldO1xuICpcbiAqL1xuY2xhc3MgTXVsdGlDb2xvclJlcGxhY2VGaWx0ZXIgZXh0ZW5kcyBGaWx0ZXIge1xuICAgIGNvbnN0cnVjdG9yKHJlcGxhY2VtZW50cywgZXBzaWxvbiA9IDAuMDUsIG1heENvbG9ycyA9IG51bGwpIHtcbiAgICAgICAgbWF4Q29sb3JzID0gbWF4Q29sb3JzIHx8IHJlcGxhY2VtZW50cy5sZW5ndGg7XG5cbiAgICAgICAgc3VwZXIodmVydGV4LCBmcmFnbWVudC5yZXBsYWNlKC8lbWF4Q29sb3JzJS9nLCBtYXhDb2xvcnMpKTtcblxuICAgICAgICB0aGlzLmVwc2lsb24gPSBlcHNpbG9uO1xuICAgICAgICB0aGlzLl9tYXhDb2xvcnMgPSBtYXhDb2xvcnM7XG4gICAgICAgIHRoaXMuX3JlcGxhY2VtZW50cyA9IG51bGw7XG4gICAgICAgIHRoaXMudW5pZm9ybXMub3JpZ2luYWxDb2xvcnMgPSBuZXcgRmxvYXQzMkFycmF5KG1heENvbG9ycyAqIDMpO1xuICAgICAgICB0aGlzLnVuaWZvcm1zLnRhcmdldENvbG9ycyA9IG5ldyBGbG9hdDMyQXJyYXkobWF4Q29sb3JzICogMyk7XG4gICAgICAgIHRoaXMucmVwbGFjZW1lbnRzID0gcmVwbGFjZW1lbnRzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBzb3VyY2UgYW5kIHRhcmdldCBjb2xvcnMgZm9yIHJlcGxhY2VtZW50LiBTZWUgY29uc3RydWN0b3IgZm9yIGluZm9ybWF0aW9uIG9uIHRoZSBmb3JtYXQuXG4gICAgICpcbiAgICAgKiBAbWVtYmVyIHtBcnJheTxBcnJheT59XG4gICAgICovXG4gICAgc2V0IHJlcGxhY2VtZW50cyhyZXBsYWNlbWVudHMpIHtcbiAgICAgICAgY29uc3Qgb3JpZ2luYWxzID0gdGhpcy51bmlmb3Jtcy5vcmlnaW5hbENvbG9ycztcbiAgICAgICAgY29uc3QgdGFyZ2V0cyA9IHRoaXMudW5pZm9ybXMudGFyZ2V0Q29sb3JzO1xuICAgICAgICBjb25zdCBjb2xvckNvdW50ID0gcmVwbGFjZW1lbnRzLmxlbmd0aDtcblxuICAgICAgICBpZiAoY29sb3JDb3VudCA+IHRoaXMuX21heENvbG9ycykge1xuICAgICAgICAgICAgdGhyb3cgYExlbmd0aCBvZiByZXBsYWNlbWVudHMgKCR7Y29sb3JDb3VudH0pIGV4Y2VlZHMgdGhlIG1heGltdW0gY29sb3JzIGxlbmd0aCAoJHt0aGlzLl9tYXhDb2xvcnN9KWA7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBGaWxsIHdpdGggbmVnYXRpdmUgdmFsdWVzXG4gICAgICAgIG9yaWdpbmFsc1tjb2xvckNvdW50ICogM10gPSAtMTtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvbG9yQ291bnQ7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgcGFpciA9IHJlcGxhY2VtZW50c1tpXTtcblxuICAgICAgICAgICAgLy8gZm9yIG9yaWdpbmFsIGNvbG9yc1xuICAgICAgICAgICAgbGV0IGNvbG9yID0gcGFpclswXTtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29sb3IgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgY29sb3IgPSBoZXgycmdiKGNvbG9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHBhaXJbMF0gPSByZ2IyaGV4KGNvbG9yKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgb3JpZ2luYWxzW2kgKiAzXSA9IGNvbG9yWzBdO1xuICAgICAgICAgICAgb3JpZ2luYWxzWyhpICogMykgKyAxXSA9IGNvbG9yWzFdO1xuICAgICAgICAgICAgb3JpZ2luYWxzWyhpICogMykgKyAyXSA9IGNvbG9yWzJdO1xuXG4gICAgICAgICAgICAvLyBmb3IgdGFyZ2V0IGNvbG9yc1xuICAgICAgICAgICAgbGV0IHRhcmdldENvbG9yID0gcGFpclsxXTtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdGFyZ2V0Q29sb3IgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgdGFyZ2V0Q29sb3IgPSBoZXgycmdiKHRhcmdldENvbG9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHBhaXJbMV0gPSByZ2IyaGV4KHRhcmdldENvbG9yKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGFyZ2V0c1tpICogM10gPSB0YXJnZXRDb2xvclswXTtcbiAgICAgICAgICAgIHRhcmdldHNbKGkgKiAzKSArIDFdID0gdGFyZ2V0Q29sb3JbMV07XG4gICAgICAgICAgICB0YXJnZXRzWyhpICogMykgKyAyXSA9IHRhcmdldENvbG9yWzJdO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fcmVwbGFjZW1lbnRzID0gcmVwbGFjZW1lbnRzO1xuICAgIH1cbiAgICBnZXQgcmVwbGFjZW1lbnRzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcmVwbGFjZW1lbnRzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3VsZCBiZSBjYWxsZWQgYWZ0ZXIgY2hhbmdpbmcgYW55IG9mIHRoZSBjb250ZW50cyBvZiB0aGUgcmVwbGFjZW1lbnRzLlxuICAgICAqIFRoaXMgaXMgYSBjb252ZW5pZW5jZSBtZXRob2QgZm9yIHJlc2V0dGluZyB0aGUgYHJlcGxhY2VtZW50c2AuXG4gICAgICovXG4gICAgcmVmcmVzaCgpIHtcbiAgICAgICAgdGhpcy5yZXBsYWNlbWVudHMgPSB0aGlzLl9yZXBsYWNlbWVudHM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIG1heGltdW0gbnVtYmVyIG9mIGNvbG9yIHJlcGxhY2VtZW50cyBzdXBwb3J0ZWQgYnkgdGhpcyBmaWx0ZXIuIENhbiBiZSBjaGFuZ2VkXG4gICAgICogX29ubHlfIGR1cmluZyBjb25zdHJ1Y3Rpb24uXG4gICAgICpcbiAgICAgKiBAbWVtYmVyIHtudW1iZXJ9XG4gICAgICogQHJlYWRvbmx5XG4gICAgICovXG4gICAgZ2V0IG1heENvbG9ycygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX21heENvbG9ycztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUb2xlcmFuY2Ugb2YgdGhlIGZsb2F0aW5nLXBvaW50IGNvbXBhcmlzb24gYmV0d2VlbiBjb2xvcnMgKGxvd2VyID0gbW9yZSBleGFjdCwgaGlnaGVyID0gbW9yZSBpbmNsdXNpdmUpXG4gICAgICpcbiAgICAgKiBAbWVtYmVyIHtudW1iZXJ9XG4gICAgICogQGRlZmF1bHQgMC4wNVxuICAgICAqL1xuICAgIHNldCBlcHNpbG9uKHZhbHVlKSB7XG4gICAgICAgIHRoaXMudW5pZm9ybXMuZXBzaWxvbiA9IHZhbHVlO1xuICAgIH1cbiAgICBnZXQgZXBzaWxvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudW5pZm9ybXMuZXBzaWxvbjtcbiAgICB9XG59XG5cbmV4cG9ydCB7IE11bHRpQ29sb3JSZXBsYWNlRmlsdGVyIH07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTBDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFDQTtBQUNBOzs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FBUUE7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQWxHQTtBQUNBOzsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-multi-color-replace/lib/filter-multi-color-replace.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-old-film/lib/filter-old-film.esm.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@pixi/filter-old-film/lib/filter-old-film.esm.js ***!
  \***********************************************************************/
/*! exports provided: OldFilmFilter */
/*! exports used: OldFilmFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return OldFilmFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/*!\n * @pixi/filter-old-film - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-old-film is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\nuniform vec2 dimensions;\\n\\nuniform float sepia;\\nuniform float noise;\\nuniform float noiseSize;\\nuniform float scratch;\\nuniform float scratchDensity;\\nuniform float scratchWidth;\\nuniform float vignetting;\\nuniform float vignettingAlpha;\\nuniform float vignettingBlur;\\nuniform float seed;\\n\\nconst float SQRT_2 = 1.414213;\\nconst vec3 SEPIA_RGB = vec3(112.0 / 255.0, 66.0 / 255.0, 20.0 / 255.0);\\n\\nfloat rand(vec2 co) {\\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\nvec3 Overlay(vec3 src, vec3 dst)\\n{\\n    // if (dst <= 0.5) then: 2 * src * dst\\n    // if (dst > 0.5) then: 1 - 2 * (1 - dst) * (1 - src)\\n    return vec3((dst.x <= 0.5) ? (2.0 * src.x * dst.x) : (1.0 - 2.0 * (1.0 - dst.x) * (1.0 - src.x)),\\n                (dst.y <= 0.5) ? (2.0 * src.y * dst.y) : (1.0 - 2.0 * (1.0 - dst.y) * (1.0 - src.y)),\\n                (dst.z <= 0.5) ? (2.0 * src.z * dst.z) : (1.0 - 2.0 * (1.0 - dst.z) * (1.0 - src.z)));\\n}\\n\\n\\nvoid main()\\n{\\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\\n    vec3 color = gl_FragColor.rgb;\\n\\n    if (sepia > 0.0)\\n    {\\n        float gray = (color.x + color.y + color.z) / 3.0;\\n        vec3 grayscale = vec3(gray);\\n\\n        color = Overlay(SEPIA_RGB, grayscale);\\n\\n        color = grayscale + sepia * (color - grayscale);\\n    }\\n\\n    vec2 coord = vTextureCoord * filterArea.xy / dimensions.xy;\\n\\n    if (vignetting > 0.0)\\n    {\\n        float outter = SQRT_2 - vignetting * SQRT_2;\\n        vec2 dir = vec2(vec2(0.5, 0.5) - coord);\\n        dir.y *= dimensions.y / dimensions.x;\\n        float darker = clamp((outter - length(dir) * SQRT_2) / ( 0.00001 + vignettingBlur * SQRT_2), 0.0, 1.0);\\n        color.rgb *= darker + (1.0 - darker) * (1.0 - vignettingAlpha);\\n    }\\n\\n    if (scratchDensity > seed && scratch != 0.0)\\n    {\\n        float phase = seed * 256.0;\\n        float s = mod(floor(phase), 2.0);\\n        float dist = 1.0 / scratchDensity;\\n        float d = distance(coord, vec2(seed * dist, abs(s - seed * dist)));\\n        if (d < seed * 0.6 + 0.4)\\n        {\\n            highp float period = scratchDensity * 10.0;\\n\\n            float xx = coord.x * period + phase;\\n            float aa = abs(mod(xx, 0.5) * 4.0);\\n            float bb = mod(floor(xx / 0.5), 2.0);\\n            float yy = (1.0 - bb) * aa + bb * (2.0 - aa);\\n\\n            float kk = 2.0 * period;\\n            float dw = scratchWidth / dimensions.x * (0.75 + seed);\\n            float dh = dw * kk;\\n\\n            float tine = (yy - (2.0 - dh));\\n\\n            if (tine > 0.0) {\\n                float _sign = sign(scratch);\\n\\n                tine = s * tine / period + scratch + 0.1;\\n                tine = clamp(tine + 1.0, 0.5 + _sign * 0.5, 1.5 + _sign * 0.5);\\n\\n                color.rgb *= tine;\\n            }\\n        }\\n    }\\n\\n    if (noise > 0.0 && noiseSize > 0.0)\\n    {\\n        vec2 pixelCoord = vTextureCoord.xy * filterArea.xy;\\n        pixelCoord.x = floor(pixelCoord.x / noiseSize);\\n        pixelCoord.y = floor(pixelCoord.y / noiseSize);\\n        // vec2 d = pixelCoord * noiseSize * vec2(1024.0 + seed * 512.0, 1024.0 - seed * 512.0);\\n        // float _noise = snoise(d) * 0.5;\\n        float _noise = rand(pixelCoord * noiseSize * seed) - 0.5;\\n        color += _noise * noise;\\n    }\\n\\n    gl_FragColor.rgb = color;\\n}\\n\";\n\n/**\n * The OldFilmFilter applies a Old film effect to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/old-film.gif)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-old-film|@pixi/filter-old-film}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n *\n * @param {object|number} [options] - The optional parameters of old film effect.\n *                        When options is a number , it will be `seed`\n * @param {number} [options.sepia=0.3] - The amount of saturation of sepia effect,\n *        a value of `1` is more saturation and closer to `0` is less, and a value of\n *        `0` produces no sepia effect\n * @param {number} [options.noise=0.3] - Opacity/intensity of the noise effect between `0` and `1`\n * @param {number} [options.noiseSize=1.0] - The size of the noise particles\n * @param {number} [options.scratch=0.5] - How often scratches appear\n * @param {number} [options.scratchDensity=0.3] - The density of the number of scratches\n * @param {number} [options.scratchWidth=1.0] - The width of the scratches\n * @param {number} [options.vignetting=0.3] - The radius of the vignette effect, smaller\n *        values produces a smaller vignette\n * @param {number} [options.vignettingAlpha=1.0] - Amount of opacity of vignette\n * @param {number} [options.vignettingBlur=0.3] - Blur intensity of the vignette\n * @param {number} [seed=0] - A see value to apply to the random noise generation\n */\nvar OldFilmFilter = /*@__PURE__*/(function (Filter) {\n    function OldFilmFilter(options, seed) {\n        if ( seed === void 0 ) seed = 0;\n\n        Filter.call(this, vertex, fragment);\n        this.uniforms.dimensions = new Float32Array(2);\n\n        if (typeof options === 'number') {\n            this.seed = options;\n            options = null;\n        }\n        else {\n            /**\n             * A see value to apply to the random noise generation\n             * @member {number}\n             */\n            this.seed = seed;\n        }\n\n        Object.assign(this, {\n            sepia: 0.3,\n            noise: 0.3,\n            noiseSize: 1.0,\n            scratch: 0.5,\n            scratchDensity: 0.3,\n            scratchWidth: 1.0,\n            vignetting: 0.3,\n            vignettingAlpha: 1.0,\n            vignettingBlur: 0.3,\n        }, options);\n    }\n\n    if ( Filter ) OldFilmFilter.__proto__ = Filter;\n    OldFilmFilter.prototype = Object.create( Filter && Filter.prototype );\n    OldFilmFilter.prototype.constructor = OldFilmFilter;\n\n    var prototypeAccessors = { sepia: { configurable: true },noise: { configurable: true },noiseSize: { configurable: true },scratch: { configurable: true },scratchDensity: { configurable: true },scratchWidth: { configurable: true },vignetting: { configurable: true },vignettingAlpha: { configurable: true },vignettingBlur: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    OldFilmFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.dimensions[0] = input.filterFrame.width;\n        this.uniforms.dimensions[1] = input.filterFrame.height;\n\n        // named `seed` because in the most programming languages,\n        // `random` used for \"the function for generating random value\".\n        this.uniforms.seed = this.seed;\n\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n\n    /**\n     * The amount of saturation of sepia effect,\n     * a value of `1` is more saturation and closer to `0` is less,\n     * and a value of `0` produces no sepia effect\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.sepia.set = function (value) {\n        this.uniforms.sepia = value;\n    };\n\n    prototypeAccessors.sepia.get = function () {\n        return this.uniforms.sepia;\n    };\n\n    /**\n     * Opacity/intensity of the noise effect between `0` and `1`\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.noise.set = function (value) {\n        this.uniforms.noise = value;\n    };\n\n    prototypeAccessors.noise.get = function () {\n        return this.uniforms.noise;\n    };\n\n    /**\n     * The size of the noise particles\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.noiseSize.set = function (value) {\n        this.uniforms.noiseSize = value;\n    };\n\n    prototypeAccessors.noiseSize.get = function () {\n        return this.uniforms.noiseSize;\n    };\n\n    /**\n     * How often scratches appear\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.scratch.set = function (value) {\n        this.uniforms.scratch = value;\n    };\n\n    prototypeAccessors.scratch.get = function () {\n        return this.uniforms.scratch;\n    };\n\n    /**\n     * The density of the number of scratches\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.scratchDensity.set = function (value) {\n        this.uniforms.scratchDensity = value;\n    };\n\n    prototypeAccessors.scratchDensity.get = function () {\n        return this.uniforms.scratchDensity;\n    };\n\n    /**\n     * The width of the scratches\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.scratchWidth.set = function (value) {\n        this.uniforms.scratchWidth = value;\n    };\n\n    prototypeAccessors.scratchWidth.get = function () {\n        return this.uniforms.scratchWidth;\n    };\n\n    /**\n     * The radius of the vignette effect, smaller\n     * values produces a smaller vignette\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.vignetting.set = function (value) {\n        this.uniforms.vignetting = value;\n    };\n\n    prototypeAccessors.vignetting.get = function () {\n        return this.uniforms.vignetting;\n    };\n\n    /**\n     * Amount of opacity of vignette\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.vignettingAlpha.set = function (value) {\n        this.uniforms.vignettingAlpha = value;\n    };\n\n    prototypeAccessors.vignettingAlpha.get = function () {\n        return this.uniforms.vignettingAlpha;\n    };\n\n    /**\n     * Blur intensity of the vignette\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.vignettingBlur.set = function (value) {\n        this.uniforms.vignettingBlur = value;\n    };\n\n    prototypeAccessors.vignettingBlur.get = function () {\n        return this.uniforms.vignettingBlur;\n    };\n\n    Object.defineProperties( OldFilmFilter.prototype, prototypeAccessors );\n\n    return OldFilmFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-old-film/lib/filter-old-film.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-outline/lib/filter-outline.esm.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@pixi/filter-outline/lib/filter-outline.esm.js ***!
  \*********************************************************************/
/*! exports provided: OutlineFilter */
/*! exports used: OutlineFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return OutlineFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/* harmony import */ var _pixi_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixi/utils */ \"./node_modules/@pixi/utils/lib/utils.es.js\");\n/*!\n * @pixi/filter-outline - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-outline is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec2 thickness;\\nuniform vec4 outlineColor;\\nuniform vec4 filterClamp;\\n\\nconst float DOUBLE_PI = 3.14159265358979323846264 * 2.;\\n\\nvoid main(void) {\\n    vec4 ownColor = texture2D(uSampler, vTextureCoord);\\n    vec4 curColor;\\n    float maxAlpha = 0.;\\n    vec2 displaced;\\n    for (float angle = 0.; angle <= DOUBLE_PI; angle += ${angleStep}) {\\n        displaced.x = vTextureCoord.x + thickness.x * cos(angle);\\n        displaced.y = vTextureCoord.y + thickness.y * sin(angle);\\n        curColor = texture2D(uSampler, clamp(displaced, filterClamp.xy, filterClamp.zw));\\n        maxAlpha = max(maxAlpha, curColor.a);\\n    }\\n    float resultAlpha = max(maxAlpha, ownColor.a);\\n    gl_FragColor = vec4((ownColor.rgb + outlineColor.rgb * (1. - ownColor.a)) * resultAlpha, resultAlpha);\\n}\\n\";\n\n/**\n * OutlineFilter, originally by mishaa\n * http://www.html5gamedevs.com/topic/10640-outline-a-sprite-change-certain-colors/?p=69966\n * http://codepen.io/mishaa/pen/emGNRB<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/outline.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-outline|@pixi/filter-outline}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {number} [thickness=1] The tickness of the outline. Make it 2 times more for resolution 2\n * @param {number} [color=0x000000] The color of the outline.\n * @param {number} [quality=0.1] The quality of the outline from `0` to `1`, using a higher quality\n *        setting will result in slower performance and more accuracy.\n *\n * @example\n *  someSprite.shader = new OutlineFilter(9, 0xFF0000);\n */\nvar OutlineFilter = /*@__PURE__*/(function (Filter) {\n    function OutlineFilter(thickness, color, quality) {\n        if ( thickness === void 0 ) thickness = 1;\n        if ( color === void 0 ) color = 0x000000;\n        if ( quality === void 0 ) quality = 0.1;\n\n        var samples =  Math.max(\n            quality * OutlineFilter.MAX_SAMPLES,\n            OutlineFilter.MIN_SAMPLES\n        );\n        var angleStep = (Math.PI * 2 / samples).toFixed(7);\n\n        Filter.call(this, vertex, fragment.replace(/\\$\\{angleStep\\}/, angleStep));\n        this.uniforms.thickness = new Float32Array([0, 0]);\n\n        /**\n         * The thickness of the outline.\n         * @member {number}\n         * @default 1\n         */\n        this.thickness = thickness;\n\n        this.uniforms.outlineColor = new Float32Array([0, 0, 0, 1]);\n        this.color = color;\n\n        this.quality = quality;\n    }\n\n    if ( Filter ) OutlineFilter.__proto__ = Filter;\n    OutlineFilter.prototype = Object.create( Filter && Filter.prototype );\n    OutlineFilter.prototype.constructor = OutlineFilter;\n\n    var prototypeAccessors = { color: { configurable: true } };\n\n    OutlineFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.thickness[0] = this.thickness / input._frame.width;\n        this.uniforms.thickness[1] = this.thickness / input._frame.height;\n\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * The color of the glow.\n     * @member {number}\n     * @default 0x000000\n     */\n    prototypeAccessors.color.get = function () {\n        return Object(_pixi_utils__WEBPACK_IMPORTED_MODULE_1__[\"rgb2hex\"])(this.uniforms.outlineColor);\n    };\n    prototypeAccessors.color.set = function (value) {\n        Object(_pixi_utils__WEBPACK_IMPORTED_MODULE_1__[\"hex2rgb\"])(value, this.uniforms.outlineColor);\n    };\n\n    Object.defineProperties( OutlineFilter.prototype, prototypeAccessors );\n\n    return OutlineFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n/**\n * The minimum number of samples for rendering outline.\n * @static\n * @member {number} MIN_SAMPLES\n * @memberof PIXI.filters.OutlineFilter\n * @default 1\n */\nOutlineFilter.MIN_SAMPLES = 1;\n\n/**\n * The maximum number of samples for rendering outline.\n * @static\n * @member {number} MAX_SAMPLES\n * @memberof PIXI.filters.OutlineFilter\n * @default 100\n */\nOutlineFilter.MAX_SAMPLES = 100;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLW91dGxpbmUvbGliL2ZpbHRlci1vdXRsaW5lLmVzbS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9zcmMvT3V0bGluZUZpbHRlci5qcz9jOGMyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dmVydGV4fSBmcm9tICdAdG9vbHMvZnJhZ21lbnRzJztcbmltcG9ydCBmcmFnbWVudCBmcm9tICcuL291dGxpbmUuZnJhZyc7XG5pbXBvcnQge0ZpbHRlcn0gZnJvbSAnQHBpeGkvY29yZSc7XG5pbXBvcnQge3JnYjJoZXgsIGhleDJyZ2J9IGZyb20gJ0BwaXhpL3V0aWxzJztcblxuLyoqXG4gKiBPdXRsaW5lRmlsdGVyLCBvcmlnaW5hbGx5IGJ5IG1pc2hhYVxuICogaHR0cDovL3d3dy5odG1sNWdhbWVkZXZzLmNvbS90b3BpYy8xMDY0MC1vdXRsaW5lLWEtc3ByaXRlLWNoYW5nZS1jZXJ0YWluLWNvbG9ycy8/cD02OTk2NlxuICogaHR0cDovL2NvZGVwZW4uaW8vbWlzaGFhL3Blbi9lbUdOUkI8YnI+XG4gKiAhW29yaWdpbmFsXSguLi90b29scy9zY3JlZW5zaG90cy9kaXN0L29yaWdpbmFsLnBuZykhW2ZpbHRlcl0oLi4vdG9vbHMvc2NyZWVuc2hvdHMvZGlzdC9vdXRsaW5lLnBuZylcbiAqXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIFBJWEkuRmlsdGVyXG4gKiBAbWVtYmVyb2YgUElYSS5maWx0ZXJzXG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9AcGl4aS9maWx0ZXItb3V0bGluZXxAcGl4aS9maWx0ZXItb3V0bGluZX1cbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL3BpeGktZmlsdGVyc3xwaXhpLWZpbHRlcnN9XG4gKiBAcGFyYW0ge251bWJlcn0gW3RoaWNrbmVzcz0xXSBUaGUgdGlja25lc3Mgb2YgdGhlIG91dGxpbmUuIE1ha2UgaXQgMiB0aW1lcyBtb3JlIGZvciByZXNvbHV0aW9uIDJcbiAqIEBwYXJhbSB7bnVtYmVyfSBbY29sb3I9MHgwMDAwMDBdIFRoZSBjb2xvciBvZiB0aGUgb3V0bGluZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbcXVhbGl0eT0wLjFdIFRoZSBxdWFsaXR5IG9mIHRoZSBvdXRsaW5lIGZyb20gYDBgIHRvIGAxYCwgdXNpbmcgYSBoaWdoZXIgcXVhbGl0eVxuICogICAgICAgIHNldHRpbmcgd2lsbCByZXN1bHQgaW4gc2xvd2VyIHBlcmZvcm1hbmNlIGFuZCBtb3JlIGFjY3VyYWN5LlxuICpcbiAqIEBleGFtcGxlXG4gKiAgc29tZVNwcml0ZS5zaGFkZXIgPSBuZXcgT3V0bGluZUZpbHRlcig5LCAweEZGMDAwMCk7XG4gKi9cbmNsYXNzIE91dGxpbmVGaWx0ZXIgZXh0ZW5kcyBGaWx0ZXIge1xuXG4gICAgY29uc3RydWN0b3IodGhpY2tuZXNzID0gMSwgY29sb3IgPSAweDAwMDAwMCwgcXVhbGl0eSA9IDAuMSkge1xuICAgICAgICBjb25zdCBzYW1wbGVzID0gIE1hdGgubWF4KFxuICAgICAgICAgICAgcXVhbGl0eSAqIE91dGxpbmVGaWx0ZXIuTUFYX1NBTVBMRVMsXG4gICAgICAgICAgICBPdXRsaW5lRmlsdGVyLk1JTl9TQU1QTEVTXG4gICAgICAgICk7XG4gICAgICAgIGNvbnN0IGFuZ2xlU3RlcCA9IChNYXRoLlBJICogMiAvIHNhbXBsZXMpLnRvRml4ZWQoNyk7XG5cbiAgICAgICAgc3VwZXIodmVydGV4LCBmcmFnbWVudC5yZXBsYWNlKC9cXCRcXHthbmdsZVN0ZXBcXH0vLCBhbmdsZVN0ZXApKTtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy50aGlja25lc3MgPSBuZXcgRmxvYXQzMkFycmF5KFswLCAwXSk7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSB0aGlja25lc3Mgb2YgdGhlIG91dGxpbmUuXG4gICAgICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgICAgICogQGRlZmF1bHQgMVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy50aGlja25lc3MgPSB0aGlja25lc3M7XG5cbiAgICAgICAgdGhpcy51bmlmb3Jtcy5vdXRsaW5lQ29sb3IgPSBuZXcgRmxvYXQzMkFycmF5KFswLCAwLCAwLCAxXSk7XG4gICAgICAgIHRoaXMuY29sb3IgPSBjb2xvcjtcblxuICAgICAgICB0aGlzLnF1YWxpdHkgPSBxdWFsaXR5O1xuICAgIH1cblxuICAgIGFwcGx5KGZpbHRlck1hbmFnZXIsIGlucHV0LCBvdXRwdXQsIGNsZWFyKSB7XG4gICAgICAgIHRoaXMudW5pZm9ybXMudGhpY2tuZXNzWzBdID0gdGhpcy50aGlja25lc3MgLyBpbnB1dC5fZnJhbWUud2lkdGg7XG4gICAgICAgIHRoaXMudW5pZm9ybXMudGhpY2tuZXNzWzFdID0gdGhpcy50aGlja25lc3MgLyBpbnB1dC5fZnJhbWUuaGVpZ2h0O1xuXG4gICAgICAgIGZpbHRlck1hbmFnZXIuYXBwbHlGaWx0ZXIodGhpcywgaW5wdXQsIG91dHB1dCwgY2xlYXIpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBjb2xvciBvZiB0aGUgZ2xvdy5cbiAgICAgKiBAbWVtYmVyIHtudW1iZXJ9XG4gICAgICogQGRlZmF1bHQgMHgwMDAwMDBcbiAgICAgKi9cbiAgICBnZXQgY29sb3IoKSB7XG4gICAgICAgIHJldHVybiByZ2IyaGV4KHRoaXMudW5pZm9ybXMub3V0bGluZUNvbG9yKTtcbiAgICB9XG4gICAgc2V0IGNvbG9yKHZhbHVlKSB7XG4gICAgICAgIGhleDJyZ2IodmFsdWUsIHRoaXMudW5pZm9ybXMub3V0bGluZUNvbG9yKTtcbiAgICB9XG59XG5cbi8qKlxuICogVGhlIG1pbmltdW0gbnVtYmVyIG9mIHNhbXBsZXMgZm9yIHJlbmRlcmluZyBvdXRsaW5lLlxuICogQHN0YXRpY1xuICogQG1lbWJlciB7bnVtYmVyfSBNSU5fU0FNUExFU1xuICogQG1lbWJlcm9mIFBJWEkuZmlsdGVycy5PdXRsaW5lRmlsdGVyXG4gKiBAZGVmYXVsdCAxXG4gKi9cbk91dGxpbmVGaWx0ZXIuTUlOX1NBTVBMRVMgPSAxO1xuXG4vKipcbiAqIFRoZSBtYXhpbXVtIG51bWJlciBvZiBzYW1wbGVzIGZvciByZW5kZXJpbmcgb3V0bGluZS5cbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXIge251bWJlcn0gTUFYX1NBTVBMRVNcbiAqIEBtZW1iZXJvZiBQSVhJLmZpbHRlcnMuT3V0bGluZUZpbHRlclxuICogQGRlZmF1bHQgMTAwXG4gKi9cbk91dGxpbmVGaWx0ZXIuTUFYX1NBTVBMRVMgPSAxMDA7XG5cbmV4cG9ydCB7IE91dGxpbmVGaWx0ZXIgfTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBd0JBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQTNDQTtBQUNBOzs7Ozs7OztBQW1EQTtBQUNBOzs7Ozs7OztBQVFBO0FBQ0E7OyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-outline/lib/filter-outline.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-pixelate/lib/filter-pixelate.esm.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@pixi/filter-pixelate/lib/filter-pixelate.esm.js ***!
  \***********************************************************************/
/*! exports provided: PixelateFilter */
/*! exports used: PixelateFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PixelateFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/*!\n * @pixi/filter-pixelate - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-pixelate is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\n\\nuniform vec2 size;\\nuniform sampler2D uSampler;\\n\\nuniform vec4 filterArea;\\n\\nvec2 mapCoord( vec2 coord )\\n{\\n    coord *= filterArea.xy;\\n    coord += filterArea.zw;\\n\\n    return coord;\\n}\\n\\nvec2 unmapCoord( vec2 coord )\\n{\\n    coord -= filterArea.zw;\\n    coord /= filterArea.xy;\\n\\n    return coord;\\n}\\n\\nvec2 pixelate(vec2 coord, vec2 size)\\n{\\n\\treturn floor( coord / size ) * size;\\n}\\n\\nvoid main(void)\\n{\\n    vec2 coord = mapCoord(vTextureCoord);\\n\\n    coord = pixelate(coord, size);\\n\\n    coord = unmapCoord(coord);\\n\\n    gl_FragColor = texture2D(uSampler, coord);\\n}\\n\";\n\n/**\n * This filter applies a pixelate effect making display objects appear 'blocky'.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/pixelate.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-pixelate|@pixi/filter-pixelate}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {PIXI.Point|Array<number>|number} [size=10] Either the width/height of the size of the pixels, or square size\n */\nvar PixelateFilter = /*@__PURE__*/(function (Filter) {\n    function PixelateFilter(size) {\n        if ( size === void 0 ) size = 10;\n\n        Filter.call(this, vertex, fragment);\n        this.size = size;\n    }\n\n    if ( Filter ) PixelateFilter.__proto__ = Filter;\n    PixelateFilter.prototype = Object.create( Filter && Filter.prototype );\n    PixelateFilter.prototype.constructor = PixelateFilter;\n\n    var prototypeAccessors = { size: { configurable: true } };\n\n    /**\n     * This a point that describes the size of the blocks.\n     * x is the width of the block and y is the height.\n     *\n     * @member {PIXI.Point|Array<number>|number}\n     * @default 10\n     */\n    prototypeAccessors.size.get = function () {\n        return this.uniforms.size;\n    };\n    prototypeAccessors.size.set = function (value) {\n        if (typeof value === 'number') {\n            value = [value, value];\n        }\n        this.uniforms.size = value;\n    };\n\n    Object.defineProperties( PixelateFilter.prototype, prototypeAccessors );\n\n    return PixelateFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLXBpeGVsYXRlL2xpYi9maWx0ZXItcGl4ZWxhdGUuZXNtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9QaXhlbGF0ZUZpbHRlci5qcz8zOWM4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dmVydGV4fSBmcm9tICdAdG9vbHMvZnJhZ21lbnRzJztcbmltcG9ydCBmcmFnbWVudCBmcm9tICcuL3BpeGVsYXRlLmZyYWcnO1xuaW1wb3J0IHtGaWx0ZXJ9IGZyb20gJ0BwaXhpL2NvcmUnO1xuXG4vKipcbiAqIFRoaXMgZmlsdGVyIGFwcGxpZXMgYSBwaXhlbGF0ZSBlZmZlY3QgbWFraW5nIGRpc3BsYXkgb2JqZWN0cyBhcHBlYXIgJ2Jsb2NreScuPGJyPlxuICogIVtvcmlnaW5hbF0oLi4vdG9vbHMvc2NyZWVuc2hvdHMvZGlzdC9vcmlnaW5hbC5wbmcpIVtmaWx0ZXJdKC4uL3Rvb2xzL3NjcmVlbnNob3RzL2Rpc3QvcGl4ZWxhdGUucG5nKVxuICpcbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgUElYSS5GaWx0ZXJcbiAqIEBtZW1iZXJvZiBQSVhJLmZpbHRlcnNcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL0BwaXhpL2ZpbHRlci1waXhlbGF0ZXxAcGl4aS9maWx0ZXItcGl4ZWxhdGV9XG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9waXhpLWZpbHRlcnN8cGl4aS1maWx0ZXJzfVxuICogQHBhcmFtIHtQSVhJLlBvaW50fEFycmF5PG51bWJlcj58bnVtYmVyfSBbc2l6ZT0xMF0gRWl0aGVyIHRoZSB3aWR0aC9oZWlnaHQgb2YgdGhlIHNpemUgb2YgdGhlIHBpeGVscywgb3Igc3F1YXJlIHNpemVcbiAqL1xuY2xhc3MgUGl4ZWxhdGVGaWx0ZXIgZXh0ZW5kcyBGaWx0ZXIge1xuXG4gICAgY29uc3RydWN0b3Ioc2l6ZSA9IDEwKSB7XG4gICAgICAgIHN1cGVyKHZlcnRleCwgZnJhZ21lbnQpO1xuICAgICAgICB0aGlzLnNpemUgPSBzaXplO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoaXMgYSBwb2ludCB0aGF0IGRlc2NyaWJlcyB0aGUgc2l6ZSBvZiB0aGUgYmxvY2tzLlxuICAgICAqIHggaXMgdGhlIHdpZHRoIG9mIHRoZSBibG9jayBhbmQgeSBpcyB0aGUgaGVpZ2h0LlxuICAgICAqXG4gICAgICogQG1lbWJlciB7UElYSS5Qb2ludHxBcnJheTxudW1iZXI+fG51bWJlcn1cbiAgICAgKiBAZGVmYXVsdCAxMFxuICAgICAqL1xuICAgIGdldCBzaXplKCkge1xuICAgICAgICByZXR1cm4gdGhpcy51bmlmb3Jtcy5zaXplO1xuICAgIH1cbiAgICBzZXQgc2l6ZSh2YWx1ZSkge1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgdmFsdWUgPSBbdmFsdWUsIHZhbHVlXTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnVuaWZvcm1zLnNpemUgPSB2YWx1ZTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IFBpeGVsYXRlRmlsdGVyIH07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZUE7QUFFQTtBQUFBO0FBQ0E7QUFBQTtBQUNBOzs7Ozs7O0FBQ0E7QUFDQTs7Ozs7Ozs7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQXZCQTtBQUNBOzsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-pixelate/lib/filter-pixelate.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-radial-blur/lib/filter-radial-blur.esm.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@pixi/filter-radial-blur/lib/filter-radial-blur.esm.js ***!
  \*****************************************************************************/
/*! exports provided: RadialBlurFilter */
/*! exports used: RadialBlurFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return RadialBlurFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/*!\n * @pixi/filter-radial-blur - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-radial-blur is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\n\\nuniform float uRadian;\\nuniform vec2 uCenter;\\nuniform float uRadius;\\nuniform int uKernelSize;\\n\\nconst int MAX_KERNEL_SIZE = 2048;\\n\\nvoid main(void)\\n{\\n    vec4 color = texture2D(uSampler, vTextureCoord);\\n\\n    if (uKernelSize == 0)\\n    {\\n        gl_FragColor = color;\\n        return;\\n    }\\n\\n    float aspect = filterArea.y / filterArea.x;\\n    vec2 center = uCenter.xy / filterArea.xy;\\n    float gradient = uRadius / filterArea.x * 0.3;\\n    float radius = uRadius / filterArea.x - gradient * 0.5;\\n    int k = uKernelSize - 1;\\n\\n    vec2 coord = vTextureCoord;\\n    vec2 dir = vec2(center - coord);\\n    float dist = length(vec2(dir.x, dir.y * aspect));\\n\\n    float radianStep = uRadian;\\n    if (radius >= 0.0 && dist > radius) {\\n        float delta = dist - radius;\\n        float gap = gradient;\\n        float scale = 1.0 - abs(delta / gap);\\n        if (scale <= 0.0) {\\n            gl_FragColor = color;\\n            return;\\n        }\\n        radianStep *= scale;\\n    }\\n    radianStep /= float(k);\\n\\n    float s = sin(radianStep);\\n    float c = cos(radianStep);\\n    mat2 rotationMatrix = mat2(vec2(c, -s), vec2(s, c));\\n\\n    for(int i = 0; i < MAX_KERNEL_SIZE - 1; i++) {\\n        if (i == k) {\\n            break;\\n        }\\n\\n        coord -= center;\\n        coord.y *= aspect;\\n        coord = rotationMatrix * coord;\\n        coord.y /= aspect;\\n        coord += center;\\n\\n        vec4 sample = texture2D(uSampler, coord);\\n\\n        // switch to pre-multiplied alpha to correctly blur transparent images\\n        // sample.rgb *= sample.a;\\n\\n        color += sample;\\n    }\\n\\n    gl_FragColor = color / float(uKernelSize);\\n}\\n\";\n\n/**\n * The RadialBlurFilter applies a Motion blur to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/radial-blur.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-radial-blur|@pixi/filter-radial-blur}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {number} [angle=0] Sets the angle of the motion for blur effect.\n * @param {PIXI.Point|number[]} [center=[0,0]] The center of the radial.\n * @param {number} [kernelSize=5] - The kernelSize of the blur filter. But be odd number >= 3\n * @param {number} [radius=-1] - The maximum size of the blur radius, `-1` is infinite\n */\nvar RadialBlurFilter = /*@__PURE__*/(function (Filter) {\n    function RadialBlurFilter(angle, center, kernelSize, radius) {\n        if ( angle === void 0 ) angle = 0;\n        if ( center === void 0 ) center = [0, 0];\n        if ( kernelSize === void 0 ) kernelSize = 5;\n        if ( radius === void 0 ) radius = -1;\n\n        Filter.call(this, vertex, fragment);\n\n        this._angle = 0;\n        this.angle = angle;\n        this.center = center;\n        this.kernelSize = kernelSize;\n        this.radius = radius;\n    }\n\n    if ( Filter ) RadialBlurFilter.__proto__ = Filter;\n    RadialBlurFilter.prototype = Object.create( Filter && Filter.prototype );\n    RadialBlurFilter.prototype.constructor = RadialBlurFilter;\n\n    var prototypeAccessors = { angle: { configurable: true },center: { configurable: true },radius: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    RadialBlurFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uKernelSize = this._angle !== 0 ? this.kernelSize : 0;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * Sets the angle in degrees of the motion for blur effect.\n     *\n     * @member {PIXI.Point|number[]}\n     * @default [0, 0]\n     */\n    prototypeAccessors.angle.set = function (value) {\n        this._angle = value;\n        this.uniforms.uRadian = value * Math.PI / 180;\n    };\n\n    prototypeAccessors.angle.get = function () {\n        return this._angle;\n    };\n\n    /**\n     * Center of the effect.\n     *\n     * @member {PIXI.Point|number[]}\n     * @default [0, 0]\n     */\n    prototypeAccessors.center.get = function () {\n        return this.uniforms.uCenter;\n    };\n\n    prototypeAccessors.center.set = function (value) {\n        this.uniforms.uCenter = value;\n    };\n\n    /**\n     * Outer radius of the effect. The default value of `-1` is infinite.\n     *\n     * @member {number}\n     * @default -1\n     */\n    prototypeAccessors.radius.get = function () {\n        return this.uniforms.uRadius;\n    };\n\n    prototypeAccessors.radius.set = function (value) {\n        if (value < 0 || value === Infinity) {\n            value = -1;\n        }\n        this.uniforms.uRadius = value;\n    };\n\n    Object.defineProperties( RadialBlurFilter.prototype, prototypeAccessors );\n\n    return RadialBlurFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLXJhZGlhbC1ibHVyL2xpYi9maWx0ZXItcmFkaWFsLWJsdXIuZXNtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9SYWRpYWxCbHVyRmlsdGVyLmpzPzUxMzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHt2ZXJ0ZXh9IGZyb20gJ0B0b29scy9mcmFnbWVudHMnO1xuaW1wb3J0IGZyYWdtZW50IGZyb20gJy4vcmFkaWFsLWJsdXIuZnJhZyc7XG5pbXBvcnQge0ZpbHRlcn0gZnJvbSAnQHBpeGkvY29yZSc7XG5cbi8qKlxuICogVGhlIFJhZGlhbEJsdXJGaWx0ZXIgYXBwbGllcyBhIE1vdGlvbiBibHVyIHRvIGFuIG9iamVjdC48YnI+XG4gKiAhW29yaWdpbmFsXSguLi90b29scy9zY3JlZW5zaG90cy9kaXN0L29yaWdpbmFsLnBuZykhW2ZpbHRlcl0oLi4vdG9vbHMvc2NyZWVuc2hvdHMvZGlzdC9yYWRpYWwtYmx1ci5wbmcpXG4gKlxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBQSVhJLkZpbHRlclxuICogQG1lbWJlcm9mIFBJWEkuZmlsdGVyc1xuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvQHBpeGkvZmlsdGVyLXJhZGlhbC1ibHVyfEBwaXhpL2ZpbHRlci1yYWRpYWwtYmx1cn1cbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL3BpeGktZmlsdGVyc3xwaXhpLWZpbHRlcnN9XG4gKiBAcGFyYW0ge251bWJlcn0gW2FuZ2xlPTBdIFNldHMgdGhlIGFuZ2xlIG9mIHRoZSBtb3Rpb24gZm9yIGJsdXIgZWZmZWN0LlxuICogQHBhcmFtIHtQSVhJLlBvaW50fG51bWJlcltdfSBbY2VudGVyPVswLDBdXSBUaGUgY2VudGVyIG9mIHRoZSByYWRpYWwuXG4gKiBAcGFyYW0ge251bWJlcn0gW2tlcm5lbFNpemU9NV0gLSBUaGUga2VybmVsU2l6ZSBvZiB0aGUgYmx1ciBmaWx0ZXIuIEJ1dCBiZSBvZGQgbnVtYmVyID49IDNcbiAqIEBwYXJhbSB7bnVtYmVyfSBbcmFkaXVzPS0xXSAtIFRoZSBtYXhpbXVtIHNpemUgb2YgdGhlIGJsdXIgcmFkaXVzLCBgLTFgIGlzIGluZmluaXRlXG4gKi9cbmNsYXNzIFJhZGlhbEJsdXJGaWx0ZXIgZXh0ZW5kcyBGaWx0ZXIge1xuICAgIGNvbnN0cnVjdG9yKGFuZ2xlID0gMCwgY2VudGVyID0gWzAsIDBdLCBrZXJuZWxTaXplID0gNSwgcmFkaXVzID0gLTEpIHtcbiAgICAgICAgc3VwZXIodmVydGV4LCBmcmFnbWVudCk7XG5cbiAgICAgICAgdGhpcy5fYW5nbGUgPSAwO1xuICAgICAgICB0aGlzLmFuZ2xlID0gYW5nbGU7XG4gICAgICAgIHRoaXMuY2VudGVyID0gY2VudGVyO1xuICAgICAgICB0aGlzLmtlcm5lbFNpemUgPSBrZXJuZWxTaXplO1xuICAgICAgICB0aGlzLnJhZGl1cyA9IHJhZGl1cztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBPdmVycmlkZSBleGlzdGluZyBhcHBseSBtZXRob2QgaW4gUElYSS5GaWx0ZXJcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIGFwcGx5KGZpbHRlck1hbmFnZXIsIGlucHV0LCBvdXRwdXQsIGNsZWFyKSB7XG4gICAgICAgIHRoaXMudW5pZm9ybXMudUtlcm5lbFNpemUgPSB0aGlzLl9hbmdsZSAhPT0gMCA/IHRoaXMua2VybmVsU2l6ZSA6IDA7XG4gICAgICAgIGZpbHRlck1hbmFnZXIuYXBwbHlGaWx0ZXIodGhpcywgaW5wdXQsIG91dHB1dCwgY2xlYXIpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIGFuZ2xlIGluIGRlZ3JlZXMgb2YgdGhlIG1vdGlvbiBmb3IgYmx1ciBlZmZlY3QuXG4gICAgICpcbiAgICAgKiBAbWVtYmVyIHtQSVhJLlBvaW50fG51bWJlcltdfVxuICAgICAqIEBkZWZhdWx0IFswLCAwXVxuICAgICAqL1xuICAgIHNldCBhbmdsZSh2YWx1ZSkge1xuICAgICAgICB0aGlzLl9hbmdsZSA9IHZhbHVlO1xuICAgICAgICB0aGlzLnVuaWZvcm1zLnVSYWRpYW4gPSB2YWx1ZSAqIE1hdGguUEkgLyAxODA7XG4gICAgfVxuXG4gICAgZ2V0IGFuZ2xlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fYW5nbGU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2VudGVyIG9mIHRoZSBlZmZlY3QuXG4gICAgICpcbiAgICAgKiBAbWVtYmVyIHtQSVhJLlBvaW50fG51bWJlcltdfVxuICAgICAqIEBkZWZhdWx0IFswLCAwXVxuICAgICAqL1xuICAgIGdldCBjZW50ZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnVuaWZvcm1zLnVDZW50ZXI7XG4gICAgfVxuXG4gICAgc2V0IGNlbnRlcih2YWx1ZSkge1xuICAgICAgICB0aGlzLnVuaWZvcm1zLnVDZW50ZXIgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBPdXRlciByYWRpdXMgb2YgdGhlIGVmZmVjdC4gVGhlIGRlZmF1bHQgdmFsdWUgb2YgYC0xYCBpcyBpbmZpbml0ZS5cbiAgICAgKlxuICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgKiBAZGVmYXVsdCAtMVxuICAgICAqL1xuICAgIGdldCByYWRpdXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnVuaWZvcm1zLnVSYWRpdXM7XG4gICAgfVxuXG4gICAgc2V0IHJhZGl1cyh2YWx1ZSkge1xuICAgICAgICBpZiAodmFsdWUgPCAwIHx8IHZhbHVlID09PSBJbmZpbml0eSkge1xuICAgICAgICAgICAgdmFsdWUgPSAtMTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnVuaWZvcm1zLnVSYWRpdXMgPSB2YWx1ZTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IFJhZGlhbEJsdXJGaWx0ZXIgfTtcblxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFqRUE7QUFDQTs7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-radial-blur/lib/filter-radial-blur.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-reflection/lib/filter-reflection.esm.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@pixi/filter-reflection/lib/filter-reflection.esm.js ***!
  \***************************************************************************/
/*! exports provided: ReflectionFilter */
/*! exports used: ReflectionFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ReflectionFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/*!\n * @pixi/filter-reflection - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-reflection is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\nuniform vec2 dimensions;\\n\\nuniform bool mirror;\\nuniform float boundary;\\nuniform vec2 amplitude;\\nuniform vec2 waveLength;\\nuniform vec2 alpha;\\nuniform float time;\\n\\nfloat rand(vec2 co) {\\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\nvoid main(void)\\n{\\n    vec2 pixelCoord = vTextureCoord.xy * filterArea.xy;\\n    vec2 coord = pixelCoord / dimensions;\\n\\n    if (coord.y < boundary) {\\n        gl_FragColor = texture2D(uSampler, vTextureCoord);\\n        return;\\n    }\\n\\n    float k = (coord.y - boundary) / (1. - boundary + 0.0001);\\n    float areaY = boundary * dimensions.y / filterArea.y;\\n    float v = areaY + areaY - vTextureCoord.y;\\n    float y = mirror ? v : vTextureCoord.y;\\n\\n    float _amplitude = ((amplitude.y - amplitude.x) * k + amplitude.x ) / filterArea.x;\\n    float _waveLength = ((waveLength.y - waveLength.x) * k + waveLength.x) / filterArea.y;\\n    float _alpha = (alpha.y - alpha.x) * k + alpha.x;\\n\\n    float x = vTextureCoord.x + cos(v * 6.28 / _waveLength - time) * _amplitude;\\n    x = clamp(x, filterClamp.x, filterClamp.z);\\n\\n    vec4 color = texture2D(uSampler, vec2(x, y));\\n\\n    gl_FragColor = color * _alpha;\\n}\\n\";\n\n/**\n * Applies a reflection effect to simulate the reflection on water with waves.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/reflection.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-reflection|@pixi/filter-reflection}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n *\n * @param {object} [options] - The optional parameters of Reflection effect.\n * @param {number} [options.mirror=true] - `true` to reflect the image, `false` for waves-only\n * @param {number} [options.boundary=0.5] - Vertical position of the reflection point, default is 50% (middle)\n *                 smaller numbers produce a larger reflection, larger numbers produce a smaller reflection.\n * @param {number} [options.amplitude=[0, 20]] - Starting and ending amplitude of waves\n * @param {number} [options.waveLength=[30, 100]] - Starting and ending length of waves\n * @param {number} [options.alpha=[1, 1]] - Starting and ending alpha values\n * @param {number} [options.time=0] - Time for animating position of waves\n */\nvar ReflectionFilter = /*@__PURE__*/(function (Filter) {\n    function ReflectionFilter(options) {\n        Filter.call(this, vertex, fragment);\n        this.uniforms.amplitude = new Float32Array(2);\n        this.uniforms.waveLength = new Float32Array(2);\n        this.uniforms.alpha = new Float32Array(2);\n        this.uniforms.dimensions = new Float32Array(2);\n\n        Object.assign(this, {\n            mirror: true,\n            boundary: 0.5,\n            amplitude: [0, 20],\n            waveLength: [30, 100],\n            alpha: [1, 1],\n\n            /**\n             * Time for animating position of waves\n             *\n             * @member {number}\n             * @memberof PIXI.filters.ReflectionFilter#\n             * @default 0\n             */\n            time: 0,\n        }, options);\n    }\n\n    if ( Filter ) ReflectionFilter.__proto__ = Filter;\n    ReflectionFilter.prototype = Object.create( Filter && Filter.prototype );\n    ReflectionFilter.prototype.constructor = ReflectionFilter;\n\n    var prototypeAccessors = { mirror: { configurable: true },boundary: { configurable: true },amplitude: { configurable: true },waveLength: { configurable: true },alpha: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    ReflectionFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.dimensions[0] = input.filterFrame.width;\n        this.uniforms.dimensions[1] = input.filterFrame.height;\n\n        this.uniforms.time = this.time;\n\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * `true` to reflect the image, `false` for waves-only\n     *\n     * @member {boolean}\n     * @default true\n     */\n    prototypeAccessors.mirror.set = function (value) {\n        this.uniforms.mirror = value;\n    };\n    prototypeAccessors.mirror.get = function () {\n        return this.uniforms.mirror;\n    };\n\n    /**\n     * Vertical position of the reflection point, default is 50% (middle)\n     * smaller numbers produce a larger reflection, larger numbers produce a smaller reflection.\n     *\n     * @member {number}\n     * @default 0.5\n     */\n    prototypeAccessors.boundary.set = function (value) {\n        this.uniforms.boundary = value;\n    };\n    prototypeAccessors.boundary.get = function () {\n        return this.uniforms.boundary;\n    };\n\n    /**\n     * Starting and ending amplitude of waves\n     * @member {number[]}\n     * @default [0, 20]\n     */\n    prototypeAccessors.amplitude.set = function (value) {\n        this.uniforms.amplitude[0] = value[0];\n        this.uniforms.amplitude[1] = value[1];\n    };\n    prototypeAccessors.amplitude.get = function () {\n        return this.uniforms.amplitude;\n    };\n\n    /**\n     * Starting and ending length of waves\n     * @member {number[]}\n     * @default [30, 100]\n     */\n    prototypeAccessors.waveLength.set = function (value) {\n        this.uniforms.waveLength[0] = value[0];\n        this.uniforms.waveLength[1] = value[1];\n    };\n    prototypeAccessors.waveLength.get = function () {\n        return this.uniforms.waveLength;\n    };\n\n    /**\n     * Starting and ending alpha values\n     * @member {number[]}\n     * @default [1, 1]\n     */\n    prototypeAccessors.alpha.set = function (value) {\n        this.uniforms.alpha[0] = value[0];\n        this.uniforms.alpha[1] = value[1];\n    };\n    prototypeAccessors.alpha.get = function () {\n        return this.uniforms.alpha;\n    };\n\n    Object.defineProperties( ReflectionFilter.prototype, prototypeAccessors );\n\n    return ReflectionFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLXJlZmxlY3Rpb24vbGliL2ZpbHRlci1yZWZsZWN0aW9uLmVzbS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9zcmMvUmVmbGVjdGlvbkZpbHRlci5qcz9jMGI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dmVydGV4fSBmcm9tICdAdG9vbHMvZnJhZ21lbnRzJztcbmltcG9ydCBmcmFnbWVudCBmcm9tICcuL3JlZmxlY3Rpb24uZnJhZyc7XG5pbXBvcnQge0ZpbHRlcn0gZnJvbSAnQHBpeGkvY29yZSc7XG5cbi8qKlxuICogQXBwbGllcyBhIHJlZmxlY3Rpb24gZWZmZWN0IHRvIHNpbXVsYXRlIHRoZSByZWZsZWN0aW9uIG9uIHdhdGVyIHdpdGggd2F2ZXMuPGJyPlxuICogIVtvcmlnaW5hbF0oLi4vdG9vbHMvc2NyZWVuc2hvdHMvZGlzdC9vcmlnaW5hbC5wbmcpIVtmaWx0ZXJdKC4uL3Rvb2xzL3NjcmVlbnNob3RzL2Rpc3QvcmVmbGVjdGlvbi5wbmcpXG4gKlxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBQSVhJLkZpbHRlclxuICogQG1lbWJlcm9mIFBJWEkuZmlsdGVyc1xuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvQHBpeGkvZmlsdGVyLXJlZmxlY3Rpb258QHBpeGkvZmlsdGVyLXJlZmxlY3Rpb259XG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9waXhpLWZpbHRlcnN8cGl4aS1maWx0ZXJzfVxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc10gLSBUaGUgb3B0aW9uYWwgcGFyYW1ldGVycyBvZiBSZWZsZWN0aW9uIGVmZmVjdC5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy5taXJyb3I9dHJ1ZV0gLSBgdHJ1ZWAgdG8gcmVmbGVjdCB0aGUgaW1hZ2UsIGBmYWxzZWAgZm9yIHdhdmVzLW9ubHlcbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy5ib3VuZGFyeT0wLjVdIC0gVmVydGljYWwgcG9zaXRpb24gb2YgdGhlIHJlZmxlY3Rpb24gcG9pbnQsIGRlZmF1bHQgaXMgNTAlIChtaWRkbGUpXG4gKiAgICAgICAgICAgICAgICAgc21hbGxlciBudW1iZXJzIHByb2R1Y2UgYSBsYXJnZXIgcmVmbGVjdGlvbiwgbGFyZ2VyIG51bWJlcnMgcHJvZHVjZSBhIHNtYWxsZXIgcmVmbGVjdGlvbi5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy5hbXBsaXR1ZGU9WzAsIDIwXV0gLSBTdGFydGluZyBhbmQgZW5kaW5nIGFtcGxpdHVkZSBvZiB3YXZlc1xuICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLndhdmVMZW5ndGg9WzMwLCAxMDBdXSAtIFN0YXJ0aW5nIGFuZCBlbmRpbmcgbGVuZ3RoIG9mIHdhdmVzXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMuYWxwaGE9WzEsIDFdXSAtIFN0YXJ0aW5nIGFuZCBlbmRpbmcgYWxwaGEgdmFsdWVzXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMudGltZT0wXSAtIFRpbWUgZm9yIGFuaW1hdGluZyBwb3NpdGlvbiBvZiB3YXZlc1xuICovXG5jbGFzcyBSZWZsZWN0aW9uRmlsdGVyIGV4dGVuZHMgRmlsdGVyIHtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgICAgIHN1cGVyKHZlcnRleCwgZnJhZ21lbnQpO1xuICAgICAgICB0aGlzLnVuaWZvcm1zLmFtcGxpdHVkZSA9IG5ldyBGbG9hdDMyQXJyYXkoMik7XG4gICAgICAgIHRoaXMudW5pZm9ybXMud2F2ZUxlbmd0aCA9IG5ldyBGbG9hdDMyQXJyYXkoMik7XG4gICAgICAgIHRoaXMudW5pZm9ybXMuYWxwaGEgPSBuZXcgRmxvYXQzMkFycmF5KDIpO1xuICAgICAgICB0aGlzLnVuaWZvcm1zLmRpbWVuc2lvbnMgPSBuZXcgRmxvYXQzMkFycmF5KDIpO1xuXG4gICAgICAgIE9iamVjdC5hc3NpZ24odGhpcywge1xuICAgICAgICAgICAgbWlycm9yOiB0cnVlLFxuICAgICAgICAgICAgYm91bmRhcnk6IDAuNSxcbiAgICAgICAgICAgIGFtcGxpdHVkZTogWzAsIDIwXSxcbiAgICAgICAgICAgIHdhdmVMZW5ndGg6IFszMCwgMTAwXSxcbiAgICAgICAgICAgIGFscGhhOiBbMSwgMV0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogVGltZSBmb3IgYW5pbWF0aW5nIHBvc2l0aW9uIG9mIHdhdmVzXG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogQG1lbWJlciB7bnVtYmVyfVxuICAgICAgICAgICAgICogQG1lbWJlcm9mIFBJWEkuZmlsdGVycy5SZWZsZWN0aW9uRmlsdGVyI1xuICAgICAgICAgICAgICogQGRlZmF1bHQgMFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICB0aW1lOiAwLFxuICAgICAgICB9LCBvcHRpb25zKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBPdmVycmlkZSBleGlzdGluZyBhcHBseSBtZXRob2QgaW4gUElYSS5GaWx0ZXJcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIGFwcGx5KGZpbHRlck1hbmFnZXIsIGlucHV0LCBvdXRwdXQsIGNsZWFyKSB7XG4gICAgICAgIHRoaXMudW5pZm9ybXMuZGltZW5zaW9uc1swXSA9IGlucHV0LmZpbHRlckZyYW1lLndpZHRoO1xuICAgICAgICB0aGlzLnVuaWZvcm1zLmRpbWVuc2lvbnNbMV0gPSBpbnB1dC5maWx0ZXJGcmFtZS5oZWlnaHQ7XG5cbiAgICAgICAgdGhpcy51bmlmb3Jtcy50aW1lID0gdGhpcy50aW1lO1xuXG4gICAgICAgIGZpbHRlck1hbmFnZXIuYXBwbHlGaWx0ZXIodGhpcywgaW5wdXQsIG91dHB1dCwgY2xlYXIpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGB0cnVlYCB0byByZWZsZWN0IHRoZSBpbWFnZSwgYGZhbHNlYCBmb3Igd2F2ZXMtb25seVxuICAgICAqXG4gICAgICogQG1lbWJlciB7Ym9vbGVhbn1cbiAgICAgKiBAZGVmYXVsdCB0cnVlXG4gICAgICovXG4gICAgc2V0IG1pcnJvcih2YWx1ZSkge1xuICAgICAgICB0aGlzLnVuaWZvcm1zLm1pcnJvciA9IHZhbHVlO1xuICAgIH1cbiAgICBnZXQgbWlycm9yKCkge1xuICAgICAgICByZXR1cm4gdGhpcy51bmlmb3Jtcy5taXJyb3I7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVmVydGljYWwgcG9zaXRpb24gb2YgdGhlIHJlZmxlY3Rpb24gcG9pbnQsIGRlZmF1bHQgaXMgNTAlIChtaWRkbGUpXG4gICAgICogc21hbGxlciBudW1iZXJzIHByb2R1Y2UgYSBsYXJnZXIgcmVmbGVjdGlvbiwgbGFyZ2VyIG51bWJlcnMgcHJvZHVjZSBhIHNtYWxsZXIgcmVmbGVjdGlvbi5cbiAgICAgKlxuICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgKiBAZGVmYXVsdCAwLjVcbiAgICAgKi9cbiAgICBzZXQgYm91bmRhcnkodmFsdWUpIHtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5ib3VuZGFyeSA9IHZhbHVlO1xuICAgIH1cbiAgICBnZXQgYm91bmRhcnkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnVuaWZvcm1zLmJvdW5kYXJ5O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFN0YXJ0aW5nIGFuZCBlbmRpbmcgYW1wbGl0dWRlIG9mIHdhdmVzXG4gICAgICogQG1lbWJlciB7bnVtYmVyW119XG4gICAgICogQGRlZmF1bHQgWzAsIDIwXVxuICAgICAqL1xuICAgIHNldCBhbXBsaXR1ZGUodmFsdWUpIHtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5hbXBsaXR1ZGVbMF0gPSB2YWx1ZVswXTtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5hbXBsaXR1ZGVbMV0gPSB2YWx1ZVsxXTtcbiAgICB9XG4gICAgZ2V0IGFtcGxpdHVkZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudW5pZm9ybXMuYW1wbGl0dWRlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFN0YXJ0aW5nIGFuZCBlbmRpbmcgbGVuZ3RoIG9mIHdhdmVzXG4gICAgICogQG1lbWJlciB7bnVtYmVyW119XG4gICAgICogQGRlZmF1bHQgWzMwLCAxMDBdXG4gICAgICovXG4gICAgc2V0IHdhdmVMZW5ndGgodmFsdWUpIHtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy53YXZlTGVuZ3RoWzBdID0gdmFsdWVbMF07XG4gICAgICAgIHRoaXMudW5pZm9ybXMud2F2ZUxlbmd0aFsxXSA9IHZhbHVlWzFdO1xuICAgIH1cbiAgICBnZXQgd2F2ZUxlbmd0aCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudW5pZm9ybXMud2F2ZUxlbmd0aDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTdGFydGluZyBhbmQgZW5kaW5nIGFscGhhIHZhbHVlc1xuICAgICAqIEBtZW1iZXIge251bWJlcltdfVxuICAgICAqIEBkZWZhdWx0IFsxLCAxXVxuICAgICAqL1xuICAgIHNldCBhbHBoYSh2YWx1ZSkge1xuICAgICAgICB0aGlzLnVuaWZvcm1zLmFscGhhWzBdID0gdmFsdWVbMF07XG4gICAgICAgIHRoaXMudW5pZm9ybXMuYWxwaGFbMV0gPSB2YWx1ZVsxXTtcbiAgICB9XG4gICAgZ2V0IGFscGhhKCkge1xuICAgICAgICByZXR1cm4gdGhpcy51bmlmb3Jtcy5hbHBoYTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IFJlZmxlY3Rpb25GaWx0ZXIgfTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FBUUE7QUFDQTs7Ozs7OztBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUF4R0E7QUFDQTs7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-reflection/lib/filter-reflection.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-rgb-split/lib/filter-rgb-split.esm.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@pixi/filter-rgb-split/lib/filter-rgb-split.esm.js ***!
  \*************************************************************************/
/*! exports provided: RGBSplitFilter */
/*! exports used: RGBSplitFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return RGBSplitFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/*!\n * @pixi/filter-rgb-split - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-rgb-split is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\nuniform vec2 red;\\nuniform vec2 green;\\nuniform vec2 blue;\\n\\nvoid main(void)\\n{\\n   gl_FragColor.r = texture2D(uSampler, vTextureCoord + red/filterArea.xy).r;\\n   gl_FragColor.g = texture2D(uSampler, vTextureCoord + green/filterArea.xy).g;\\n   gl_FragColor.b = texture2D(uSampler, vTextureCoord + blue/filterArea.xy).b;\\n   gl_FragColor.a = texture2D(uSampler, vTextureCoord).a;\\n}\\n\";\n\n/**\n * An RGB Split Filter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/rgb.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-rgb-split|@pixi/filter-rgb-split}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {PIXI.Point} [red=[-10,0]] Red channel offset\n * @param {PIXI.Point} [green=[0, 10]] Green channel offset\n * @param {PIXI.Point} [blue=[0, 0]] Blue channel offset\n */\nvar RGBSplitFilter = /*@__PURE__*/(function (Filter) {\n    function RGBSplitFilter(red, green, blue) {\n        if ( red === void 0 ) red = [-10, 0];\n        if ( green === void 0 ) green = [0, 10];\n        if ( blue === void 0 ) blue = [0, 0];\n\n        Filter.call(this, vertex, fragment);\n        this.red = red;\n        this.green = green;\n        this.blue = blue;\n    }\n\n    if ( Filter ) RGBSplitFilter.__proto__ = Filter;\n    RGBSplitFilter.prototype = Object.create( Filter && Filter.prototype );\n    RGBSplitFilter.prototype.constructor = RGBSplitFilter;\n\n    var prototypeAccessors = { red: { configurable: true },green: { configurable: true },blue: { configurable: true } };\n\n    /**\n     * Red channel offset.\n     *\n     * @member {PIXI.Point}\n     */\n    prototypeAccessors.red.get = function () {\n        return this.uniforms.red;\n    };\n    prototypeAccessors.red.set = function (value) {\n        this.uniforms.red = value;\n    };\n\n    /**\n     * Green channel offset.\n     *\n     * @member {PIXI.Point}\n     */\n    prototypeAccessors.green.get = function () {\n        return this.uniforms.green;\n    };\n    prototypeAccessors.green.set = function (value) {\n        this.uniforms.green = value;\n    };\n\n    /**\n     * Blue offset.\n     *\n     * @member {PIXI.Point}\n     */\n    prototypeAccessors.blue.get = function () {\n        return this.uniforms.blue;\n    };\n    prototypeAccessors.blue.set = function (value) {\n        this.uniforms.blue = value;\n    };\n\n    Object.defineProperties( RGBSplitFilter.prototype, prototypeAccessors );\n\n    return RGBSplitFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLXJnYi1zcGxpdC9saWIvZmlsdGVyLXJnYi1zcGxpdC5lc20uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL1JHQlNwbGl0RmlsdGVyLmpzP2YwNWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHt2ZXJ0ZXh9IGZyb20gJ0B0b29scy9mcmFnbWVudHMnO1xuaW1wb3J0IGZyYWdtZW50IGZyb20gJy4vcmdiLXNwbGl0LmZyYWcnO1xuaW1wb3J0IHtGaWx0ZXJ9IGZyb20gJ0BwaXhpL2NvcmUnO1xuXG4vKipcbiAqIEFuIFJHQiBTcGxpdCBGaWx0ZXIuPGJyPlxuICogIVtvcmlnaW5hbF0oLi4vdG9vbHMvc2NyZWVuc2hvdHMvZGlzdC9vcmlnaW5hbC5wbmcpIVtmaWx0ZXJdKC4uL3Rvb2xzL3NjcmVlbnNob3RzL2Rpc3QvcmdiLnBuZylcbiAqXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIFBJWEkuRmlsdGVyXG4gKiBAbWVtYmVyb2YgUElYSS5maWx0ZXJzXG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9AcGl4aS9maWx0ZXItcmdiLXNwbGl0fEBwaXhpL2ZpbHRlci1yZ2Itc3BsaXR9XG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9waXhpLWZpbHRlcnN8cGl4aS1maWx0ZXJzfVxuICogQHBhcmFtIHtQSVhJLlBvaW50fSBbcmVkPVstMTAsMF1dIFJlZCBjaGFubmVsIG9mZnNldFxuICogQHBhcmFtIHtQSVhJLlBvaW50fSBbZ3JlZW49WzAsIDEwXV0gR3JlZW4gY2hhbm5lbCBvZmZzZXRcbiAqIEBwYXJhbSB7UElYSS5Qb2ludH0gW2JsdWU9WzAsIDBdXSBCbHVlIGNoYW5uZWwgb2Zmc2V0XG4gKi9cbmNsYXNzIFJHQlNwbGl0RmlsdGVyIGV4dGVuZHMgRmlsdGVyIHtcbiAgICBjb25zdHJ1Y3RvcihyZWQgPSBbLTEwLCAwXSwgZ3JlZW4gPSBbMCwgMTBdLCBibHVlID0gWzAsIDBdKSB7XG4gICAgICAgIHN1cGVyKHZlcnRleCwgZnJhZ21lbnQpO1xuICAgICAgICB0aGlzLnJlZCA9IHJlZDtcbiAgICAgICAgdGhpcy5ncmVlbiA9IGdyZWVuO1xuICAgICAgICB0aGlzLmJsdWUgPSBibHVlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlZCBjaGFubmVsIG9mZnNldC5cbiAgICAgKlxuICAgICAqIEBtZW1iZXIge1BJWEkuUG9pbnR9XG4gICAgICovXG4gICAgZ2V0IHJlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudW5pZm9ybXMucmVkO1xuICAgIH1cbiAgICBzZXQgcmVkKHZhbHVlKSB7XG4gICAgICAgIHRoaXMudW5pZm9ybXMucmVkID0gdmFsdWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR3JlZW4gY2hhbm5lbCBvZmZzZXQuXG4gICAgICpcbiAgICAgKiBAbWVtYmVyIHtQSVhJLlBvaW50fVxuICAgICAqL1xuICAgIGdldCBncmVlbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudW5pZm9ybXMuZ3JlZW47XG4gICAgfVxuICAgIHNldCBncmVlbih2YWx1ZSkge1xuICAgICAgICB0aGlzLnVuaWZvcm1zLmdyZWVuID0gdmFsdWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQmx1ZSBvZmZzZXQuXG4gICAgICpcbiAgICAgKiBAbWVtYmVyIHtQSVhJLlBvaW50fVxuICAgICAqL1xuICAgIGdldCBibHVlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy51bmlmb3Jtcy5ibHVlO1xuICAgIH1cbiAgICBzZXQgYmx1ZSh2YWx1ZSkge1xuICAgICAgICB0aGlzLnVuaWZvcm1zLmJsdWUgPSB2YWx1ZTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IFJHQlNwbGl0RmlsdGVyIH07XG5cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUEzQ0E7QUFDQTs7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-rgb-split/lib/filter-rgb-split.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-shockwave/lib/filter-shockwave.esm.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@pixi/filter-shockwave/lib/filter-shockwave.esm.js ***!
  \*************************************************************************/
/*! exports provided: ShockwaveFilter */
/*! exports used: ShockwaveFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ShockwaveFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/*!\n * @pixi/filter-shockwave - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-shockwave is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\n\\nuniform vec2 center;\\n\\nuniform float amplitude;\\nuniform float wavelength;\\n// uniform float power;\\nuniform float brightness;\\nuniform float speed;\\nuniform float radius;\\n\\nuniform float time;\\n\\nconst float PI = 3.14159;\\n\\nvoid main()\\n{\\n    float halfWavelength = wavelength * 0.5 / filterArea.x;\\n    float maxRadius = radius / filterArea.x;\\n    float currentRadius = time * speed / filterArea.x;\\n\\n    float fade = 1.0;\\n\\n    if (maxRadius > 0.0) {\\n        if (currentRadius > maxRadius) {\\n            gl_FragColor = texture2D(uSampler, vTextureCoord);\\n            return;\\n        }\\n        fade = 1.0 - pow(currentRadius / maxRadius, 2.0);\\n    }\\n\\n    vec2 dir = vec2(vTextureCoord - center / filterArea.xy);\\n    dir.y *= filterArea.y / filterArea.x;\\n    float dist = length(dir);\\n\\n    if (dist <= 0.0 || dist < currentRadius - halfWavelength || dist > currentRadius + halfWavelength) {\\n        gl_FragColor = texture2D(uSampler, vTextureCoord);\\n        return;\\n    }\\n\\n    vec2 diffUV = normalize(dir);\\n\\n    float diff = (dist - currentRadius) / halfWavelength;\\n\\n    float p = 1.0 - pow(abs(diff), 2.0);\\n\\n    // float powDiff = diff * pow(p, 2.0) * ( amplitude * fade );\\n    float powDiff = 1.25 * sin(diff * PI) * p * ( amplitude * fade );\\n\\n    vec2 offset = diffUV * powDiff / filterArea.xy;\\n\\n    // Do clamp :\\n    vec2 coord = vTextureCoord + offset;\\n    vec2 clampedCoord = clamp(coord, filterClamp.xy, filterClamp.zw);\\n    vec4 color = texture2D(uSampler, clampedCoord);\\n    if (coord != clampedCoord) {\\n        color *= max(0.0, 1.0 - length(coord - clampedCoord));\\n    }\\n\\n    // No clamp :\\n    // gl_FragColor = texture2D(uSampler, vTextureCoord + offset);\\n\\n    color.rgb *= 1.0 + (brightness - 1.0) * p * fade;\\n\\n    gl_FragColor = color;\\n}\\n\";\n\n/**\n * The ShockwaveFilter class lets you apply a shockwave effect.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/shockwave.gif)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-shockwave|@pixi/filter-shockwave}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n *\n * @param {PIXI.Point|number[]} [center=[0.5, 0.5]] See `center` property.\n * @param {object} [options] - The optional parameters of shockwave filter.\n * @param {number} [options.amplitude=0.5] - See `amplitude`` property.\n * @param {number} [options.wavelength=1.0] - See `wavelength` property.\n * @param {number} [options.speed=500.0] - See `speed` property.\n * @param {number} [options.brightness=8] - See `brightness` property.\n * @param {number} [options.radius=4] - See `radius` property.\n * @param {number} [time=0] - See `time` property.\n */\nvar ShockwaveFilter = /*@__PURE__*/(function (Filter) {\n    function ShockwaveFilter(center, options, time) {\n        if ( center === void 0 ) center = [0.0, 0.0];\n        if ( options === void 0 ) options = {};\n        if ( time === void 0 ) time = 0;\n\n        Filter.call(this, vertex, fragment);\n\n        this.center = center;\n\n        if (Array.isArray(options)) {\n            // eslint-disable-next-line no-console\n            console.warn('Deprecated Warning: ShockwaveFilter params Array has been changed to options Object.');\n            options = {};\n        }\n\n        options = Object.assign({\n            amplitude: 30.0,\n            wavelength: 160.0,\n            brightness: 1.0,\n            speed: 500.0,\n            radius: -1.0,\n        }, options);\n\n        this.amplitude = options.amplitude;\n\n        this.wavelength = options.wavelength;\n\n        this.brightness = options.brightness;\n\n        this.speed = options.speed;\n\n        this.radius = options.radius;\n\n        /**\n         * Sets the elapsed time of the shockwave.\n         * It could control the current size of shockwave.\n         *\n         * @member {number}\n         */\n        this.time = time;\n    }\n\n    if ( Filter ) ShockwaveFilter.__proto__ = Filter;\n    ShockwaveFilter.prototype = Object.create( Filter && Filter.prototype );\n    ShockwaveFilter.prototype.constructor = ShockwaveFilter;\n\n    var prototypeAccessors = { center: { configurable: true },amplitude: { configurable: true },wavelength: { configurable: true },brightness: { configurable: true },speed: { configurable: true },radius: { configurable: true } };\n\n    ShockwaveFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        /**\n         * There is no set/get of `time`, for performance.\n         * Because in the most real cases, `time` will be changed in ever game tick.\n         * Use set/get will take more function-call.\n         */\n        this.uniforms.time = this.time;\n\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * Sets the center of the shockwave in normalized screen coords. That is\n     * (0,0) is the top-left and (1,1) is the bottom right.\n     *\n     * @member {PIXI.Point|number[]}\n     */\n    prototypeAccessors.center.get = function () {\n        return this.uniforms.center;\n    };\n    prototypeAccessors.center.set = function (value) {\n        this.uniforms.center = value;\n    };\n\n    /**\n     * The amplitude of the shockwave.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.amplitude.get = function () {\n        return this.uniforms.amplitude;\n    };\n    prototypeAccessors.amplitude.set = function (value) {\n        this.uniforms.amplitude = value;\n    };\n\n    /**\n     * The wavelength of the shockwave.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.wavelength.get = function () {\n        return this.uniforms.wavelength;\n    };\n    prototypeAccessors.wavelength.set = function (value) {\n        this.uniforms.wavelength = value;\n    };\n\n    /**\n     * The brightness of the shockwave.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.brightness.get = function () {\n        return this.uniforms.brightness;\n    };\n    prototypeAccessors.brightness.set = function (value) {\n        this.uniforms.brightness = value;\n    };\n\n    /**\n     * The speed about the shockwave ripples out.\n     * The unit is `pixel/second`\n     *\n     * @member {number}\n     */\n    prototypeAccessors.speed.get = function () {\n        return this.uniforms.speed;\n    };\n    prototypeAccessors.speed.set = function (value) {\n        this.uniforms.speed = value;\n    };\n\n    /**\n     * The maximum radius of shockwave.\n     * `< 0.0` means it's infinity.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.radius.get = function () {\n        return this.uniforms.radius;\n    };\n    prototypeAccessors.radius.set = function (value) {\n        this.uniforms.radius = value;\n    };\n\n    Object.defineProperties( ShockwaveFilter.prototype, prototypeAccessors );\n\n    return ShockwaveFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLXNob2Nrd2F2ZS9saWIvZmlsdGVyLXNob2Nrd2F2ZS5lc20uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL1Nob2Nrd2F2ZUZpbHRlci5qcz8xOWQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dmVydGV4fSBmcm9tICdAdG9vbHMvZnJhZ21lbnRzJztcbmltcG9ydCBmcmFnbWVudCBmcm9tICcuL3Nob2Nrd2F2ZS5mcmFnJztcbmltcG9ydCB7RmlsdGVyfSBmcm9tICdAcGl4aS9jb3JlJztcblxuLyoqXG4gKiBUaGUgU2hvY2t3YXZlRmlsdGVyIGNsYXNzIGxldHMgeW91IGFwcGx5IGEgc2hvY2t3YXZlIGVmZmVjdC48YnI+XG4gKiAhW29yaWdpbmFsXSguLi90b29scy9zY3JlZW5zaG90cy9kaXN0L29yaWdpbmFsLnBuZykhW2ZpbHRlcl0oLi4vdG9vbHMvc2NyZWVuc2hvdHMvZGlzdC9zaG9ja3dhdmUuZ2lmKVxuICpcbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgUElYSS5GaWx0ZXJcbiAqIEBtZW1iZXJvZiBQSVhJLmZpbHRlcnNcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL0BwaXhpL2ZpbHRlci1zaG9ja3dhdmV8QHBpeGkvZmlsdGVyLXNob2Nrd2F2ZX1cbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL3BpeGktZmlsdGVyc3xwaXhpLWZpbHRlcnN9XG4gKlxuICogQHBhcmFtIHtQSVhJLlBvaW50fG51bWJlcltdfSBbY2VudGVyPVswLjUsIDAuNV1dIFNlZSBgY2VudGVyYCBwcm9wZXJ0eS5cbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc10gLSBUaGUgb3B0aW9uYWwgcGFyYW1ldGVycyBvZiBzaG9ja3dhdmUgZmlsdGVyLlxuICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLmFtcGxpdHVkZT0wLjVdIC0gU2VlIGBhbXBsaXR1ZGVgYCBwcm9wZXJ0eS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy53YXZlbGVuZ3RoPTEuMF0gLSBTZWUgYHdhdmVsZW5ndGhgIHByb3BlcnR5LlxuICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLnNwZWVkPTUwMC4wXSAtIFNlZSBgc3BlZWRgIHByb3BlcnR5LlxuICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLmJyaWdodG5lc3M9OF0gLSBTZWUgYGJyaWdodG5lc3NgIHByb3BlcnR5LlxuICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLnJhZGl1cz00XSAtIFNlZSBgcmFkaXVzYCBwcm9wZXJ0eS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbdGltZT0wXSAtIFNlZSBgdGltZWAgcHJvcGVydHkuXG4gKi9cbmNsYXNzIFNob2Nrd2F2ZUZpbHRlciBleHRlbmRzIEZpbHRlciB7XG5cbiAgICBjb25zdHJ1Y3RvcihjZW50ZXIgPSBbMC4wLCAwLjBdLCBvcHRpb25zID0ge30sIHRpbWUgPSAwKSB7XG4gICAgICAgIHN1cGVyKHZlcnRleCwgZnJhZ21lbnQpO1xuXG4gICAgICAgIHRoaXMuY2VudGVyID0gY2VudGVyO1xuXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KG9wdGlvbnMpKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICAgICAgY29uc29sZS53YXJuKCdEZXByZWNhdGVkIFdhcm5pbmc6IFNob2Nrd2F2ZUZpbHRlciBwYXJhbXMgQXJyYXkgaGFzIGJlZW4gY2hhbmdlZCB0byBvcHRpb25zIE9iamVjdC4nKTtcbiAgICAgICAgICAgIG9wdGlvbnMgPSB7fTtcbiAgICAgICAgfVxuXG4gICAgICAgIG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgICAgIGFtcGxpdHVkZTogMzAuMCxcbiAgICAgICAgICAgIHdhdmVsZW5ndGg6IDE2MC4wLFxuICAgICAgICAgICAgYnJpZ2h0bmVzczogMS4wLFxuICAgICAgICAgICAgc3BlZWQ6IDUwMC4wLFxuICAgICAgICAgICAgcmFkaXVzOiAtMS4wLFxuICAgICAgICB9LCBvcHRpb25zKTtcblxuICAgICAgICB0aGlzLmFtcGxpdHVkZSA9IG9wdGlvbnMuYW1wbGl0dWRlO1xuXG4gICAgICAgIHRoaXMud2F2ZWxlbmd0aCA9IG9wdGlvbnMud2F2ZWxlbmd0aDtcblxuICAgICAgICB0aGlzLmJyaWdodG5lc3MgPSBvcHRpb25zLmJyaWdodG5lc3M7XG5cbiAgICAgICAgdGhpcy5zcGVlZCA9IG9wdGlvbnMuc3BlZWQ7XG5cbiAgICAgICAgdGhpcy5yYWRpdXMgPSBvcHRpb25zLnJhZGl1cztcblxuICAgICAgICAvKipcbiAgICAgICAgICogU2V0cyB0aGUgZWxhcHNlZCB0aW1lIG9mIHRoZSBzaG9ja3dhdmUuXG4gICAgICAgICAqIEl0IGNvdWxkIGNvbnRyb2wgdGhlIGN1cnJlbnQgc2l6ZSBvZiBzaG9ja3dhdmUuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMudGltZSA9IHRpbWU7XG4gICAgfVxuXG4gICAgYXBwbHkoZmlsdGVyTWFuYWdlciwgaW5wdXQsIG91dHB1dCwgY2xlYXIpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZXJlIGlzIG5vIHNldC9nZXQgb2YgYHRpbWVgLCBmb3IgcGVyZm9ybWFuY2UuXG4gICAgICAgICAqIEJlY2F1c2UgaW4gdGhlIG1vc3QgcmVhbCBjYXNlcywgYHRpbWVgIHdpbGwgYmUgY2hhbmdlZCBpbiBldmVyIGdhbWUgdGljay5cbiAgICAgICAgICogVXNlIHNldC9nZXQgd2lsbCB0YWtlIG1vcmUgZnVuY3Rpb24tY2FsbC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMudW5pZm9ybXMudGltZSA9IHRoaXMudGltZTtcblxuICAgICAgICBmaWx0ZXJNYW5hZ2VyLmFwcGx5RmlsdGVyKHRoaXMsIGlucHV0LCBvdXRwdXQsIGNsZWFyKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBjZW50ZXIgb2YgdGhlIHNob2Nrd2F2ZSBpbiBub3JtYWxpemVkIHNjcmVlbiBjb29yZHMuIFRoYXQgaXNcbiAgICAgKiAoMCwwKSBpcyB0aGUgdG9wLWxlZnQgYW5kICgxLDEpIGlzIHRoZSBib3R0b20gcmlnaHQuXG4gICAgICpcbiAgICAgKiBAbWVtYmVyIHtQSVhJLlBvaW50fG51bWJlcltdfVxuICAgICAqL1xuICAgIGdldCBjZW50ZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnVuaWZvcm1zLmNlbnRlcjtcbiAgICB9XG4gICAgc2V0IGNlbnRlcih2YWx1ZSkge1xuICAgICAgICB0aGlzLnVuaWZvcm1zLmNlbnRlciA9IHZhbHVlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBhbXBsaXR1ZGUgb2YgdGhlIHNob2Nrd2F2ZS5cbiAgICAgKlxuICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgKi9cbiAgICBnZXQgYW1wbGl0dWRlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy51bmlmb3Jtcy5hbXBsaXR1ZGU7XG4gICAgfVxuICAgIHNldCBhbXBsaXR1ZGUodmFsdWUpIHtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5hbXBsaXR1ZGUgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgd2F2ZWxlbmd0aCBvZiB0aGUgc2hvY2t3YXZlLlxuICAgICAqXG4gICAgICogQG1lbWJlciB7bnVtYmVyfVxuICAgICAqL1xuICAgIGdldCB3YXZlbGVuZ3RoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy51bmlmb3Jtcy53YXZlbGVuZ3RoO1xuICAgIH1cbiAgICBzZXQgd2F2ZWxlbmd0aCh2YWx1ZSkge1xuICAgICAgICB0aGlzLnVuaWZvcm1zLndhdmVsZW5ndGggPSB2YWx1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgYnJpZ2h0bmVzcyBvZiB0aGUgc2hvY2t3YXZlLlxuICAgICAqXG4gICAgICogQG1lbWJlciB7bnVtYmVyfVxuICAgICAqL1xuICAgIGdldCBicmlnaHRuZXNzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy51bmlmb3Jtcy5icmlnaHRuZXNzO1xuICAgIH1cbiAgICBzZXQgYnJpZ2h0bmVzcyh2YWx1ZSkge1xuICAgICAgICB0aGlzLnVuaWZvcm1zLmJyaWdodG5lc3MgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgc3BlZWQgYWJvdXQgdGhlIHNob2Nrd2F2ZSByaXBwbGVzIG91dC5cbiAgICAgKiBUaGUgdW5pdCBpcyBgcGl4ZWwvc2Vjb25kYFxuICAgICAqXG4gICAgICogQG1lbWJlciB7bnVtYmVyfVxuICAgICAqL1xuICAgIGdldCBzcGVlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudW5pZm9ybXMuc3BlZWQ7XG4gICAgfVxuICAgIHNldCBzcGVlZCh2YWx1ZSkge1xuICAgICAgICB0aGlzLnVuaWZvcm1zLnNwZWVkID0gdmFsdWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIG1heGltdW0gcmFkaXVzIG9mIHNob2Nrd2F2ZS5cbiAgICAgKiBgPCAwLjBgIG1lYW5zIGl0J3MgaW5maW5pdHkuXG4gICAgICpcbiAgICAgKiBAbWVtYmVyIHtudW1iZXJ9XG4gICAgICovXG4gICAgZ2V0IHJhZGl1cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudW5pZm9ybXMucmFkaXVzO1xuICAgIH1cbiAgICBzZXQgcmFkaXVzKHZhbHVlKSB7XG4gICAgICAgIHRoaXMudW5pZm9ybXMucmFkaXVzID0gdmFsdWU7XG4gICAgfVxufVxuXG5leHBvcnQgeyBTaG9ja3dhdmVGaWx0ZXIgfTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVCQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBT0E7Ozs7Ozs7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUE3SEE7QUFDQTs7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-shockwave/lib/filter-shockwave.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-simple-lightmap/lib/filter-simple-lightmap.esm.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@pixi/filter-simple-lightmap/lib/filter-simple-lightmap.esm.js ***!
  \*************************************************************************************/
/*! exports provided: SimpleLightmapFilter */
/*! exports used: SimpleLightmapFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SimpleLightmapFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/* harmony import */ var _pixi_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixi/utils */ \"./node_modules/@pixi/utils/lib/utils.es.js\");\n/*!\n * @pixi/filter-simple-lightmap - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-simple-lightmap is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform sampler2D uLightmap;\\nuniform vec4 filterArea;\\nuniform vec2 dimensions;\\nuniform vec4 ambientColor;\\nvoid main() {\\n    vec4 diffuseColor = texture2D(uSampler, vTextureCoord);\\n    vec2 lightCoord = (vTextureCoord * filterArea.xy) / dimensions;\\n    vec4 light = texture2D(uLightmap, lightCoord);\\n    vec3 ambient = ambientColor.rgb * ambientColor.a;\\n    vec3 intensity = ambient + light.rgb;\\n    vec3 finalColor = diffuseColor.rgb * intensity;\\n    gl_FragColor = vec4(finalColor, diffuseColor.a);\\n}\\n\";\n\n/**\n* SimpleLightmap, originally by Oza94\n* http://www.html5gamedevs.com/topic/20027-pixijs-simple-lightmapping/\n* http://codepen.io/Oza94/pen/EPoRxj\n*\n* You have to specify filterArea, or suffer consequences.\n* You may have to use it with `filter.dontFit = true`,\n*  until we rewrite this using same approach as for DisplacementFilter.\n*\n* ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/simple-lightmap.png)\n* @class\n* @extends PIXI.Filter\n* @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-simple-lightmap|@pixi/filter-simple-lightmap}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n* @param {PIXI.Texture} texture a texture where your lightmap is rendered\n* @param {Array<number>|number} [color=0x000000] An RGBA array of the ambient color\n* @param {number} [alpha=1] Default alpha set independent of color (if it's a number, not array).\n*\n* @example\n*  displayObject.filters = [new SimpleLightmapFilter(texture, 0x666666)];\n*/\nvar SimpleLightmapFilter = /*@__PURE__*/(function (Filter) {\n    function SimpleLightmapFilter(texture, color, alpha) {\n        if ( color === void 0 ) color = 0x000000;\n        if ( alpha === void 0 ) alpha = 1;\n\n        Filter.call(this, vertex, fragment);\n        this.uniforms.dimensions = new Float32Array(2);\n        this.uniforms.ambientColor = new Float32Array([0, 0, 0, alpha]);\n        this.texture = texture;\n        this.color = color;\n    }\n\n    if ( Filter ) SimpleLightmapFilter.__proto__ = Filter;\n    SimpleLightmapFilter.prototype = Object.create( Filter && Filter.prototype );\n    SimpleLightmapFilter.prototype.constructor = SimpleLightmapFilter;\n\n    var prototypeAccessors = { texture: { configurable: true },color: { configurable: true },alpha: { configurable: true } };\n\n    /**\n     * Applies the filter.\n     * @private\n     * @param {PIXI.FilterManager} filterManager - The manager.\n     * @param {PIXI.RenderTarget} input - The input target.\n     * @param {PIXI.RenderTarget} output - The output target.\n     */\n    SimpleLightmapFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.dimensions[0] = input.filterFrame.width;\n        this.uniforms.dimensions[1] = input.filterFrame.height;\n\n        // draw the filter...\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n\n    /**\n     * a texture where your lightmap is rendered\n     * @member {PIXI.Texture}\n     */\n    prototypeAccessors.texture.get = function () {\n        return this.uniforms.uLightmap;\n    };\n    prototypeAccessors.texture.set = function (value) {\n        this.uniforms.uLightmap = value;\n    };\n\n    /**\n     * An RGBA array of the ambient color or a hex color without alpha\n     * @member {Array<number>|number}\n     */\n    prototypeAccessors.color.set = function (value) {\n        var arr = this.uniforms.ambientColor;\n        if (typeof value === 'number') {\n            Object(_pixi_utils__WEBPACK_IMPORTED_MODULE_1__[\"hex2rgb\"])(value, arr);\n            this._color = value;\n        }\n        else {\n            arr[0] = value[0];\n            arr[1] = value[1];\n            arr[2] = value[2];\n            arr[3] = value[3];\n            this._color = Object(_pixi_utils__WEBPACK_IMPORTED_MODULE_1__[\"rgb2hex\"])(arr);\n        }\n    };\n    prototypeAccessors.color.get = function () {\n        return this._color;\n    };\n\n    /**\n     * When setting `color` as hex, this can be used to set alpha independently.\n     * @member {number}\n     */\n    prototypeAccessors.alpha.get = function () {\n        return this.uniforms.ambientColor[3];\n    };\n    prototypeAccessors.alpha.set = function (value) {\n        this.uniforms.ambientColor[3] = value;\n    };\n\n    Object.defineProperties( SimpleLightmapFilter.prototype, prototypeAccessors );\n\n    return SimpleLightmapFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLXNpbXBsZS1saWdodG1hcC9saWIvZmlsdGVyLXNpbXBsZS1saWdodG1hcC5lc20uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL1NpbXBsZUxpZ2h0bWFwRmlsdGVyLmpzPzVmNzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHt2ZXJ0ZXh9IGZyb20gJ0B0b29scy9mcmFnbWVudHMnO1xuaW1wb3J0IGZyYWdtZW50IGZyb20gJy4vc2ltcGxlTGlnaHRtYXAuZnJhZyc7XG5pbXBvcnQge0ZpbHRlcn0gZnJvbSAnQHBpeGkvY29yZSc7XG5pbXBvcnQge2hleDJyZ2IsIHJnYjJoZXh9IGZyb20gJ0BwaXhpL3V0aWxzJztcbi8qKlxuKiBTaW1wbGVMaWdodG1hcCwgb3JpZ2luYWxseSBieSBPemE5NFxuKiBodHRwOi8vd3d3Lmh0bWw1Z2FtZWRldnMuY29tL3RvcGljLzIwMDI3LXBpeGlqcy1zaW1wbGUtbGlnaHRtYXBwaW5nL1xuKiBodHRwOi8vY29kZXBlbi5pby9PemE5NC9wZW4vRVBvUnhqXG4qXG4qIFlvdSBoYXZlIHRvIHNwZWNpZnkgZmlsdGVyQXJlYSwgb3Igc3VmZmVyIGNvbnNlcXVlbmNlcy5cbiogWW91IG1heSBoYXZlIHRvIHVzZSBpdCB3aXRoIGBmaWx0ZXIuZG9udEZpdCA9IHRydWVgLFxuKiAgdW50aWwgd2UgcmV3cml0ZSB0aGlzIHVzaW5nIHNhbWUgYXBwcm9hY2ggYXMgZm9yIERpc3BsYWNlbWVudEZpbHRlci5cbipcbiogIVtvcmlnaW5hbF0oLi4vdG9vbHMvc2NyZWVuc2hvdHMvZGlzdC9vcmlnaW5hbC5wbmcpIVtmaWx0ZXJdKC4uL3Rvb2xzL3NjcmVlbnNob3RzL2Rpc3Qvc2ltcGxlLWxpZ2h0bWFwLnBuZylcbiogQGNsYXNzXG4qIEBleHRlbmRzIFBJWEkuRmlsdGVyXG4qIEBtZW1iZXJvZiBQSVhJLmZpbHRlcnNcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL0BwaXhpL2ZpbHRlci1zaW1wbGUtbGlnaHRtYXB8QHBpeGkvZmlsdGVyLXNpbXBsZS1saWdodG1hcH1cbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL3BpeGktZmlsdGVyc3xwaXhpLWZpbHRlcnN9XG4qIEBwYXJhbSB7UElYSS5UZXh0dXJlfSB0ZXh0dXJlIGEgdGV4dHVyZSB3aGVyZSB5b3VyIGxpZ2h0bWFwIGlzIHJlbmRlcmVkXG4qIEBwYXJhbSB7QXJyYXk8bnVtYmVyPnxudW1iZXJ9IFtjb2xvcj0weDAwMDAwMF0gQW4gUkdCQSBhcnJheSBvZiB0aGUgYW1iaWVudCBjb2xvclxuKiBAcGFyYW0ge251bWJlcn0gW2FscGhhPTFdIERlZmF1bHQgYWxwaGEgc2V0IGluZGVwZW5kZW50IG9mIGNvbG9yIChpZiBpdCdzIGEgbnVtYmVyLCBub3QgYXJyYXkpLlxuKlxuKiBAZXhhbXBsZVxuKiAgZGlzcGxheU9iamVjdC5maWx0ZXJzID0gW25ldyBTaW1wbGVMaWdodG1hcEZpbHRlcih0ZXh0dXJlLCAweDY2NjY2NildO1xuKi9cbmNsYXNzIFNpbXBsZUxpZ2h0bWFwRmlsdGVyIGV4dGVuZHMgRmlsdGVyIHtcblxuICAgIGNvbnN0cnVjdG9yKHRleHR1cmUsIGNvbG9yID0gMHgwMDAwMDAsIGFscGhhID0gMSkge1xuICAgICAgICBzdXBlcih2ZXJ0ZXgsIGZyYWdtZW50KTtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5kaW1lbnNpb25zID0gbmV3IEZsb2F0MzJBcnJheSgyKTtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5hbWJpZW50Q29sb3IgPSBuZXcgRmxvYXQzMkFycmF5KFswLCAwLCAwLCBhbHBoYV0pO1xuICAgICAgICB0aGlzLnRleHR1cmUgPSB0ZXh0dXJlO1xuICAgICAgICB0aGlzLmNvbG9yID0gY29sb3I7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQXBwbGllcyB0aGUgZmlsdGVyLlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHtQSVhJLkZpbHRlck1hbmFnZXJ9IGZpbHRlck1hbmFnZXIgLSBUaGUgbWFuYWdlci5cbiAgICAgKiBAcGFyYW0ge1BJWEkuUmVuZGVyVGFyZ2V0fSBpbnB1dCAtIFRoZSBpbnB1dCB0YXJnZXQuXG4gICAgICogQHBhcmFtIHtQSVhJLlJlbmRlclRhcmdldH0gb3V0cHV0IC0gVGhlIG91dHB1dCB0YXJnZXQuXG4gICAgICovXG4gICAgYXBwbHkoZmlsdGVyTWFuYWdlciwgaW5wdXQsIG91dHB1dCwgY2xlYXIpIHtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5kaW1lbnNpb25zWzBdID0gaW5wdXQuZmlsdGVyRnJhbWUud2lkdGg7XG4gICAgICAgIHRoaXMudW5pZm9ybXMuZGltZW5zaW9uc1sxXSA9IGlucHV0LmZpbHRlckZyYW1lLmhlaWdodDtcblxuICAgICAgICAvLyBkcmF3IHRoZSBmaWx0ZXIuLi5cbiAgICAgICAgZmlsdGVyTWFuYWdlci5hcHBseUZpbHRlcih0aGlzLCBpbnB1dCwgb3V0cHV0LCBjbGVhcik7XG4gICAgfVxuXG5cbiAgICAvKipcbiAgICAgKiBhIHRleHR1cmUgd2hlcmUgeW91ciBsaWdodG1hcCBpcyByZW5kZXJlZFxuICAgICAqIEBtZW1iZXIge1BJWEkuVGV4dHVyZX1cbiAgICAgKi9cbiAgICBnZXQgdGV4dHVyZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudW5pZm9ybXMudUxpZ2h0bWFwO1xuICAgIH1cbiAgICBzZXQgdGV4dHVyZSh2YWx1ZSkge1xuICAgICAgICB0aGlzLnVuaWZvcm1zLnVMaWdodG1hcCA9IHZhbHVlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFuIFJHQkEgYXJyYXkgb2YgdGhlIGFtYmllbnQgY29sb3Igb3IgYSBoZXggY29sb3Igd2l0aG91dCBhbHBoYVxuICAgICAqIEBtZW1iZXIge0FycmF5PG51bWJlcj58bnVtYmVyfVxuICAgICAqL1xuICAgIHNldCBjb2xvcih2YWx1ZSkge1xuICAgICAgICBjb25zdCBhcnIgPSB0aGlzLnVuaWZvcm1zLmFtYmllbnRDb2xvcjtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIGhleDJyZ2IodmFsdWUsIGFycik7XG4gICAgICAgICAgICB0aGlzLl9jb2xvciA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgYXJyWzBdID0gdmFsdWVbMF07XG4gICAgICAgICAgICBhcnJbMV0gPSB2YWx1ZVsxXTtcbiAgICAgICAgICAgIGFyclsyXSA9IHZhbHVlWzJdO1xuICAgICAgICAgICAgYXJyWzNdID0gdmFsdWVbM107XG4gICAgICAgICAgICB0aGlzLl9jb2xvciA9IHJnYjJoZXgoYXJyKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgY29sb3IoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jb2xvcjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBXaGVuIHNldHRpbmcgYGNvbG9yYCBhcyBoZXgsIHRoaXMgY2FuIGJlIHVzZWQgdG8gc2V0IGFscGhhIGluZGVwZW5kZW50bHkuXG4gICAgICogQG1lbWJlciB7bnVtYmVyfVxuICAgICAqL1xuICAgIGdldCBhbHBoYSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudW5pZm9ybXMuYW1iaWVudENvbG9yWzNdO1xuICAgIH1cbiAgICBzZXQgYWxwaGEodmFsdWUpIHtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5hbWJpZW50Q29sb3JbM10gPSB2YWx1ZTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IFNpbXBsZUxpZ2h0bWFwRmlsdGVyIH07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTBCQTtBQUVBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQUNBO0FBQ0E7Ozs7Ozs7O0FBUUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBckVBO0FBQ0E7OyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-simple-lightmap/lib/filter-simple-lightmap.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-tilt-shift/lib/filter-tilt-shift.esm.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@pixi/filter-tilt-shift/lib/filter-tilt-shift.esm.js ***!
  \***************************************************************************/
/*! exports provided: TiltShiftAxisFilter, TiltShiftFilter, TiltShiftXFilter, TiltShiftYFilter */
/*! exports used: TiltShiftAxisFilter, TiltShiftFilter, TiltShiftXFilter, TiltShiftYFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return TiltShiftAxisFilter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return TiltShiftFilter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return TiltShiftXFilter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return TiltShiftYFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/* harmony import */ var _pixi_math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixi/math */ \"./node_modules/@pixi/math/lib/math.es.js\");\n/*!\n * @pixi/filter-tilt-shift - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-tilt-shift is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform float blur;\\nuniform float gradientBlur;\\nuniform vec2 start;\\nuniform vec2 end;\\nuniform vec2 delta;\\nuniform vec2 texSize;\\n\\nfloat random(vec3 scale, float seed)\\n{\\n    return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\\n}\\n\\nvoid main(void)\\n{\\n    vec4 color = vec4(0.0);\\n    float total = 0.0;\\n\\n    float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\\n    vec2 normal = normalize(vec2(start.y - end.y, end.x - start.x));\\n    float radius = smoothstep(0.0, 1.0, abs(dot(vTextureCoord * texSize - start, normal)) / gradientBlur) * blur;\\n\\n    for (float t = -30.0; t <= 30.0; t++)\\n    {\\n        float percent = (t + offset - 0.5) / 30.0;\\n        float weight = 1.0 - abs(percent);\\n        vec4 sample = texture2D(uSampler, vTextureCoord + delta / texSize * percent * radius);\\n        sample.rgb *= sample.a;\\n        color += sample * weight;\\n        total += weight;\\n    }\\n\\n    color /= total;\\n    color.rgb /= color.a + 0.00001;\\n\\n    gl_FragColor = color;\\n}\\n\";\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShiftAxisFilter.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @private\n */\nvar TiltShiftAxisFilter = /*@__PURE__*/(function (Filter) {\n    function TiltShiftAxisFilter(blur, gradientBlur, start, end){\n        if ( blur === void 0 ) blur = 100;\n        if ( gradientBlur === void 0 ) gradientBlur = 600;\n        if ( start === void 0 ) start = null;\n        if ( end === void 0 ) end = null;\n\n        Filter.call(this, vertex, fragment);\n        this.uniforms.blur = blur;\n        this.uniforms.gradientBlur = gradientBlur;\n        this.uniforms.start = start || new _pixi_math__WEBPACK_IMPORTED_MODULE_1__[/* Point */ \"g\"](0, window.innerHeight / 2);\n        this.uniforms.end = end || new _pixi_math__WEBPACK_IMPORTED_MODULE_1__[/* Point */ \"g\"](600, window.innerHeight / 2);\n        this.uniforms.delta = new _pixi_math__WEBPACK_IMPORTED_MODULE_1__[/* Point */ \"g\"](30, 30);\n        this.uniforms.texSize = new _pixi_math__WEBPACK_IMPORTED_MODULE_1__[/* Point */ \"g\"](window.innerWidth, window.innerHeight);\n        this.updateDelta();\n    }\n\n    if ( Filter ) TiltShiftAxisFilter.__proto__ = Filter;\n    TiltShiftAxisFilter.prototype = Object.create( Filter && Filter.prototype );\n    TiltShiftAxisFilter.prototype.constructor = TiltShiftAxisFilter;\n\n    var prototypeAccessors = { blur: { configurable: true },gradientBlur: { configurable: true },start: { configurable: true },end: { configurable: true } };\n\n    /**\n     * Updates the filter delta values.\n     * This is overridden in the X and Y filters, does nothing for this class.\n     *\n     */\n    TiltShiftAxisFilter.prototype.updateDelta = function updateDelta () {\n        this.uniforms.delta.x = 0;\n        this.uniforms.delta.y = 0;\n    };\n\n    /**\n     * The strength of the blur.\n     *\n     * @member {number}\n     * @memberof PIXI.filters.TiltShiftAxisFilter#\n     */\n    prototypeAccessors.blur.get = function () {\n        return this.uniforms.blur;\n    };\n    prototypeAccessors.blur.set = function (value) {\n        this.uniforms.blur = value;\n    };\n\n    /**\n     * The strength of the gradient blur.\n     *\n     * @member {number}\n     * @memberof PIXI.filters.TiltShiftAxisFilter#\n     */\n    prototypeAccessors.gradientBlur.get = function () {\n        return this.uniforms.gradientBlur;\n    };\n    prototypeAccessors.gradientBlur.set = function (value) {\n        this.uniforms.gradientBlur = value;\n    };\n\n    /**\n     * The X value to start the effect at.\n     *\n     * @member {PIXI.Point}\n     * @memberof PIXI.filters.TiltShiftAxisFilter#\n     */\n    prototypeAccessors.start.get = function () {\n        return this.uniforms.start;\n    };\n    prototypeAccessors.start.set = function (value) {\n        this.uniforms.start = value;\n        this.updateDelta();\n    };\n\n    /**\n     * The X value to end the effect at.\n     *\n     * @member {PIXI.Point}\n     * @memberof PIXI.filters.TiltShiftAxisFilter#\n     */\n    prototypeAccessors.end.get = function () {\n        return this.uniforms.end;\n    };\n    prototypeAccessors.end.set = function (value) {\n        this.uniforms.end = value;\n        this.updateDelta();\n    };\n\n    Object.defineProperties( TiltShiftAxisFilter.prototype, prototypeAccessors );\n\n    return TiltShiftAxisFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShiftXFilter.\n *\n * @class\n * @extends PIXI.TiltShiftAxisFilter\n * @memberof PIXI.filters\n * @private\n */\nvar TiltShiftXFilter = /*@__PURE__*/(function (TiltShiftAxisFilter) {\n    function TiltShiftXFilter () {\n        TiltShiftAxisFilter.apply(this, arguments);\n    }\n\n    if ( TiltShiftAxisFilter ) TiltShiftXFilter.__proto__ = TiltShiftAxisFilter;\n    TiltShiftXFilter.prototype = Object.create( TiltShiftAxisFilter && TiltShiftAxisFilter.prototype );\n    TiltShiftXFilter.prototype.constructor = TiltShiftXFilter;\n\n    TiltShiftXFilter.prototype.updateDelta = function updateDelta () {\n        var dx = this.uniforms.end.x - this.uniforms.start.x;\n        var dy = this.uniforms.end.y - this.uniforms.start.y;\n        var d = Math.sqrt(dx * dx + dy * dy);\n        this.uniforms.delta.x = dx / d;\n        this.uniforms.delta.y = dy / d;\n    };\n\n    return TiltShiftXFilter;\n}(TiltShiftAxisFilter));\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShiftYFilter.\n *\n * @class\n * @extends PIXI.TiltShiftAxisFilter\n * @memberof PIXI.filters\n * @private\n */\nvar TiltShiftYFilter = /*@__PURE__*/(function (TiltShiftAxisFilter) {\n    function TiltShiftYFilter () {\n        TiltShiftAxisFilter.apply(this, arguments);\n    }\n\n    if ( TiltShiftAxisFilter ) TiltShiftYFilter.__proto__ = TiltShiftAxisFilter;\n    TiltShiftYFilter.prototype = Object.create( TiltShiftAxisFilter && TiltShiftAxisFilter.prototype );\n    TiltShiftYFilter.prototype.constructor = TiltShiftYFilter;\n\n    TiltShiftYFilter.prototype.updateDelta = function updateDelta () {\n        var dx = this.uniforms.end.x - this.uniforms.start.x;\n        var dy = this.uniforms.end.y - this.uniforms.start.y;\n        var d = Math.sqrt(dx * dx + dy * dy);\n        this.uniforms.delta.x = -dy / d;\n        this.uniforms.delta.y = dx / d;\n    };\n\n    return TiltShiftYFilter;\n}(TiltShiftAxisFilter));\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShift Filter. Manages the pass of both a TiltShiftXFilter and TiltShiftYFilter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/tilt-shift.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-tilt-shift|@pixi/filter-tilt-shift}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {number} [blur=100] The strength of the blur.\n * @param {number} [gradientBlur=600] The strength of the gradient blur.\n * @param {PIXI.Point} [start=null] The Y value to start the effect at.\n * @param {PIXI.Point} [end=null] The Y value to end the effect at.\n */\nvar TiltShiftFilter = /*@__PURE__*/(function (Filter) {\n    function TiltShiftFilter(blur, gradientBlur, start, end) {\n        if ( blur === void 0 ) blur = 100;\n        if ( gradientBlur === void 0 ) gradientBlur = 600;\n        if ( start === void 0 ) start = null;\n        if ( end === void 0 ) end = null;\n\n        Filter.call(this);\n        this.tiltShiftXFilter = new TiltShiftXFilter(blur, gradientBlur, start, end);\n        this.tiltShiftYFilter = new TiltShiftYFilter(blur, gradientBlur, start, end);\n    }\n\n    if ( Filter ) TiltShiftFilter.__proto__ = Filter;\n    TiltShiftFilter.prototype = Object.create( Filter && Filter.prototype );\n    TiltShiftFilter.prototype.constructor = TiltShiftFilter;\n\n    var prototypeAccessors = { blur: { configurable: true },gradientBlur: { configurable: true },start: { configurable: true },end: { configurable: true } };\n\n    TiltShiftFilter.prototype.apply = function apply (filterManager, input, output) {\n        var renderTarget = filterManager.getFilterTexture();\n        this.tiltShiftXFilter.apply(filterManager, input, renderTarget);\n        this.tiltShiftYFilter.apply(filterManager, renderTarget, output);\n        filterManager.returnFilterTexture(renderTarget);\n    };\n\n    /**\n     * The strength of the blur.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.blur.get = function () {\n        return this.tiltShiftXFilter.blur;\n    };\n    prototypeAccessors.blur.set = function (value) {\n        this.tiltShiftXFilter.blur = this.tiltShiftYFilter.blur = value;\n    };\n\n    /**\n     * The strength of the gradient blur.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.gradientBlur.get = function () {\n        return this.tiltShiftXFilter.gradientBlur;\n    };\n    prototypeAccessors.gradientBlur.set = function (value) {\n        this.tiltShiftXFilter.gradientBlur = this.tiltShiftYFilter.gradientBlur = value;\n    };\n\n    /**\n     * The Y value to start the effect at.\n     *\n     * @member {PIXI.Point}\n     */\n    prototypeAccessors.start.get = function () {\n        return this.tiltShiftXFilter.start;\n    };\n    prototypeAccessors.start.set = function (value) {\n        this.tiltShiftXFilter.start = this.tiltShiftYFilter.start = value;\n    };\n\n    /**\n     * The Y value to end the effect at.\n     *\n     * @member {PIXI.Point}\n     */\n    prototypeAccessors.end.get = function () {\n        return this.tiltShiftXFilter.end;\n    };\n    prototypeAccessors.end.set = function (value) {\n        this.tiltShiftXFilter.end = this.tiltShiftYFilter.end = value;\n    };\n\n    Object.defineProperties( TiltShiftFilter.prototype, prototypeAccessors );\n\n    return TiltShiftFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-tilt-shift/lib/filter-tilt-shift.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-twist/lib/filter-twist.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@pixi/filter-twist/lib/filter-twist.esm.js ***!
  \*****************************************************************/
/*! exports provided: TwistFilter */
/*! exports used: TwistFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return TwistFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/*!\n * @pixi/filter-twist - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-twist is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform float radius;\\nuniform float angle;\\nuniform vec2 offset;\\nuniform vec4 filterArea;\\n\\nvec2 mapCoord( vec2 coord )\\n{\\n    coord *= filterArea.xy;\\n    coord += filterArea.zw;\\n\\n    return coord;\\n}\\n\\nvec2 unmapCoord( vec2 coord )\\n{\\n    coord -= filterArea.zw;\\n    coord /= filterArea.xy;\\n\\n    return coord;\\n}\\n\\nvec2 twist(vec2 coord)\\n{\\n    coord -= offset;\\n\\n    float dist = length(coord);\\n\\n    if (dist < radius)\\n    {\\n        float ratioDist = (radius - dist) / radius;\\n        float angleMod = ratioDist * ratioDist * angle;\\n        float s = sin(angleMod);\\n        float c = cos(angleMod);\\n        coord = vec2(coord.x * c - coord.y * s, coord.x * s + coord.y * c);\\n    }\\n\\n    coord += offset;\\n\\n    return coord;\\n}\\n\\nvoid main(void)\\n{\\n\\n    vec2 coord = mapCoord(vTextureCoord);\\n\\n    coord = twist(coord);\\n\\n    coord = unmapCoord(coord);\\n\\n    gl_FragColor = texture2D(uSampler, coord );\\n\\n}\\n\";\n\n/**\n * This filter applies a twist effect making display objects appear twisted in the given direction.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/twist.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-twist|@pixi/filter-twist}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {number} [radius=200] The radius of the twist.\n * @param {number} [angle=4] The angle of the twist.\n * @param {number} [padding=20] Padding for filter area.\n */\nvar TwistFilter = /*@__PURE__*/(function (Filter) {\n    function TwistFilter(radius, angle, padding) {\n        if ( radius === void 0 ) radius = 200;\n        if ( angle === void 0 ) angle = 4;\n        if ( padding === void 0 ) padding = 20;\n\n        Filter.call(this, vertex, fragment);\n\n        this.radius = radius;\n        this.angle = angle;\n        this.padding = padding;\n    }\n\n    if ( Filter ) TwistFilter.__proto__ = Filter;\n    TwistFilter.prototype = Object.create( Filter && Filter.prototype );\n    TwistFilter.prototype.constructor = TwistFilter;\n\n    var prototypeAccessors = { offset: { configurable: true },radius: { configurable: true },angle: { configurable: true } };\n\n    /**\n     * This point describes the the offset of the twist.\n     *\n     * @member {PIXI.Point}\n     */\n    prototypeAccessors.offset.get = function () {\n        return this.uniforms.offset;\n    };\n    prototypeAccessors.offset.set = function (value) {\n        this.uniforms.offset = value;\n    };\n\n    /**\n     * The radius of the twist.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.radius.get = function () {\n        return this.uniforms.radius;\n    };\n    prototypeAccessors.radius.set = function (value) {\n        this.uniforms.radius = value;\n    };\n\n    /**\n     * The angle of the twist.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.angle.get = function () {\n        return this.uniforms.angle;\n    };\n    prototypeAccessors.angle.set = function (value) {\n        this.uniforms.angle = value;\n    };\n\n    Object.defineProperties( TwistFilter.prototype, prototypeAccessors );\n\n    return TwistFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLXR3aXN0L2xpYi9maWx0ZXItdHdpc3QuZXNtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9Ud2lzdEZpbHRlci5qcz84Yjc0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dmVydGV4fSBmcm9tICdAdG9vbHMvZnJhZ21lbnRzJztcbmltcG9ydCBmcmFnbWVudCBmcm9tICcuL3R3aXN0LmZyYWcnO1xuaW1wb3J0IHtGaWx0ZXJ9IGZyb20gJ0BwaXhpL2NvcmUnO1xuXG4vKipcbiAqIFRoaXMgZmlsdGVyIGFwcGxpZXMgYSB0d2lzdCBlZmZlY3QgbWFraW5nIGRpc3BsYXkgb2JqZWN0cyBhcHBlYXIgdHdpc3RlZCBpbiB0aGUgZ2l2ZW4gZGlyZWN0aW9uLjxicj5cbiAqICFbb3JpZ2luYWxdKC4uL3Rvb2xzL3NjcmVlbnNob3RzL2Rpc3Qvb3JpZ2luYWwucG5nKSFbZmlsdGVyXSguLi90b29scy9zY3JlZW5zaG90cy9kaXN0L3R3aXN0LnBuZylcbiAqXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIFBJWEkuRmlsdGVyXG4gKiBAbWVtYmVyb2YgUElYSS5maWx0ZXJzXG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9AcGl4aS9maWx0ZXItdHdpc3R8QHBpeGkvZmlsdGVyLXR3aXN0fVxuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvcGl4aS1maWx0ZXJzfHBpeGktZmlsdGVyc31cbiAqIEBwYXJhbSB7bnVtYmVyfSBbcmFkaXVzPTIwMF0gVGhlIHJhZGl1cyBvZiB0aGUgdHdpc3QuXG4gKiBAcGFyYW0ge251bWJlcn0gW2FuZ2xlPTRdIFRoZSBhbmdsZSBvZiB0aGUgdHdpc3QuXG4gKiBAcGFyYW0ge251bWJlcn0gW3BhZGRpbmc9MjBdIFBhZGRpbmcgZm9yIGZpbHRlciBhcmVhLlxuICovXG5jbGFzcyBUd2lzdEZpbHRlciBleHRlbmRzIEZpbHRlciB7XG4gICAgY29uc3RydWN0b3IocmFkaXVzID0gMjAwLCBhbmdsZSA9IDQsIHBhZGRpbmcgPSAyMCkge1xuICAgICAgICBzdXBlcih2ZXJ0ZXgsIGZyYWdtZW50KTtcblxuICAgICAgICB0aGlzLnJhZGl1cyA9IHJhZGl1cztcbiAgICAgICAgdGhpcy5hbmdsZSA9IGFuZ2xlO1xuICAgICAgICB0aGlzLnBhZGRpbmcgPSBwYWRkaW5nO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoaXMgcG9pbnQgZGVzY3JpYmVzIHRoZSB0aGUgb2Zmc2V0IG9mIHRoZSB0d2lzdC5cbiAgICAgKlxuICAgICAqIEBtZW1iZXIge1BJWEkuUG9pbnR9XG4gICAgICovXG4gICAgZ2V0IG9mZnNldCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudW5pZm9ybXMub2Zmc2V0O1xuICAgIH1cbiAgICBzZXQgb2Zmc2V0KHZhbHVlKSB7XG4gICAgICAgIHRoaXMudW5pZm9ybXMub2Zmc2V0ID0gdmFsdWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIHJhZGl1cyBvZiB0aGUgdHdpc3QuXG4gICAgICpcbiAgICAgKiBAbWVtYmVyIHtudW1iZXJ9XG4gICAgICovXG4gICAgZ2V0IHJhZGl1cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudW5pZm9ybXMucmFkaXVzO1xuICAgIH1cbiAgICBzZXQgcmFkaXVzKHZhbHVlKSB7XG4gICAgICAgIHRoaXMudW5pZm9ybXMucmFkaXVzID0gdmFsdWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIGFuZ2xlIG9mIHRoZSB0d2lzdC5cbiAgICAgKlxuICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgKi9cbiAgICBnZXQgYW5nbGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnVuaWZvcm1zLmFuZ2xlO1xuICAgIH1cbiAgICBzZXQgYW5nbGUodmFsdWUpIHtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy5hbmdsZSA9IHZhbHVlO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgVHdpc3RGaWx0ZXIgfTtcblxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFDQTtBQUNBOzs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBNUNBO0FBQ0E7OyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-twist/lib/filter-twist.esm.js\n");

/***/ }),

/***/ "./node_modules/@pixi/filter-zoom-blur/lib/filter-zoom-blur.esm.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@pixi/filter-zoom-blur/lib/filter-zoom-blur.esm.js ***!
  \*************************************************************************/
/*! exports provided: ZoomBlurFilter */
/*! exports used: ZoomBlurFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ZoomBlurFilter; });\n/* harmony import */ var _pixi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/core */ \"./node_modules/@pixi/core/lib/core.es.js\");\n/*!\n * @pixi/filter-zoom-blur - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-zoom-blur is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\n\\nuniform vec2 uCenter;\\nuniform float uStrength;\\nuniform float uInnerRadius;\\nuniform float uRadius;\\n\\nconst float MAX_KERNEL_SIZE = 32.0;\\n\\n// author: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\\nhighp float rand(vec2 co, float seed) {\\n    const highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n    highp float dt = dot(co + seed, vec2(a, b)), sn = mod(dt, 3.14159);\\n    return fract(sin(sn) * c + seed);\\n}\\n\\nvoid main() {\\n\\n    float minGradient = uInnerRadius * 0.3;\\n    float innerRadius = (uInnerRadius + minGradient * 0.5) / filterArea.x;\\n\\n    float gradient = uRadius * 0.3;\\n    float radius = (uRadius - gradient * 0.5) / filterArea.x;\\n\\n    float countLimit = MAX_KERNEL_SIZE;\\n\\n    vec2 dir = vec2(uCenter.xy / filterArea.xy - vTextureCoord);\\n    float dist = length(vec2(dir.x, dir.y * filterArea.y / filterArea.x));\\n\\n    float strength = uStrength;\\n\\n    float delta = 0.0;\\n    float gap;\\n    if (dist < innerRadius) {\\n        delta = innerRadius - dist;\\n        gap = minGradient;\\n    } else if (radius >= 0.0 && dist > radius) { // radius < 0 means it's infinity\\n        delta = dist - radius;\\n        gap = gradient;\\n    }\\n\\n    if (delta > 0.0) {\\n        float normalCount = gap / filterArea.x;\\n        delta = (normalCount - delta) / normalCount;\\n        countLimit *= delta;\\n        strength *= delta;\\n        if (countLimit < 1.0)\\n        {\\n            gl_FragColor = texture2D(uSampler, vTextureCoord);\\n            return;\\n        }\\n    }\\n\\n    // randomize the lookup values to hide the fixed number of samples\\n    float offset = rand(vTextureCoord, 0.0);\\n\\n    float total = 0.0;\\n    vec4 color = vec4(0.0);\\n\\n    dir *= strength;\\n\\n    for (float t = 0.0; t < MAX_KERNEL_SIZE; t++) {\\n        float percent = (t + offset) / MAX_KERNEL_SIZE;\\n        float weight = 4.0 * (percent - percent * percent);\\n        vec2 p = vTextureCoord + dir * percent;\\n        vec4 sample = texture2D(uSampler, p);\\n\\n        // switch to pre-multiplied alpha to correctly blur transparent images\\n        // sample.rgb *= sample.a;\\n\\n        color += sample * weight;\\n        total += weight;\\n\\n        if (t > countLimit){\\n            break;\\n        }\\n    }\\n\\n    color /= total;\\n    // switch back from pre-multiplied alpha\\n    // color.rgb /= color.a + 0.00001;\\n\\n    gl_FragColor = color;\\n}\\n\";\n\n/**\n * The ZoomFilter applies a Zoom blur to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/zoom-blur.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-zoom-blur|@pixi/filter-zoom-blur}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {number} [strength=0.1] Sets the strength of the zoom blur effect\n * @param {PIXI.Point|number[]} [center=[0,0]] The center of the zoom.\n * @param {number} [innerRadius=0] The inner radius of zoom. The part in inner circle won't apply zoom blur effect.\n * @param {number} [radius=-1] See `radius` property.\n */\nvar ZoomBlurFilter = /*@__PURE__*/(function (Filter) {\n    function ZoomBlurFilter(strength, center, innerRadius, radius) {\n        if ( strength === void 0 ) strength = 0.1;\n        if ( center === void 0 ) center = [0, 0];\n        if ( innerRadius === void 0 ) innerRadius = 0;\n        if ( radius === void 0 ) radius = -1;\n\n        Filter.call(this, vertex, fragment);\n\n        this.center = center;\n        this.strength = strength;\n        this.innerRadius = innerRadius;\n        this.radius = radius;\n    }\n\n    if ( Filter ) ZoomBlurFilter.__proto__ = Filter;\n    ZoomBlurFilter.prototype = Object.create( Filter && Filter.prototype );\n    ZoomBlurFilter.prototype.constructor = ZoomBlurFilter;\n\n    var prototypeAccessors = { center: { configurable: true },strength: { configurable: true },innerRadius: { configurable: true },radius: { configurable: true } };\n\n    /**\n     * Center of the effect.\n     *\n     * @member {PIXI.Point|number[]}\n     * @default [0, 0]\n     */\n    prototypeAccessors.center.get = function () {\n        return this.uniforms.uCenter;\n    };\n    prototypeAccessors.center.set = function (value) {\n        this.uniforms.uCenter = value;\n    };\n\n    /**\n     * Intensity of the zoom effect.\n     *\n     * @member {number}\n     * @default 0.1\n     */\n    prototypeAccessors.strength.get = function () {\n        return this.uniforms.uStrength;\n    };\n    prototypeAccessors.strength.set = function (value) {\n        this.uniforms.uStrength = value;\n    };\n\n    /**\n     * Radius of the inner region not effected by blur.\n     *\n     * @member {number}\n     * @default 0\n     */\n    prototypeAccessors.innerRadius.get = function () {\n        return this.uniforms.uInnerRadius;\n    };\n    prototypeAccessors.innerRadius.set = function (value) {\n        this.uniforms.uInnerRadius = value;\n    };\n\n    /**\n     * Outer radius of the effect. The default value is `-1`.\n     * `< 0.0` means it's infinity.\n     *\n     * @member {number}\n     * @default -1\n     */\n    prototypeAccessors.radius.get = function () {\n        return this.uniforms.uRadius;\n    };\n    prototypeAccessors.radius.set = function (value) {\n        if (value < 0 || value === Infinity) {\n            value = -1;\n        }\n        this.uniforms.uRadius = value;\n    };\n\n    Object.defineProperties( ZoomBlurFilter.prototype, prototypeAccessors );\n\n    return ZoomBlurFilter;\n}(_pixi_core__WEBPACK_IMPORTED_MODULE_0__[/* Filter */ \"n\"]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBpeGkvZmlsdGVyLXpvb20tYmx1ci9saWIvZmlsdGVyLXpvb20tYmx1ci5lc20uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL1pvb21CbHVyRmlsdGVyLmpzP2QyMDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHt2ZXJ0ZXh9IGZyb20gJ0B0b29scy9mcmFnbWVudHMnO1xuaW1wb3J0IGZyYWdtZW50IGZyb20gJy4vem9vbS1ibHVyLmZyYWcnO1xuaW1wb3J0IHtGaWx0ZXJ9IGZyb20gJ0BwaXhpL2NvcmUnO1xuXG4vKipcbiAqIFRoZSBab29tRmlsdGVyIGFwcGxpZXMgYSBab29tIGJsdXIgdG8gYW4gb2JqZWN0Ljxicj5cbiAqICFbb3JpZ2luYWxdKC4uL3Rvb2xzL3NjcmVlbnNob3RzL2Rpc3Qvb3JpZ2luYWwucG5nKSFbZmlsdGVyXSguLi90b29scy9zY3JlZW5zaG90cy9kaXN0L3pvb20tYmx1ci5wbmcpXG4gKlxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBQSVhJLkZpbHRlclxuICogQG1lbWJlcm9mIFBJWEkuZmlsdGVyc1xuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvQHBpeGkvZmlsdGVyLXpvb20tYmx1cnxAcGl4aS9maWx0ZXItem9vbS1ibHVyfVxuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvcGl4aS1maWx0ZXJzfHBpeGktZmlsdGVyc31cbiAqIEBwYXJhbSB7bnVtYmVyfSBbc3RyZW5ndGg9MC4xXSBTZXRzIHRoZSBzdHJlbmd0aCBvZiB0aGUgem9vbSBibHVyIGVmZmVjdFxuICogQHBhcmFtIHtQSVhJLlBvaW50fG51bWJlcltdfSBbY2VudGVyPVswLDBdXSBUaGUgY2VudGVyIG9mIHRoZSB6b29tLlxuICogQHBhcmFtIHtudW1iZXJ9IFtpbm5lclJhZGl1cz0wXSBUaGUgaW5uZXIgcmFkaXVzIG9mIHpvb20uIFRoZSBwYXJ0IGluIGlubmVyIGNpcmNsZSB3b24ndCBhcHBseSB6b29tIGJsdXIgZWZmZWN0LlxuICogQHBhcmFtIHtudW1iZXJ9IFtyYWRpdXM9LTFdIFNlZSBgcmFkaXVzYCBwcm9wZXJ0eS5cbiAqL1xuY2xhc3MgWm9vbUJsdXJGaWx0ZXIgZXh0ZW5kcyBGaWx0ZXIge1xuICAgIGNvbnN0cnVjdG9yKHN0cmVuZ3RoID0gMC4xLCBjZW50ZXIgPSBbMCwgMF0sIGlubmVyUmFkaXVzID0gMCwgcmFkaXVzID0gLTEpIHtcbiAgICAgICAgc3VwZXIodmVydGV4LCBmcmFnbWVudCk7XG5cbiAgICAgICAgdGhpcy5jZW50ZXIgPSBjZW50ZXI7XG4gICAgICAgIHRoaXMuc3RyZW5ndGggPSBzdHJlbmd0aDtcbiAgICAgICAgdGhpcy5pbm5lclJhZGl1cyA9IGlubmVyUmFkaXVzO1xuICAgICAgICB0aGlzLnJhZGl1cyA9IHJhZGl1cztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDZW50ZXIgb2YgdGhlIGVmZmVjdC5cbiAgICAgKlxuICAgICAqIEBtZW1iZXIge1BJWEkuUG9pbnR8bnVtYmVyW119XG4gICAgICogQGRlZmF1bHQgWzAsIDBdXG4gICAgICovXG4gICAgZ2V0IGNlbnRlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudW5pZm9ybXMudUNlbnRlcjtcbiAgICB9XG4gICAgc2V0IGNlbnRlcih2YWx1ZSkge1xuICAgICAgICB0aGlzLnVuaWZvcm1zLnVDZW50ZXIgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBJbnRlbnNpdHkgb2YgdGhlIHpvb20gZWZmZWN0LlxuICAgICAqXG4gICAgICogQG1lbWJlciB7bnVtYmVyfVxuICAgICAqIEBkZWZhdWx0IDAuMVxuICAgICAqL1xuICAgIGdldCBzdHJlbmd0aCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudW5pZm9ybXMudVN0cmVuZ3RoO1xuICAgIH1cbiAgICBzZXQgc3RyZW5ndGgodmFsdWUpIHtcbiAgICAgICAgdGhpcy51bmlmb3Jtcy51U3RyZW5ndGggPSB2YWx1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSYWRpdXMgb2YgdGhlIGlubmVyIHJlZ2lvbiBub3QgZWZmZWN0ZWQgYnkgYmx1ci5cbiAgICAgKlxuICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgKiBAZGVmYXVsdCAwXG4gICAgICovXG4gICAgZ2V0IGlubmVyUmFkaXVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy51bmlmb3Jtcy51SW5uZXJSYWRpdXM7XG4gICAgfVxuICAgIHNldCBpbm5lclJhZGl1cyh2YWx1ZSkge1xuICAgICAgICB0aGlzLnVuaWZvcm1zLnVJbm5lclJhZGl1cyA9IHZhbHVlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE91dGVyIHJhZGl1cyBvZiB0aGUgZWZmZWN0LiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBgLTFgLlxuICAgICAqIGA8IDAuMGAgbWVhbnMgaXQncyBpbmZpbml0eS5cbiAgICAgKlxuICAgICAqIEBtZW1iZXIge251bWJlcn1cbiAgICAgKiBAZGVmYXVsdCAtMVxuICAgICAqL1xuICAgIGdldCByYWRpdXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnVuaWZvcm1zLnVSYWRpdXM7XG4gICAgfVxuICAgIHNldCByYWRpdXModmFsdWUpIHtcbiAgICAgICAgaWYgKHZhbHVlIDwgMCB8fCB2YWx1ZSA9PT0gSW5maW5pdHkpIHtcbiAgICAgICAgICAgIHZhbHVlID0gLTE7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy51bmlmb3Jtcy51UmFkaXVzID0gdmFsdWU7XG4gICAgfVxufVxuXG5leHBvcnQgeyBab29tQmx1ckZpbHRlciB9O1xuXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBQ0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQWpFQTtBQUNBOzsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@pixi/filter-zoom-blur/lib/filter-zoom-blur.esm.js\n");

/***/ }),

/***/ "./node_modules/pixi-filters/lib/pixi-filters.esm.js":
/*!***********************************************************!*\
  !*** ./node_modules/pixi-filters/lib/pixi-filters.esm.js ***!
  \***********************************************************/
/*! exports provided: AdjustmentFilter, AdvancedBloomFilter, AsciiFilter, BevelFilter, BloomFilter, BulgePinchFilter, ColorMapFilter, ColorReplaceFilter, ConvolutionFilter, CrossHatchFilter, CRTFilter, DotFilter, DropShadowFilter, EmbossFilter, GlitchFilter, GlowFilter, GodrayFilter, KawaseBlurFilter, MotionBlurFilter, MultiColorReplaceFilter, OldFilmFilter, OutlineFilter, PixelateFilter, RadialBlurFilter, ReflectionFilter, RGBSplitFilter, ShockwaveFilter, SimpleLightmapFilter, TiltShiftAxisFilter, TiltShiftFilter, TiltShiftXFilter, TiltShiftYFilter, TwistFilter, ZoomBlurFilter */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _pixi_filter_adjustment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pixi/filter-adjustment */ \"./node_modules/@pixi/filter-adjustment/lib/filter-adjustment.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AdjustmentFilter\", function() { return _pixi_filter_adjustment__WEBPACK_IMPORTED_MODULE_0__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_advanced_bloom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pixi/filter-advanced-bloom */ \"./node_modules/@pixi/filter-advanced-bloom/lib/filter-advanced-bloom.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AdvancedBloomFilter\", function() { return _pixi_filter_advanced_bloom__WEBPACK_IMPORTED_MODULE_1__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_ascii__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @pixi/filter-ascii */ \"./node_modules/@pixi/filter-ascii/lib/filter-ascii.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AsciiFilter\", function() { return _pixi_filter_ascii__WEBPACK_IMPORTED_MODULE_2__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_bevel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @pixi/filter-bevel */ \"./node_modules/@pixi/filter-bevel/lib/filter-bevel.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BevelFilter\", function() { return _pixi_filter_bevel__WEBPACK_IMPORTED_MODULE_3__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_bloom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @pixi/filter-bloom */ \"./node_modules/@pixi/filter-bloom/lib/filter-bloom.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BloomFilter\", function() { return _pixi_filter_bloom__WEBPACK_IMPORTED_MODULE_4__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_bulge_pinch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @pixi/filter-bulge-pinch */ \"./node_modules/@pixi/filter-bulge-pinch/lib/filter-bulge-pinch.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BulgePinchFilter\", function() { return _pixi_filter_bulge_pinch__WEBPACK_IMPORTED_MODULE_5__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_color_map__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @pixi/filter-color-map */ \"./node_modules/@pixi/filter-color-map/lib/filter-color-map.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColorMapFilter\", function() { return _pixi_filter_color_map__WEBPACK_IMPORTED_MODULE_6__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_color_replace__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @pixi/filter-color-replace */ \"./node_modules/@pixi/filter-color-replace/lib/filter-color-replace.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColorReplaceFilter\", function() { return _pixi_filter_color_replace__WEBPACK_IMPORTED_MODULE_7__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_convolution__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @pixi/filter-convolution */ \"./node_modules/@pixi/filter-convolution/lib/filter-convolution.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ConvolutionFilter\", function() { return _pixi_filter_convolution__WEBPACK_IMPORTED_MODULE_8__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_cross_hatch__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @pixi/filter-cross-hatch */ \"./node_modules/@pixi/filter-cross-hatch/lib/filter-cross-hatch.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CrossHatchFilter\", function() { return _pixi_filter_cross_hatch__WEBPACK_IMPORTED_MODULE_9__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_crt__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @pixi/filter-crt */ \"./node_modules/@pixi/filter-crt/lib/filter-crt.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CRTFilter\", function() { return _pixi_filter_crt__WEBPACK_IMPORTED_MODULE_10__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_dot__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @pixi/filter-dot */ \"./node_modules/@pixi/filter-dot/lib/filter-dot.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DotFilter\", function() { return _pixi_filter_dot__WEBPACK_IMPORTED_MODULE_11__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_drop_shadow__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @pixi/filter-drop-shadow */ \"./node_modules/@pixi/filter-drop-shadow/lib/filter-drop-shadow.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DropShadowFilter\", function() { return _pixi_filter_drop_shadow__WEBPACK_IMPORTED_MODULE_12__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_emboss__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @pixi/filter-emboss */ \"./node_modules/@pixi/filter-emboss/lib/filter-emboss.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EmbossFilter\", function() { return _pixi_filter_emboss__WEBPACK_IMPORTED_MODULE_13__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_glitch__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @pixi/filter-glitch */ \"./node_modules/@pixi/filter-glitch/lib/filter-glitch.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"GlitchFilter\", function() { return _pixi_filter_glitch__WEBPACK_IMPORTED_MODULE_14__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_glow__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @pixi/filter-glow */ \"./node_modules/@pixi/filter-glow/lib/filter-glow.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"GlowFilter\", function() { return _pixi_filter_glow__WEBPACK_IMPORTED_MODULE_15__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_godray__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @pixi/filter-godray */ \"./node_modules/@pixi/filter-godray/lib/filter-godray.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"GodrayFilter\", function() { return _pixi_filter_godray__WEBPACK_IMPORTED_MODULE_16__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_kawase_blur__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @pixi/filter-kawase-blur */ \"./node_modules/@pixi/filter-kawase-blur/lib/filter-kawase-blur.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"KawaseBlurFilter\", function() { return _pixi_filter_kawase_blur__WEBPACK_IMPORTED_MODULE_17__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_motion_blur__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @pixi/filter-motion-blur */ \"./node_modules/@pixi/filter-motion-blur/lib/filter-motion-blur.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MotionBlurFilter\", function() { return _pixi_filter_motion_blur__WEBPACK_IMPORTED_MODULE_18__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_multi_color_replace__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @pixi/filter-multi-color-replace */ \"./node_modules/@pixi/filter-multi-color-replace/lib/filter-multi-color-replace.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MultiColorReplaceFilter\", function() { return _pixi_filter_multi_color_replace__WEBPACK_IMPORTED_MODULE_19__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_old_film__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @pixi/filter-old-film */ \"./node_modules/@pixi/filter-old-film/lib/filter-old-film.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"OldFilmFilter\", function() { return _pixi_filter_old_film__WEBPACK_IMPORTED_MODULE_20__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_outline__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @pixi/filter-outline */ \"./node_modules/@pixi/filter-outline/lib/filter-outline.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"OutlineFilter\", function() { return _pixi_filter_outline__WEBPACK_IMPORTED_MODULE_21__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_pixelate__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @pixi/filter-pixelate */ \"./node_modules/@pixi/filter-pixelate/lib/filter-pixelate.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PixelateFilter\", function() { return _pixi_filter_pixelate__WEBPACK_IMPORTED_MODULE_22__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_radial_blur__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @pixi/filter-radial-blur */ \"./node_modules/@pixi/filter-radial-blur/lib/filter-radial-blur.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RadialBlurFilter\", function() { return _pixi_filter_radial_blur__WEBPACK_IMPORTED_MODULE_23__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_reflection__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @pixi/filter-reflection */ \"./node_modules/@pixi/filter-reflection/lib/filter-reflection.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ReflectionFilter\", function() { return _pixi_filter_reflection__WEBPACK_IMPORTED_MODULE_24__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_rgb_split__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @pixi/filter-rgb-split */ \"./node_modules/@pixi/filter-rgb-split/lib/filter-rgb-split.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RGBSplitFilter\", function() { return _pixi_filter_rgb_split__WEBPACK_IMPORTED_MODULE_25__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_shockwave__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @pixi/filter-shockwave */ \"./node_modules/@pixi/filter-shockwave/lib/filter-shockwave.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ShockwaveFilter\", function() { return _pixi_filter_shockwave__WEBPACK_IMPORTED_MODULE_26__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_simple_lightmap__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @pixi/filter-simple-lightmap */ \"./node_modules/@pixi/filter-simple-lightmap/lib/filter-simple-lightmap.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SimpleLightmapFilter\", function() { return _pixi_filter_simple_lightmap__WEBPACK_IMPORTED_MODULE_27__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_tilt_shift__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @pixi/filter-tilt-shift */ \"./node_modules/@pixi/filter-tilt-shift/lib/filter-tilt-shift.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TiltShiftAxisFilter\", function() { return _pixi_filter_tilt_shift__WEBPACK_IMPORTED_MODULE_28__[\"a\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TiltShiftFilter\", function() { return _pixi_filter_tilt_shift__WEBPACK_IMPORTED_MODULE_28__[\"b\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TiltShiftXFilter\", function() { return _pixi_filter_tilt_shift__WEBPACK_IMPORTED_MODULE_28__[\"c\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TiltShiftYFilter\", function() { return _pixi_filter_tilt_shift__WEBPACK_IMPORTED_MODULE_28__[\"d\"]; });\n\n/* harmony import */ var _pixi_filter_twist__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @pixi/filter-twist */ \"./node_modules/@pixi/filter-twist/lib/filter-twist.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TwistFilter\", function() { return _pixi_filter_twist__WEBPACK_IMPORTED_MODULE_29__[\"a\"]; });\n\n/* harmony import */ var _pixi_filter_zoom_blur__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @pixi/filter-zoom-blur */ \"./node_modules/@pixi/filter-zoom-blur/lib/filter-zoom-blur.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ZoomBlurFilter\", function() { return _pixi_filter_zoom_blur__WEBPACK_IMPORTED_MODULE_30__[\"a\"]; });\n\n/*!\n * pixi-filters - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * pixi-filters is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * The `PIXI` global object is only provided if using the browser-only versions\n * of [pixi.js](https://www.npmjs.com/pixi.js) or\n * [pixi.js-legacy](https://www.npmjs.com/pixi.js-legacy).\n * This is done typically via the `<script>` HTML element.\n * Bundler like Webpack, Parcel and Rollup do not expose this global object.\n * @namespace PIXI\n * @see http://pixijs.com\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcGl4aS1maWx0ZXJzL2xpYi9waXhpLWZpbHRlcnMuZXNtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9pbmRleC5qcz9hMTc4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlIGBQSVhJYCBnbG9iYWwgb2JqZWN0IGlzIG9ubHkgcHJvdmlkZWQgaWYgdXNpbmcgdGhlIGJyb3dzZXItb25seSB2ZXJzaW9uc1xuICogb2YgW3BpeGkuanNdKGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9waXhpLmpzKSBvclxuICogW3BpeGkuanMtbGVnYWN5XShodHRwczovL3d3dy5ucG1qcy5jb20vcGl4aS5qcy1sZWdhY3kpLlxuICogVGhpcyBpcyBkb25lIHR5cGljYWxseSB2aWEgdGhlIGA8c2NyaXB0PmAgSFRNTCBlbGVtZW50LlxuICogQnVuZGxlciBsaWtlIFdlYnBhY2ssIFBhcmNlbCBhbmQgUm9sbHVwIGRvIG5vdCBleHBvc2UgdGhpcyBnbG9iYWwgb2JqZWN0LlxuICogQG5hbWVzcGFjZSBQSVhJXG4gKiBAc2VlIGh0dHA6Ly9waXhpanMuY29tXG4gKi9cbi8qKlxuICogVGhlIGBQSVhJLmZpbHRlcnNgIGdsb2JhbCBvYmplY3QgaXMgY3JlYXRlZCBieSBbcGl4aS5qc10oaHR0cHM6Ly93d3cubnBtanMuY29tL3BpeGkuanMpXG4gKiBvciBbcGl4aS5qcy1sZWdhY3ldKGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9waXhpLmpzLWxlZ2FjeSkgYW5kIGlzIG9ubHkgYXZhaWxhYmxlXG4gKiB3aXRoIGJyb3dzZXItYmFzZWQgYnVpbGQgb2YgcGl4aS1maWx0ZXJzLiBJZiB1c2luZyBhIGJ1bmRsZXIgbGlrZSBXZWJwYWNrLFxuICogUm9sbHVwIG9yIFBhcmNlbCwgeW91IGNhbiBlaXRoZXIgaW1wb3J0XG4gKiBbcGl4aS1maWx0ZXJzXShodHRwczovL3d3dy5ucG1qcy5jb20vcGl4aS1maWx0ZXJzKSBvciB0aGUgaW5kaXZpZHVhbCBwYWNrYWdlXG4gKiAoYXMgZGVmaW5lZCBvbiBlYWNoIGZpbHRlcidzIGNsYXNzIHBhZ2UpLlxuICogQG5hbWVzcGFjZSBQSVhJLmZpbHRlcnNcbiAqL1xuZXhwb3J0ICogZnJvbSBcIkBwaXhpL2ZpbHRlci1hZGp1c3RtZW50XCI7XG5leHBvcnQgKiBmcm9tIFwiQHBpeGkvZmlsdGVyLWFkdmFuY2VkLWJsb29tXCI7XG5leHBvcnQgKiBmcm9tIFwiQHBpeGkvZmlsdGVyLWFzY2lpXCI7XG5leHBvcnQgKiBmcm9tIFwiQHBpeGkvZmlsdGVyLWJldmVsXCI7XG5leHBvcnQgKiBmcm9tIFwiQHBpeGkvZmlsdGVyLWJsb29tXCI7XG5leHBvcnQgKiBmcm9tIFwiQHBpeGkvZmlsdGVyLWJ1bGdlLXBpbmNoXCI7XG5leHBvcnQgKiBmcm9tIFwiQHBpeGkvZmlsdGVyLWNvbG9yLW1hcFwiO1xuZXhwb3J0ICogZnJvbSBcIkBwaXhpL2ZpbHRlci1jb2xvci1yZXBsYWNlXCI7XG5leHBvcnQgKiBmcm9tIFwiQHBpeGkvZmlsdGVyLWNvbnZvbHV0aW9uXCI7XG5leHBvcnQgKiBmcm9tIFwiQHBpeGkvZmlsdGVyLWNyb3NzLWhhdGNoXCI7XG5leHBvcnQgKiBmcm9tIFwiQHBpeGkvZmlsdGVyLWNydFwiO1xuZXhwb3J0ICogZnJvbSBcIkBwaXhpL2ZpbHRlci1kb3RcIjtcbmV4cG9ydCAqIGZyb20gXCJAcGl4aS9maWx0ZXItZHJvcC1zaGFkb3dcIjtcbmV4cG9ydCAqIGZyb20gXCJAcGl4aS9maWx0ZXItZW1ib3NzXCI7XG5leHBvcnQgKiBmcm9tIFwiQHBpeGkvZmlsdGVyLWdsaXRjaFwiO1xuZXhwb3J0ICogZnJvbSBcIkBwaXhpL2ZpbHRlci1nbG93XCI7XG5leHBvcnQgKiBmcm9tIFwiQHBpeGkvZmlsdGVyLWdvZHJheVwiO1xuZXhwb3J0ICogZnJvbSBcIkBwaXhpL2ZpbHRlci1rYXdhc2UtYmx1clwiO1xuZXhwb3J0ICogZnJvbSBcIkBwaXhpL2ZpbHRlci1tb3Rpb24tYmx1clwiO1xuZXhwb3J0ICogZnJvbSBcIkBwaXhpL2ZpbHRlci1tdWx0aS1jb2xvci1yZXBsYWNlXCI7XG5leHBvcnQgKiBmcm9tIFwiQHBpeGkvZmlsdGVyLW9sZC1maWxtXCI7XG5leHBvcnQgKiBmcm9tIFwiQHBpeGkvZmlsdGVyLW91dGxpbmVcIjtcbmV4cG9ydCAqIGZyb20gXCJAcGl4aS9maWx0ZXItcGl4ZWxhdGVcIjtcbmV4cG9ydCAqIGZyb20gXCJAcGl4aS9maWx0ZXItcmFkaWFsLWJsdXJcIjtcbmV4cG9ydCAqIGZyb20gXCJAcGl4aS9maWx0ZXItcmVmbGVjdGlvblwiO1xuZXhwb3J0ICogZnJvbSBcIkBwaXhpL2ZpbHRlci1yZ2Itc3BsaXRcIjtcbmV4cG9ydCAqIGZyb20gXCJAcGl4aS9maWx0ZXItc2hvY2t3YXZlXCI7XG5leHBvcnQgKiBmcm9tIFwiQHBpeGkvZmlsdGVyLXNpbXBsZS1saWdodG1hcFwiO1xuZXhwb3J0ICogZnJvbSBcIkBwaXhpL2ZpbHRlci10aWx0LXNoaWZ0XCI7XG5leHBvcnQgKiBmcm9tIFwiQHBpeGkvZmlsdGVyLXR3aXN0XCI7XG5leHBvcnQgKiBmcm9tIFwiQHBpeGkvZmlsdGVyLXpvb20tYmx1clwiOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/pixi-filters/lib/pixi-filters.esm.js\n");

/***/ })

}]);